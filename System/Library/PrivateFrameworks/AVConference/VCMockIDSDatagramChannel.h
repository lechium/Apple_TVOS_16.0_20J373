//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <IDS/IDSDatagramChannel.h>

@class NSDictionary, NSLock, NSObject, VCMockIDSDataChannelLinkContext;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface VCMockIDSDatagramChannel : IDSDatagramChannel
{
    NSDictionary *_subscribedStreamsByParticipantID;	// 24 = 0x18
    int _socket;	// 32 = 0x20
    _Bool _isValid;	// 36 = 0x24
    VCMockIDSDataChannelLinkContext *_linkContext;	// 40 = 0x28
    CDUnknownBlockType _eventHandler;	// 48 = 0x30
    CDUnknownBlockType _readHandler;	// 56 = 0x38
    CDUnknownBlockType _readHandlerWithOptions;	// 64 = 0x40
    CDUnknownBlockType _writeDatagramsBlock;	// 72 = 0x48
    CDUnknownBlockType _writeDatagramBlock;	// 80 = 0x50
    CDUnknownBlockType _readyToReadBlock;	// 88 = 0x58
    NSLock *_blockSettingLock;	// 96 = 0x60
    struct _VCSingleLinkedList _datagramPackets;	// 104 = 0x68
    struct __CFAllocator *_datagramPacketAllocator;	// 136 = 0x88
    unsigned long long _datagramPacketNextSequenceNumber;	// 144 = 0x90
    _Bool _usingOptions;	// 152 = 0x98
    double _emulatedRxPLR;	// 160 = 0xa0
    _Bool _doNotDropNackOrRetransmitted;	// 168 = 0xa8
    struct _opaque_pthread_mutex_t _streamSubscriptionLock;	// 176 = 0xb0
    long long _participantGenerationCounter;	// 240 = 0xf0
    _Bool _isTestingOneToOneMode;	// 248 = 0xf8
    unsigned short numPacketSent;	// 250 = 0xfa
    unsigned short numPacketReceived;	// 252 = 0xfc
    int _dataPath;	// 256 = 0x100
    _Bool _idsUPlusOneMode;	// 260 = 0x104
    _Bool _isNackEnabled;	// 261 = 0x105
    unsigned char _packetBuffer[2048][1500];	// 262 = 0x106
    unsigned short _packetBufferDataSize[2048];	// 3072262 = 0x2ee106
    CDStruct_9bf45fcd _packetDatagramOptions[2048];	// 3076360 = 0x2ef108
    NSObject<OS_dispatch_queue> *_directPathReadQueue;	// 3322120 = 0x32b108
}

+ (void)extractRTPData:(char *)arg1 ssrc:(unsigned int *)arg2 sequenceNumber:(unsigned short *)arg3;	// IMP=0x00600000002f833a
@property(readonly) _Bool idsUPlusOneMode; // @synthesize idsUPlusOneMode=_idsUPlusOneMode;
- (void)setUPlusOneMode:(_Bool)arg1 isInitiator:(_Bool)arg2;	// IMP=0x00000000002fb970
- (void)flushLinkProbingStatusWithOptions:(id)arg1;	// IMP=0x00000000002fb96a
- (void)queryStatusWithOptions:(id)arg1;	// IMP=0x00000000002fb964
- (void)stopActiveProbingWithOptions:(id)arg1;	// IMP=0x00000000002fb95e
- (void)queryProbingResultsWithOptions:(id)arg1;	// IMP=0x00000000002fb958
- (void)startActiveProbingWithOptions:(id)arg1;	// IMP=0x00000000002fb952
- (void)setWiFiAssist:(_Bool)arg1;	// IMP=0x00000000002fb94c
- (void)osChannelInfoLog;	// IMP=0x00000000002fb946
- (void)handlePacket:(struct _VCMockIDSDatagramChannelPacket *)arg1 packetHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000002fb8d5
- (void)retrieveAndProcessMediaPacketsFromBuffer:(struct tagRTCPPACKET *)arg1 packetHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000002fb834
- (void)retrieveAndProcesOnePacket:(unsigned int)arg1 seq:(unsigned short)arg2 count:(int)arg3 index:(int)arg4;	// IMP=0x00000000002faf3b
- (void)addMediaPacketToBuffer:(char *)arg1 length:(unsigned long long)arg2 datagramOptions:(CDStruct_9bf45fcd)arg3;	// IMP=0x00000000002facd8
- (void)processPacket:(struct _VCMockIDSDatagramChannelPacket *)arg1 packetHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000002faa71
- (void)printDroppedPacketInfo:(struct _VCMockIDSDatagramChannelPacket *)arg1;	// IMP=0x00000000002fa697
- (struct _VCMockIDSDatagramChannelPacket *)constructPacket:(struct _VCMockIDSDatagramChannelPacket *)arg1 datagram:(const void *)arg2 datagramSize:(unsigned int)arg3 datagramOptions:(CDStruct_9bf45fcd *)arg4;	// IMP=0x00000000002fa5c3
- (int)readyToRead;	// IMP=0x00000000002fa4f8
- (int)drainUnderlyingFileDescriptor;	// IMP=0x00000000002fa44c
- (int)underlyingFileDescriptor;	// IMP=0x00000000002fa367
- (_Bool)createSocket;	// IMP=0x00000000002fa2c8
- (void)reportFirstPacketTimeForMKI:(id)arg1;	// IMP=0x00000000002fa20d
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00000000002f9d1e
- (void)setChannelPreferences:(id)arg1;	// IMP=0x00000000002f9a1c
- (void)setReadHandlerWithOptions:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f99d0
- (void)setReadHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f9984
- (void)setEventHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f9672
- (void)start;	// IMP=0x00000000002f95b7
- (void)invalidate;	// IMP=0x00000000002f931c
- (_Bool)processDatagramForDirectIDSDataPath:(const void *)arg1 datagramSize:(unsigned int)arg2 datagramOptions:(CDStruct_9bf45fcd *)arg3 error:(id *)arg4;	// IMP=0x00000000002f9120
- (void)writeDatagrams:(const void **)arg1 datagramsSize:(unsigned int *)arg2 datagramsInfo:(CDStruct_4aae7d13 *)arg3 datagramsCount:(int)arg4 options:(struct **)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00000000002f9003
- (void)writeDatagram:(const void *)arg1 datagramSize:(unsigned int)arg2 datagramInfo:(CDStruct_4aae7d13)arg3 options:(CDStruct_9bf45fcd *)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00000000002f8f45
- (void)readDatagramsWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8e8a
- (void)writeDatagram:(const void *)arg1 datagramSize:(unsigned int)arg2 flags:(CDStruct_4aae7d13)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000002f8dce
- (void)readDatagramWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8d13
- (_Bool)isNACKPacket:(char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000002f8b79
- (_Bool)isRTCPPacket:(char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000002f8b5e
- (_Bool)isMediaPacket:(char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00000000002f8b43
- (void)dequeueDatagramPacket:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8a89
- (_Bool)shouldReadPacket:(struct _VCMockIDSDatagramChannelPacket *)arg1;	// IMP=0x00000000002f870e
- (id)newArrayOfStreamIdsForPacket:(struct _VCMockIDSDatagramChannelPacket *)arg1;	// IMP=0x00000000002f8651
- (_Bool)isControlChannelDatagram:(struct _VCMockIDSDatagramChannelPacket *)arg1;	// IMP=0x00000000002f8641
- (_Bool)enqueueDatagramPacket:(const void *)arg1 datagramSize:(unsigned int)arg2 options:(CDStruct_9bf45fcd *)arg3 error:(id *)arg4;	// IMP=0x00000000002f8367
- (void)signalUnderlyingFileDescriptor;	// IMP=0x00000000002f8290
- (void)setReadyToReadBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8211
- (void)setWriteDatagramBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8192
- (void)setWriteDatagramsBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000000002f8113
- (void)readDatagram:(const void *)arg1 datagramSize:(unsigned int)arg2 datagramOptions:(CDStruct_9bf45fcd *)arg3;	// IMP=0x00000000002f808e
- (void)dealloc;	// IMP=0x00000000002f7fbf
- (void)cleanup;	// IMP=0x00000000002f7e9b
- (void)flushDatagramPacketsList;	// IMP=0x00000000002f7dfc
- (id)initCreateSocketRequiresOptions:(_Bool)arg1 dataPath:(int)arg2;	// IMP=0x00000000002f7c0a
- (id)initRequiresOptions:(_Bool)arg1;	// IMP=0x00000000002f7b5c
- (_Bool)setupMockIDSDatagramChannelRequiresOptions:(_Bool)arg1;	// IMP=0x00000000002f782f

@end

