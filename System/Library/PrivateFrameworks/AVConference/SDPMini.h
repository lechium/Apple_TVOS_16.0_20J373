//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString;

__attribute__((visibility("hidden")))
@interface SDPMini : NSObject
{
    NSString *_sdpUsername;	// 8 = 0x8
    NSMutableDictionary *_audioParameters;	// 16 = 0x10
    NSString *origin;	// 24 = 0x18
    NSMutableArray *audioPayloads;	// 32 = 0x20
    NSMutableArray *secondaryAudioPayloads;	// 40 = 0x28
    NSString *sessionIP;	// 48 = 0x30
    NSNumber *audioRTPPort;	// 56 = 0x38
    NSNumber *audioRTCPPort;	// 64 = 0x40
    NSNumber *audioRTPID;	// 72 = 0x48
    NSNumber *videoRTPID;	// 80 = 0x50
    _Bool allowRTCPFB;	// 88 = 0x58
    NSNumber *answerBandwidth;	// 96 = 0x60
    NSNumber *maxBandwidth;	// 104 = 0x68
    _Bool allowsDynamicMaxBitrate;	// 112 = 0x70
    _Bool allowsContentsChangeWithAspectPreservation;	// 113 = 0x71
    NSDictionary *featureListDict;	// 120 = 0x78
    NSNumber *aacBlockSize;	// 128 = 0x80
    NSNumber *audioUnitModel;	// 136 = 0x88
    _Bool allowAudioRecording;	// 144 = 0x90
    NSString *basebandCodecType;	// 152 = 0x98
    NSNumber *basebandCodecSampleRate;	// 160 = 0xa0
    NSMutableDictionary *_mediaLines;	// 168 = 0xa8
}

+ (_Bool)setPayload:(int)arg1 mediaLine:(id)arg2;	// IMP=0x00600000000fed25
@property(nonatomic) _Bool allowAudioRecording; // @synthesize allowAudioRecording;
@property(nonatomic) _Bool allowsContentsChangeWithAspectPreservation; // @synthesize allowsContentsChangeWithAspectPreservation;
@property(retain, nonatomic) NSNumber *audioUnitModel; // @synthesize audioUnitModel;
@property(retain, nonatomic) NSNumber *aacBlockSize; // @synthesize aacBlockSize;
@property(retain, nonatomic) NSDictionary *featureListDict; // @synthesize featureListDict;
@property(nonatomic) _Bool allowsDynamicMaxBitrate; // @synthesize allowsDynamicMaxBitrate;
@property(retain, nonatomic) NSNumber *maxBandwidth; // @synthesize maxBandwidth;
@property(retain, nonatomic) NSNumber *answerBandwidth; // @synthesize answerBandwidth;
@property(nonatomic) _Bool allowRTCPFB; // @synthesize allowRTCPFB;
@property(retain, nonatomic) NSNumber *audioRTPID; // @synthesize audioRTPID;
@property(retain, nonatomic) NSNumber *audioRTCPPort; // @synthesize audioRTCPPort;
@property(retain, nonatomic) NSNumber *audioRTPPort; // @synthesize audioRTPPort;
@property(retain, nonatomic) NSString *sessionIP; // @synthesize sessionIP;
@property(readonly, nonatomic) NSMutableArray *secondaryAudioPayloads; // @synthesize secondaryAudioPayloads;
@property(readonly, nonatomic) NSMutableArray *audioPayloads; // @synthesize audioPayloads;
@property(retain, nonatomic) NSString *origin; // @synthesize origin;
- (void)getNegotiatedResolutionForPayload:(int)arg1 forInterface:(int)arg2 withRule:(id)arg3 direction:(int)arg4 result:(struct imageTag *)arg5 remoteSupportsHD:(_Bool)arg6 screenSharing:(_Bool)arg7;	// IMP=0x00000000000ff31e
- (void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(struct imageTag *)arg3 count:(int)arg4;	// IMP=0x00000000000ff1f8
- (_Bool)getBasebandCodecType:(id *)arg1 sampleRate:(id *)arg2;	// IMP=0x00000000000ff186
- (void)setBasebandCodecType:(id)arg1 sampleRate:(id)arg2;	// IMP=0x00000000000ff127
- (id)toStringWithVideoEnabled:(_Bool)arg1;	// IMP=0x00000000000fee0d
- (_Bool)setVideoPayloads:(int *)arg1 count:(int)arg2;	// IMP=0x00000000000fed80
- (id)mediaTypeToString:(int)arg1;	// IMP=0x00000000000fed07
- (void)addMediaLine:(id)arg1 mediaType:(int)arg2;	// IMP=0x00000000000feca6
- (id)getMediaLineForType:(int)arg1;	// IMP=0x00000000000fec43
- (void)dealloc;	// IMP=0x00000000000feb5e
- (id)initWithString:(id)arg1;	// IMP=0x00000000000fea51
- (id)init;	// IMP=0x00000000000fe93e
- (id)SDPUsername;	// IMP=0x00000000000fe886
- (id)composeAudioString;	// IMP=0x000000000010013d
- (id)composeAudioFMTPForPayload:(id)arg1;	// IMP=0x0000000000100090
- (id)composeFLSString;	// IMP=0x00000000000fff60
- (id)composeSessionString;	// IMP=0x00000000000ffd70
- (id)composeBandwidthString;	// IMP=0x00000000000ffce8
- (void)parseAudioMediaAttributes:(id)arg1;	// IMP=0x0000000000101627
- (void)parseAudioFormatAttribute:(id)arg1;	// IMP=0x0000000000101368
- (void)parseSessionAttributes:(id)arg1;	// IMP=0x0000000000100cd4
- (id)parseRTCPPort:(id)arg1;	// IMP=0x0000000000100bfa
- (id)parseRTPID:(id)arg1;	// IMP=0x0000000000100b5e
- (void)parseSDPFromString:(id)arg1;	// IMP=0x00000000001009e8
- (void)parseMediaLine:(id)arg1;	// IMP=0x00000000001005b5
- (void)parseBandwidth:(id)arg1;	// IMP=0x0000000000100490
- (id)parseIP:(id)arg1;	// IMP=0x0000000000100438
- (void)setVideoRTCPFB:(_Bool)arg1 useNACK:(_Bool)arg2;	// IMP=0x000000000010221e
- (_Bool)getUseSbr:(_Bool *)arg1 blockSize:(int *)arg2 forAACFormat:(int)arg3;	// IMP=0x0000000000101f9e
- (void)setUseSbr:(_Bool)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3;	// IMP=0x0000000000101eb7
- (void)rulesImageSizeForExternalPayload:(int)arg1 pWidth:(int *)arg2 pHeight:(int *)arg3;	// IMP=0x0000000000101c27
- (int)rulesFramerate:(int)arg1;	// IMP=0x0000000000101a06

@end

