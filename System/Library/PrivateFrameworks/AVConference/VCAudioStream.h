//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCStatisticsCollector, DTMFEventHandler, NSMutableArray, NSNumber, NSObject, NSString, VCAudioIO, VCAudioPayload, VCAudioPowerSpectrumSource, VCAudioTransmitter, VCTelephonyInterface, WRMClient;
@protocol OS_dispatch_source, VCMediaStreamSyncSourceDelegate;

__attribute__((visibility("hidden")))
@interface VCAudioStream
{
    int _clientPid;	// 532 = 0x214
    int numBufferBytesAvailable;	// 536 = 0x218
    NSObject<OS_dispatch_source> *pausedAudioHeartBeat;	// 544 = 0x220
    double dAudioHostTime;	// 552 = 0x228
    _Bool lastVoiceActive;	// 560 = 0x230
    double _remoteMediaStallTimeout;	// 568 = 0x238
    unsigned int conferenceID;	// 576 = 0x240
    unsigned int lastInputAudioTimeStamp;	// 580 = 0x244
    unsigned int lastSentAudioSampleTime;	// 584 = 0x248
    struct _opaque_pthread_rwlock_t stateLock;	// 592 = 0x250
    NSMutableArray *audioPayloads;	// 792 = 0x318
    struct tagVCAudioFrameFormat _vpioFormat;	// 800 = 0x320
    _Bool _useExternalIO;	// 848 = 0x350
    int preferredAudioCodec;	// 852 = 0x354
    DTMFEventHandler *dtmfEventHandler;	// 856 = 0x358
    WRMClient *wrmClient;	// 864 = 0x360
    VCAudioPayload *currentAudioPayload;	// 872 = 0x368
    VCAudioPayload *currentDTXPayload;	// 880 = 0x370
    VCAudioTransmitter *_audioTransmitter;	// 888 = 0x378
    int _reportingModuleID;	// 896 = 0x380
    VCTelephonyInterface *_telephonyInterface;	// 904 = 0x388
    _Bool isValid;	// 912 = 0x390
    int deviceRole;	// 916 = 0x394
    id syncSourceDelegate;	// 920 = 0x398
    VCAudioIO *_audioIO;	// 928 = 0x3a0
    _Bool _isMuted;	// 936 = 0x3a8
    unsigned int *_reportingSSRCList;	// 944 = 0x3b0
    unsigned int _reportingSSRCCount;	// 952 = 0x3b8
    _Bool _sendActiveVoiceOnly;	// 956 = 0x3bc
    _Bool _currentDTXEnable;	// 957 = 0x3bd
    NSNumber *_targetStreamID;	// 960 = 0x3c0
    _Bool _rtpEnabledBeforeInterrupt;	// 968 = 0x3c8
    _Bool _rtcpEnabledBeforeInterrupt;	// 969 = 0x3c9
    unsigned int _pullAudioSamplesCount;	// 972 = 0x3cc
    struct _VCAudioStreamSinkContext _sinkContext;	// 976 = 0x3d0
    struct _VCAudioStreamSourceContext _sourceContext;	// 992 = 0x3e0
    long long _inputAudioPowerSpectrumToken;	// 1176 = 0x498
    long long _outputAudioPowerSpectrumToken;	// 1184 = 0x4a0
    VCAudioPowerSpectrumSource *_inputAudioPowerSpectrumSource;	// 1192 = 0x4a8
    VCAudioPowerSpectrumSource *_outputAudioPowerSpectrumSource;	// 1200 = 0x4b0
    unsigned int _abnormalOWRDCount;	// 1208 = 0x4b8
    double _lastAbnormalOWRDVerificationTime;	// 1216 = 0x4c0
    double _lastNetworkHealthPrintTime;	// 1224 = 0x4c8
    double _packetLossRateAccum;	// 1232 = 0x4d0
    int _packetLossRateCount;	// 1240 = 0x4d8
    double _packetLossRate5Secs;	// 1248 = 0x4e0
    double _timeLastPLR5Secs;	// 1256 = 0x4e8
    _Bool _anbrEnabled;	// 1264 = 0x4f0
    _Bool _anbrActive;	// 1265 = 0x4f1
    struct ifnet_interface_advisory _lastNWConnectionNotification;	// 1272 = 0x4f8
    unsigned int _awdTimeTransmitter;	// 1368 = 0x558
    unsigned int _lastNoVoiceActivityPacketCount;	// 1372 = 0x55c
    unsigned int _preferredMediaBitrate;	// 1376 = 0x560
    AVCStatisticsCollector *_statsCollector;	// 1384 = 0x568
    _Bool _enableAudioPowerSpectrum;	// 1392 = 0x570
}

+ (_Bool)shouldUseRandomRTPTimestampForMode:(int)arg1;	// IMP=0x00100000000aad36
+ (id)capabilities;	// IMP=0x00100000000a8699
+ (id)supportedAudioPayloads;	// IMP=0x00100000000a85d0
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x00100000000a5a8e
+ (unsigned char)audioIODirectionWithMediaStreamDirection:(long long)arg1;	// IMP=0x00100000000a582e
+ (int)operatingModeForAudioStreamMode:(long long)arg1;	// IMP=0x00100000000a580e
+ (id)newPayloadConfigForCodecConfig:(id)arg1 streamConfig:(id)arg2 inputSampleRate:(unsigned int)arg3;	// IMP=0x00100000000a3e54
+ (_Bool)shouldUseAACELDSBRForMode:(long long)arg1;	// IMP=0x00100000000a3e47
@property(nonatomic) unsigned int lastNoVoiceActivityPacketCount; // @synthesize lastNoVoiceActivityPacketCount=_lastNoVoiceActivityPacketCount;
@property(retain, nonatomic) NSNumber *targetStreamID; // @synthesize targetStreamID=_targetStreamID;
@property(nonatomic, getter=isCurrentDTXEnabled) _Bool currentDTXEnable; // @synthesize currentDTXEnable=_currentDTXEnable;
@property(retain) VCAudioIO *audioIO; // @synthesize audioIO=_audioIO;
@property(retain) VCAudioTransmitter *audioTransmitter; // @synthesize audioTransmitter=_audioTransmitter;
@property(nonatomic) int deviceRole; // @synthesize deviceRole;
@property(nonatomic) _Bool isValid; // @synthesize isValid;
@property(readonly) unsigned int conferenceID; // @synthesize conferenceID;
- (void)telephonyInterface:(id)arg1 anbrRecommendation:(unsigned int)arg2 forDirection:(long long)arg3;	// IMP=0x00000000000b0a31
- (void)telephonyInterface:(id)arg1 anbrActivationUpdate:(_Bool)arg2;	// IMP=0x00000000000b09ec
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x00000000000b099a
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000000b08ff
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000b0859
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000b06e1
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x00000000000b06cf
- (void)didServerDie;	// IMP=0x00000000000b065d
- (void)didResumeAudioIO:(id)arg1;	// IMP=0x00000000000b0595
- (void)didSuspendAudioIO:(id)arg1;	// IMP=0x00000000000b0467
- (void)handleANBR:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000000afea8
- (int)selectCodecBandwidthForCodecRateMode:(int)arg1;	// IMP=0x00000000000afbc1
- (void)handleDownlinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000000afb81
- (void)handleUplinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000000afada
- (void)handleCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000000af898
- (void)notifyCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1 didUpdateBandwidth:(_Bool)arg2 didUpdateBitrate:(_Bool)arg3;	// IMP=0x00000000000af838
- (void)queryAnbrBitrate:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000000af586
- (void)setRemoteCodecTypeAndSampleRate:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000000af51f
- (void)notifyCodecModeChangeToCT:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000000af4b8
- (void)unregisterCodecRateModeChangeNotifications;	// IMP=0x00000000000af49e
- (void)registerActiveAudioStreamChangeNotifications;	// IMP=0x00000000000af2c3
- (void)registerCodecRateModeChangeNotifications;	// IMP=0x00000000000af21b
- (long long)getSyncSourceSampleRate;	// IMP=0x00000000000af208
@property(nonatomic) NSObject<VCMediaStreamSyncSourceDelegate> *syncSourceDelegate; // @synthesize syncSourceDelegate;
- (void)setCanProcessAudio:(_Bool)arg1;	// IMP=0x00000000000af143
- (_Bool)canProcessAudio;	// IMP=0x00000000000af131
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000aee88
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000aee74
- (int)getRatTypeForStreamMode:(long long)arg1;	// IMP=0x00000000000aedd0
- (void)reportingAlgosAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000aecde
- (void)reportInputHostTimeJumpWithSize:(double)arg1;	// IMP=0x00000000000aec29
- (void)reportingAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000ae8ba
- (void)updateCodecPayloadAndBitrateForStartEvent:(int *)arg1 bitrate:(unsigned int *)arg2;	// IMP=0x00000000000ae2e1
- (void)gatherRealtimeStats:(struct __CFDictionary *)arg1;	// IMP=0x00000000000ae295
- (id)getReportingServiceID;	// IMP=0x00000000000ae264
- (struct __CFString *)getReportingClientName;	// IMP=0x00000000000ae1e0
- (int)getReportingClientType;	// IMP=0x00000000000ae1b3
- (struct __CFDictionary *)getClientSpecificUserInfo:(id)arg1;	// IMP=0x00000000000add9e
- (void)setupReportingAgent:(id)arg1;	// IMP=0x00000000000ada09
- (void)setupPeriodicReporting;	// IMP=0x00000000000ad85a
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x00000000000ad591
- (double)rtcpHeartbeatLeeway;	// IMP=0x00000000000ad583
- (void)onSendRTCPPacket;	// IMP=0x00000000000ad3b6
- (void)onRTCPTimeout;	// IMP=0x00000000000ad38d
- (void)onRTPTimeout;	// IMP=0x00000000000ad387
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ad009
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000acda7
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;	// IMP=0x00000000000acd8a
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000acb14
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000ac5d2
- (_Bool)shouldReportNetworkInterfaceType;	// IMP=0x00000000000ac5bb
- (_Bool)shouldResetRTPTimestampOnStart;	// IMP=0x00000000000ac5a4
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000aadda
- (void)setPreferredMediaBitrateWithConfiguration:(id)arg1;	// IMP=0x00000000000aad57
- (id)streamIDsFromTransport;	// IMP=0x00000000000aab05
- (void)cleanupBeforeReconfigure:(id)arg1;	// IMP=0x00000000000aa800
- (void)createReportSSRCListWithStreamConfigs:(id)arg1;	// IMP=0x00000000000aa5d6
- (id)createTransportWithStreamConfig:(id)arg1;	// IMP=0x00000000000aa07a
- (_Bool)setupSourceTransport:(id)arg1;	// IMP=0x00000000000a9f7a
- (_Bool)validateAudioStreamConfigurations:(id)arg1;	// IMP=0x00000000000a9b28
- (void)onCallIDChanged;	// IMP=0x00000000000a99fd
- (id)supportedPayloads;	// IMP=0x00000000000a99e4
- (_Bool)shouldUseNWConnectionBackingSocket;	// IMP=0x00000000000a99dc
@property(readonly, nonatomic) unsigned int actualAudioSendingBitrate;
- (void)setTargetBitrate:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;	// IMP=0x00000000000a9977
- (void)setVCStatistics:(CDStruct_7df19fcb)arg1;	// IMP=0x00000000000a9934
- (CDUnknownFunctionPointerType)pullSamplesCallback;	// IMP=0x00000000000a8c68
@property(readonly, nonatomic) void *realtimeSourceContext;
@property(nonatomic) float volume;
@property(nonatomic, getter=isRemoteMuted) _Bool remoteMuted;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(nonatomic) _Bool sendActiveVoiceOnly;
- (void)setStreamDirection:(long long)arg1;	// IMP=0x00000000000a8984
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000a8908
- (void)cleanupAudio;	// IMP=0x00000000000a8875
- (void)prepareAudio;	// IMP=0x00000000000a8836
- (void)updateSoundMeter:(struct _METER_INFO *)arg1 isInputMeter:(_Bool)arg2 sampleBuffer:(struct opaqueVCAudioBufferList *)arg3;	// IMP=0x00000000000a87c8
- (void)pushSamplesOutputPowerSpectrum:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000a879c
- (void)setFrequencyMeteringEnabled:(_Bool)arg1 meterType:(int)arg2;	// IMP=0x00000000000a874f
- (_Bool)isFrequencyMeteringEnabled:(int)arg1;	// IMP=0x00000000000a873a
- (struct _METER_INFO *)meterWithType:(int)arg1;	// IMP=0x00000000000a8718
- (void)stopSendDTMFEvent;	// IMP=0x00000000000a8599
- (void)sendDTMFEvent:(id)arg1;	// IMP=0x00000000000a8562
- (_Bool)createAudioTransmitter:(long long)arg1 streamIDs:(id)arg2;	// IMP=0x00000000000a7c09
- (_Bool)createAudioReceiver;	// IMP=0x00000000000a6c70
- (void)configureAudioJBAlgos:(struct tagVCAudioReceiverConfig *)arg1;	// IMP=0x00000000000a6aeb
- (int)getPacketsPerBundleForStreamConfig:(id)arg1;	// IMP=0x00000000000a699b
- (void)dealloc;	// IMP=0x00000000000a6577
- (_Bool)setupAudioStreamWithClientPid:(int)arg1 enableAudioPowerSpectrum:(_Bool)arg2;	// IMP=0x00000000000a5d7f
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x00000000000a5c4d
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2 transportSessionID:(unsigned int)arg3;	// IMP=0x00000000000a5bc0
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2;	// IMP=0x00000000000a5b31
- (id)initWithClientPid:(int)arg1;	// IMP=0x00000000000a5aa2
- (void)setupAudioPowerSpectrum;	// IMP=0x00000000000a59ac
- (void)setDeviceRoleForAudioStreamMode:(long long)arg1 direction:(long long)arg2;	// IMP=0x00000000000a5851
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x00000000000a57db
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x00000000000a57b6
- (double)lastReceivedRTCPPacketTime;	// IMP=0x00000000000a5628
- (double)lastReceivedRTPPacketTime;	// IMP=0x00000000000a5612
- (_Bool)setReceiverPayloads;	// IMP=0x00000000000a4ca4
- (void)setDTXPayload:(id)arg1;	// IMP=0x00000000000a49b9
- (id)addAudioPayload:(int)arg1;	// IMP=0x00000000000a4942
- (id)configForPayloadType:(int)arg1;	// IMP=0x00000000000a47ed
- (unsigned int)preferredAudioBitrateForPayload:(int)arg1;	// IMP=0x00000000000a3d07
- (void)getCodecConfigForPayload:(int)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a3994
- (_Bool)setupPayloads;	// IMP=0x00000000000a362b
- (id)getSupportedPayloads;	// IMP=0x00000000000a329a
- (void)stopAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a310a
- (void)startAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a2d17
- (_Bool)generateRTCPXRVoIPMetricsReports:(struct tagVCRTCPXRVoIPMetricsReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000a2914
- (_Bool)generateRTCPXRSummaryReports:(struct tagVCRTCPXRSummaryReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000a268d
- (int)captureMeshMode:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000a243b
- (void)setInputTimestamp:(unsigned int)arg1 packetTimestamp:(int)arg2 hostTime:(double)arg3;	// IMP=0x00000000000a2415
- (void)_computeInternalFormatForStreamConfigurations:(id)arg1;	// IMP=0x00000000000a2114
- (unsigned int)internalSampleRateForCodecType:(long long)arg1;	// IMP=0x00000000000a206b
- (unsigned int)computePacketTimestampWithInputTimestamp:(unsigned int)arg1 numSamples:(int)arg2 hostTime:(double)arg3;	// IMP=0x00000000000a1e10

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

