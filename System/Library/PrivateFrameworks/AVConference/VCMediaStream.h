//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCBasebandCongestionDetector, AVCRateControlFeedbackController, AVCStatisticsCollector, NSArray, NSError, NSMutableArray, NSObject, NSString, VCCallInfoBlob, VCDatagramChannelIDS, VCMediaKeyIndex, VCMediaStreamConfig, VCMediaStreamTransport, VCNetworkFeedbackController, VCTransportSession, VCWeakObjectHolder;
@protocol OS_dispatch_queue, OS_dispatch_source, RTCPReportProvider, VCMediaStreamDelegate, VCMediaStreamNotification, VCMomentsCollectorDelegate;

__attribute__((visibility("hidden")))
@interface VCMediaStream
{
    NSObject<OS_dispatch_queue> *_delegateNotificationQueue;	// 24 = 0x18
    struct _opaque_pthread_mutex_t _streamLock;	// 32 = 0x20
    VCDatagramChannelIDS *_datagramChannel;	// 96 = 0x60
    NSString *_idsDestination;	// 104 = 0x68
    id <VCMediaStreamDelegate> _delegate;	// 112 = 0x70
    id <VCMomentsCollectorDelegate> _momentsCollectorDelegate;	// 120 = 0x78
    NSString *_callID;	// 128 = 0x80
    _Bool _isSRTPInitialized;	// 136 = 0x88
    _Bool _useRandomTS;	// 137 = 0x89
    _Bool _isReportingAgentOwner;	// 138 = 0x8a
    double _rtpTimeoutEnabledTime;	// 144 = 0x90
    double _rtcpTimeoutEnabledTime;	// 152 = 0x98
    double _decryptionTimeoutEnabledTime;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_rtcpSendHeartbeat;	// 168 = 0xa8
    NSObject<OS_dispatch_source> *_timeoutHeartbeat;	// 176 = 0xb0
    _Bool _rtcpHeartbeatCancelled;	// 184 = 0xb8
    double _lastRTPTimeoutReportTime;	// 192 = 0xc0
    double _lastRTCPTimeoutReportTime;	// 200 = 0xc8
    double _lastDecryptionTimeoutReportTime;	// 208 = 0xd0
    double _lastDecryptionMKMRecoveryTime;	// 216 = 0xd8
    double _decryptionErrorStartTime;	// 224 = 0xe0
    unsigned int _localSSRC;	// 232 = 0xe8
    unsigned int _transportSessionID;	// 236 = 0xec
    int _clientPID;	// 240 = 0xf0
    VCWeakObjectHolder *_notificationDelegate;	// 248 = 0xf8
    VCWeakObjectHolder *_rtcpReportProvider;	// 256 = 0x100
    int _operatingMode;	// 264 = 0x108
    struct _VCMediaStreamTransportSetupInfo _transportSetupInfo;	// 272 = 0x110
    NSMutableArray *_transportArray;	// 376 = 0x178
    CDUnknownFunctionPointerType _vcMediaCallback;	// 384 = 0x180
    struct tagVCMediaQueue *_mediaQueue;	// 392 = 0x188
    VCMediaKeyIndex *_lastReceivedMKI;	// 400 = 0x190
    VCCallInfoBlob *_remoteEndpointInfo;	// 408 = 0x198
    VCTransportSession *_transportSession;	// 416 = 0x1a0
    NSError *_cachedError;	// 424 = 0x1a8
    CDUnknownFunctionPointerType _notificationHandler;	// 432 = 0x1b0
    CDUnknownFunctionPointerType _packetEventHandler;	// 440 = 0x1b8
    struct tagVCNWConnectionMonitor *_nwMonitor;	// 448 = 0x1c0
    long long _streamToken;	// 456 = 0x1c8
    void *_mediaControlInfoGenerator;	// 464 = 0x1d0
    void *_oneToOneControlInfoGenerator;	// 472 = 0x1d8
    unsigned int _mediaControlInfoGeneratorType;	// 480 = 0x1e0
    AVCRateControlFeedbackController *_feedbackController;	// 488 = 0x1e8
    AVCRateControlFeedbackController *_oneToOneFeedbackController;	// 496 = 0x1f0
    _Bool _mediaControlInfoCallbacksRegistered;	// 504 = 0x1f8
    CDUnknownFunctionPointerType _statisticsHandler;	// 512 = 0x200
    VCNetworkFeedbackController *_networkFeedbackController;	// 520 = 0x208
    _Bool _isWRMinitialized;	// 528 = 0x210
    _Bool _isServerPacketRetransmissionEnabled;	// 529 = 0x211
    _Bool _isNWMonitorSignalEnabled;	// 530 = 0x212
    NSArray *_compoundStreamIDs;	// 536 = 0x218
    _Bool _isRTTBasedFIRThrottlingEnabled;	// 544 = 0x220
    _Bool _areStatisticsRegistered;	// 545 = 0x221
    AVCStatisticsCollector *_statisticsCollector;	// 552 = 0x228
    int _nwMonitorHandlerIndex;	// 560 = 0x230
    int _rttMonitorHandlerIndex;	// 564 = 0x234
    int _state;	// 568 = 0x238
    int _channelSequenceCountWithInactiveSlots;	// 572 = 0x23c
    AVCBasebandCongestionDetector *_basebandCongestionDetector;	// 576 = 0x240
}

+ (_Bool)isSameSRTPKey:(id)arg1 newKey:(id)arg2;	// IMP=0x0010000000274544
@property(readonly, nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) VCNetworkFeedbackController *networkFeedbackController; // @synthesize networkFeedbackController=_networkFeedbackController;
@property(copy) NSArray *compoundStreamIDs; // @synthesize compoundStreamIDs=_compoundStreamIDs;
@property(retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector; // @synthesize basebandCongestionDetector=_basebandCongestionDetector;
@property(readonly, nonatomic) NSArray *transportArray; // @synthesize transportArray=_transportArray;
@property(readonly, nonatomic) unsigned int mediaControlInfoGeneratorType; // @synthesize mediaControlInfoGeneratorType=_mediaControlInfoGeneratorType;
@property(readonly, nonatomic) void *mediaControlInfoGenerator; // @synthesize mediaControlInfoGenerator=_mediaControlInfoGenerator;
@property(readonly, retain, nonatomic) AVCRateControlFeedbackController *feedbackController; // @synthesize feedbackController=_feedbackController;
@property(readonly, nonatomic) long long streamToken; // @synthesize streamToken=_streamToken;
@property(nonatomic) int operatingMode; // @synthesize operatingMode=_operatingMode;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(readonly, nonatomic) unsigned int localSSRC; // @synthesize localSSRC=_localSSRC;
- (int)handleMediaCallbackNotification:(int)arg1 inData:(void *)arg2 outData:(void *)arg3;	// IMP=0x0000000000283bb5
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x0000000000283b54
- (_Bool)shouldReportNetworkInterfaceType;	// IMP=0x0000000000283b4c
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x0000000000283aeb
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x0000000000283a8a
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x0000000000283a29
@property(readonly, nonatomic) double rtcpHeartbeatLeeway;
@property(readonly, nonatomic) double lastReceivedRTCPPacketTime;
@property(readonly, nonatomic) double lastReceivedRTPPacketTime;
- (void)onRTCPTimeout;	// IMP=0x00000000002838a5
- (void)onRTPTimeout;	// IMP=0x0000000000283844
- (void)onSendRTCPPacket;	// IMP=0x00000000002837e3
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000283782
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000000283721
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000002836c0
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000028365f
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002835fe
- (id)supportedPayloads;	// IMP=0x000000000028359d
- (void)onCallIDChanged;	// IMP=0x000000000028353c
@property(nonatomic) id <VCMediaStreamNotification> notificationDelegate;
- (void)stopTimeoutHeartbeat;	// IMP=0x0000000000283097
- (void)startTimeoutHeartbeat;	// IMP=0x00000000002826e4
- (void)timeoutHeartbeat;	// IMP=0x000000000028229e
- (void)checkForDecryptionTimeout;	// IMP=0x00000000002821f8
- (void)checkDecryptionTimeoutForMKMRecoveryAgainstTime:(double)arg1 decryptionErrorStartTime:(double)arg2;	// IMP=0x0000000000281f9f
- (void)checkDecryptionTimeoutAgainstTime:(double)arg1 decryptionErrorStartTime:(double)arg2;	// IMP=0x0000000000281d16
- (void)checkRTCPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x0000000000281a70
- (void)checkRTPPacketTimeoutAgainstTime:(double)arg1 lastReceivedPacketTime:(double)arg2;	// IMP=0x00000000002817ca
- (double)computeNextTimoutWithEnabledTime:(double)arg1 timeoutInterval:(double)arg2 lastReceivedPacketTime:(double)arg3 currentTime:(double)arg4 lastTimeoutReportTime:(double)arg5;	// IMP=0x0000000000281748
- (void)resetTimeoutHeartbeatWithRTPTimeout:(double)arg1 rtcpTimeout:(double)arg2 decryptionTimeout:(double)arg3 currentTime:(double)arg4;	// IMP=0x0000000000281467
- (void)resetTimeoutHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x000000000028143e
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x00000000002813dd
- (void)destroyNWMonitorInternal;	// IMP=0x00000000002813b1
- (void)destroyNWMonitor;	// IMP=0x0000000000281318
- (void)createNWMonitor;	// IMP=0x000000000028123c
- (void)stopRTCPSendHeartbeat;	// IMP=0x000000000028104a
- (void)startRTCPSendHeartbeat;	// IMP=0x000000000028085b
- (void)rtcpSendHeartbeat;	// IMP=0x0000000000280554
- (void)resetRTCPSendHeartbeatTimer:(unsigned long long)arg1;	// IMP=0x0000000000280488
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:(unsigned short)arg1;	// IMP=0x0000000000280459
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)arg1;	// IMP=0x000000000028042a
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x000000000028008f
@property(nonatomic) id <RTCPReportProvider> rtcpReportProvider;
- (void)setRtcpSendInterval:(double)arg1;	// IMP=0x000000000027faf1
- (void)setDecryptionTimeOutInterval:(double)arg1;	// IMP=0x000000000027f808
- (void)setRtcpTimeOutInterval:(double)arg1;	// IMP=0x000000000027f51f
- (void)setRtpTimeOutInterval:(double)arg1;	// IMP=0x000000000027f236
- (void)setDecryptionTimeOutEnabled:(_Bool)arg1;	// IMP=0x000000000027ef52
- (void)setRtcpTimeOutEnabled:(_Bool)arg1;	// IMP=0x000000000027ec6e
- (void)setRtpTimeOutEnabled:(_Bool)arg1;	// IMP=0x000000000027e98a
- (void)processDecryptionTimeoutSettingChange;	// IMP=0x000000000027e934
- (void)processRTCPTimeoutSettingChange;	// IMP=0x000000000027e8de
- (void)processRTPTimeoutSettingChange;	// IMP=0x000000000027e888
- (_Bool)isRTCPSendEnabled;	// IMP=0x000000000027e85d
- (_Bool)isDecryptionTimeoutEnabled;	// IMP=0x000000000027e832
- (_Bool)isRTCPTimeoutEnabled;	// IMP=0x000000000027e807
- (_Bool)isRTPTimeoutEnabled;	// IMP=0x000000000027e7dc
- (void)setRtcpEnabled:(_Bool)arg1;	// IMP=0x000000000027e551
- (void)sendControlPacketWithParameters:(struct _RTCP_SEND_CONTROL_PARAMETERS *)arg1;	// IMP=0x000000000027e3f1
- (long long)streamDirection;	// IMP=0x000000000027e27f
- (void)setStreamDirection:(long long)arg1;	// IMP=0x000000000027e007
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x000000000027dcce
- (void)setPause:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000027d5d1
- (id)getInvalidParamErrorForSetPause:(_Bool)arg1 didSucceed:(_Bool)arg2;	// IMP=0x000000000027d1b5
- (id)setPause:(_Bool)arg1;	// IMP=0x000000000027ce1a
- (void)stopInternalWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000027c350
- (id)stop;	// IMP=0x000000000027be13
- (void)stopMediaTransports;	// IMP=0x000000000027bd0f
- (_Bool)startMediaTransportsWithError:(id *)arg1;	// IMP=0x000000000027bb62
- (void)notifyDelegateDidReceiveRTCPPackets:(struct _RTCPPacketList *)arg1;	// IMP=0x000000000027b9c4
- (void)handleStartDidSucceed:(_Bool)arg1 withError:(id)arg2;	// IMP=0x000000000027b937
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x000000000027b931
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x000000000027b92b
- (void)setState:(int)arg1;	// IMP=0x000000000027b678
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000027ad61
- (id)start;	// IMP=0x000000000027a9ea
- (_Bool)setStreamConfig:(id)arg1 withError:(id *)arg2;	// IMP=0x000000000027a109
- (_Bool)updateRemoteAddressWithConfig:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000279de5
- (void)didEncryptionKeyRollTimeout;	// IMP=0x0000000000279ddf
- (void)resetDecryptionTimeout;	// IMP=0x0000000000279c1c
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x00000000002795cd
- (void)unregisterMediaControlInfoGenerator;	// IMP=0x0000000000279385
- (void)registerCallbacksForMediaControlInfoGenerator:(void *)arg1 forDirection:(long long)arg2 options:(unsigned int)arg3;	// IMP=0x0000000000278f76
- (void)createLocalMediaControlInfoGeneratorWithType:(unsigned int)arg1 version:(unsigned char)arg2;	// IMP=0x0000000000278e0d
- (id)getMediaStreamConfigForControlInfoGenerator:(id)arg1;	// IMP=0x0000000000278ca6
- (void)registerMediaControlInfoGeneratorWithConfigs:(id)arg1;	// IMP=0x0000000000278528
- (_Bool)shouldStopReportingTimer;	// IMP=0x0000000000278503
- (void)unregisterWRMCallback;	// IMP=0x000000000027847f
- (void)initializeWRMUsingRtpHandle:(struct tagHANDLE *)arg1;	// IMP=0x00000000002783b4
- (void)registerStatistics:(id)arg1;	// IMP=0x00000000002782b6
- (int)registerStatisticsHandler:(id)arg1 statisticType:(int)arg2;	// IMP=0x0000000000278139
- (void)unregisterStatistics;	// IMP=0x00000000002780c6
- (id)createTransportWithStreamConfig:(id)arg1 ssrc:(unsigned int)arg2;	// IMP=0x0000000000277d75
- (struct tagHANDLE *)createRTPHandleWithStreamConfig:(id)arg1 payloadType:(int)arg2 localSSRC:(unsigned int)arg3;	// IMP=0x0000000000277901
- (char *)streamStateToString:(int)arg1;	// IMP=0x00000000002778de
- (void)unlock;	// IMP=0x00000000002778cd
- (void)lock;	// IMP=0x00000000002778bc
- (void)dealloc;	// IMP=0x000000000027759f
- (void)setupMediaStream;	// IMP=0x0000000000277228
- (id)initWithTransportSessionID:(unsigned int)arg1 localSSRC:(unsigned int)arg2;	// IMP=0x0000000000277195
- (id)initWithTransportSessionID:(unsigned int)arg1;	// IMP=0x0000000000277105
- (id)init;	// IMP=0x0000000000277087
- (void)collectChannelSequenceMetrics:(id)arg1;	// IMP=0x0000000000276dd4
- (void)reportTransportInfo;	// IMP=0x0000000000276ca1
- (id)setupRTPWithIPInfo:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000276a91
- (_Bool)initializeTransportSetupInfoWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002765ce
- (_Bool)initializeTransportSessionWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000276561
- (id)setupRTPWithIDSDestination:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000276359
- (id)setupRTPForIDS;	// IMP=0x000000000027614d
- (id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000275fef
- (void)setupCallbacksWithNWConnectionMonitor:(struct tagVCNWConnectionMonitor *)arg1;	// IMP=0x0000000000275f52
- (_Bool)setupNWConnectionWithID:(id)arg1;	// IMP=0x00000000002758f9
- (void)dupNWConnectionBackingSocket:(int *)arg1;	// IMP=0x0000000000275727
- (id)setupRTPWithNWConnection:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002753e5
- (_Bool)initializeTransportSessionWithRTPNWConnectionID:(id)arg1 rtcpNWConnectionID:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002751eb
- (_Bool)shouldUseNWConnectionBackingSocket;	// IMP=0x00000000002751e3
- (void)cleanupNWConnection:(id *)arg1;	// IMP=0x00000000002751a8
- (void)initializeTransportSetupInfoWithRTPSocket:(int)arg1 RTCPSocket:(int)arg2;	// IMP=0x0000000000275086
- (void)initializeTransportSetupInfoWithSocketDictionary:(id)arg1;	// IMP=0x0000000000275017
- (_Bool)initializeTransportSessionWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000274fbb
- (void)handleTransportSessionEvent:(unsigned int)arg1 info:(id)arg2;	// IMP=0x0000000000274e46
- (_Bool)initializeTransportSetupInfoWithTransportSession:(id *)arg1;	// IMP=0x0000000000274c3f
- (id)setupRTPWithSocketDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000274aa8
- (void)decryptionStatusChanged:(_Bool)arg1;	// IMP=0x00000000002748f1
@property(readonly, nonatomic) _Bool isSendingMedia;
@property(readonly, nonatomic) VCMediaStreamConfig *oneToOneStreamConfig;
@property(readonly, nonatomic) VCMediaStreamConfig *defaultStreamConfig;
@property(readonly, nonatomic) VCMediaStreamTransport *defaultTransport;
@property(nonatomic) id <VCMomentsCollectorDelegate> momentsCollectorDelegate; // @synthesize momentsCollectorDelegate=_momentsCollectorDelegate;
@property(nonatomic) id <VCMediaStreamDelegate> delegate;
- (id)copyDelegate;	// IMP=0x000000000027457a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

