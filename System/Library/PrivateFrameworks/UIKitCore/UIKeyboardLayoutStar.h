//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIKeyboardLayout.h"

@class CADisplayLink, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, TUIKeyplaneView, UIButton, UIDelayedAction, UIGestureKeyboardIntroduction, UIImageView, UIKBBackgroundView, UIKBKeyViewAnimator, UIKBKeyplaneView, UIKBRenderConfig, UIKBResizingKeyplaneCoordinator, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIKeyboardPathEffectView, UIKeyboardPinchGestureRecognizer, UIKeyboardSplitTransitionView, UISwipeGestureRecognizer, UIView, _UIKeyboardTypingSpeedLogger;
@protocol UIKeyboardKeyplaneTransitionDelegate, UIKeyboardLayoutStarDelegate, UITextCursorAssertion;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;	// 240 = 0xf0
    UIKBTree *_keyplane;	// 248 = 0xf8
    NSString *_keyboardName;	// 256 = 0x100
    NSString *_keyplaneName;	// 264 = 0x108
    long long _appearance;	// 272 = 0x110
    UIKBTree *_activeKey;	// 280 = 0x118
    UIKBTree *_inactiveLanguageIndicator;	// 288 = 0x120
    UIKBKeyplaneView *_keyplaneView;	// 296 = 0x128
    UIKBBackgroundView *_backgroundView;	// 304 = 0x130
    UIKBKeyViewAnimator *_keyViewAnimator;	// 312 = 0x138
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 320 = 0x140
    double _prevTouchUpTime;	// 328 = 0x148
    double _prevTouchUpFinishedTime;	// 336 = 0x150
    double _prevTouchDownTime;	// 344 = 0x158
    unsigned long long _prevUpActions;	// 352 = 0x160
    NSMutableDictionary *_keyboards;	// 360 = 0x168
    NSMutableDictionary *_allKeyplaneViews;	// 368 = 0x170
    NSMutableSet *_allKeyplaneKeycaps;	// 376 = 0x178
    NSMutableSet *_validInputStrings;	// 384 = 0x180
    NSString *_localizedInputKey;	// 392 = 0x188
    int _preferredTrackingChangeCount;	// 400 = 0x190
    int _shiftTrackingChangeCount;	// 404 = 0x194
    NSMutableSet *_accentInfo;	// 408 = 0x198
    NSMutableSet *_hasAccents;	// 416 = 0x1a0
    id _spaceTarget;	// 424 = 0x1a8
    SEL _spaceAction;	// 432 = 0x1b0
    SEL _spaceLongAction;	// 440 = 0x1b8
    id _returnTarget;	// 448 = 0x1c0
    SEL _returnAction;	// 456 = 0x1c8
    SEL _returnLongAction;	// 464 = 0x1d0
    id _deleteTarget;	// 472 = 0x1d8
    SEL _deleteAction;	// 480 = 0x1e0
    SEL _deleteLongAction;	// 488 = 0x1e8
    _Bool _shift;	// 496 = 0x1f0
    _Bool _autoshift;	// 497 = 0x1f1
    _Bool _settingShift;	// 498 = 0x1f2
    _Bool _holdingShift;	// 499 = 0x1f3
    _Bool _didLongPress;	// 500 = 0x1f4
    NSString *_preTouchKeyplaneName;	// 504 = 0x1f8
    _Bool _revertKeyplaneAfterTouch;	// 512 = 0x200
    _Bool _wasShifted;	// 513 = 0x201
    _Bool _swipeDetected;	// 514 = 0x202
    _Bool _showIntlKey;	// 515 = 0x203
    _Bool _showDictationKey;	// 516 = 0x204
    _Bool _suppressDeactivateKeys;	// 517 = 0x205
    _Bool _suppressShiftKeyplaneAnimation;	// 518 = 0x206
    _Bool _isTrackpadMode;	// 519 = 0x207
    _Bool _shiftLockReady;	// 520 = 0x208
    double _shiftLockFirstTapTime;	// 528 = 0x210
    UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 536 = 0x218
    UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 544 = 0x220
    UISwipeGestureRecognizer *_upSwipeRecognizer;	// 552 = 0x228
    UIKeyboardPinchGestureRecognizer *_pinchGestureRecognizer;	// 560 = 0x230
    UIKeyboardSplitTransitionView *_transitionView;	// 568 = 0x238
    double _initialSplitProgress;	// 576 = 0x240
    double _finalSplitProgress;	// 584 = 0x248
    double _autoSplitLastUpdate;	// 592 = 0x250
    double _autoSplitElapsedTime;	// 600 = 0x258
    CADisplayLink *_displayLink;	// 608 = 0x260
    _Bool _ghostKeysEnabled;	// 616 = 0x268
    UIDelayedAction *_delayedCentroidUpdate;	// 624 = 0x270
    _Bool _isRebuilding;	// 632 = 0x278
    long long _currentHandBias;	// 640 = 0x280
    NSString *_layoutTag;	// 648 = 0x288
    _Bool _preRotateShift;	// 656 = 0x290
    NSString *_preRotateKeyplaneName;	// 664 = 0x298
    _Bool _preRotateTrackpadMode;	// 672 = 0x2a0
    UIDelayedAction *_multitapAction;	// 680 = 0x2a8
    _Bool _unshiftAfterMultitap;	// 688 = 0x2b0
    int _multitapCount;	// 692 = 0x2b4
    UIKBTree *_multitapKey;	// 696 = 0x2b8
    UIView *_flickPopupView;	// 704 = 0x2c0
    NSMutableDictionary *_compositeImages;	// 712 = 0x2c8
    NSTimer *_flickPopuptimer;	// 720 = 0x2d0
    id _touchInfo;	// 728 = 0x2d8
    UIView *_dimKeyboardImageView;	// 736 = 0x2e0
    _Bool _keyboardImageViewIsDim;	// 744 = 0x2e8
    _Bool _isOutOfBounds;	// 745 = 0x2e9
    _Bool _inDealloc;	// 746 = 0x2ea
    NSMutableSet *_keysUnderIndicator;	// 752 = 0x2f0
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;	// 760 = 0x2f8
    UIKBRenderConfig *_passcodeRenderConfig;	// 768 = 0x300
    long long _setKeyplaneViewCount;	// 776 = 0x308
    _Bool _inputTraitsPreventInitialReuse;	// 784 = 0x310
    _Bool _settingFloat;	// 785 = 0x311
    NSMutableSet *_leftKeySet;	// 792 = 0x318
    NSMutableSet *_rightKeySet;	// 800 = 0x320
    struct CGPoint _leftDriftOffset;	// 808 = 0x328
    struct CGPoint _rightDriftOffset;	// 824 = 0x338
    NSMutableArray *_leftSideReachability;	// 840 = 0x348
    NSMutableArray *_rightSideReachability;	// 848 = 0x350
    NSNumber *_homeRowHint;	// 856 = 0x358
    double _touchDownTimeSpan;	// 864 = 0x360
    NSDate *_prevTouchMoreKeyTime;	// 872 = 0x368
    NSDate *_prevProgressiveCandidateRequestTime;	// 880 = 0x370
    NSTimer *_progressiveCandidateUpdateTimer;	// 888 = 0x378
    NSString *_lastInputMode;	// 896 = 0x380
    _Bool _pendingDictationReload;	// 904 = 0x388
    _Bool _hasPeekedGestureKey;	// 905 = 0x389
    _Bool _lastInputIsGestureKey;	// 906 = 0x38a
    UIGestureKeyboardIntroduction *_gestureKeyboardIntroduction;	// 912 = 0x390
    _Bool _dictationUsingServerManualEndpointing;	// 920 = 0x398
    _Bool _splitTransitionNeedsRebuild;	// 921 = 0x399
    NSMutableDictionary *_extendedTouchInfoMap;	// 928 = 0x3a0
    UIKBResizingKeyplaneCoordinator *_resizingKeyplaneCoordinator;	// 936 = 0x3a8
    UIButton *_biasEscapeButton;	// 944 = 0x3b0
    NSLayoutConstraint *_biasEscapeButtonLeftConstraint;	// 952 = 0x3b8
    NSLayoutConstraint *_biasEscapeButtonRightConstraint;	// 960 = 0x3c0
    NSMutableSet *_keyplaneTransformations;	// 968 = 0x3c8
    UIImageView *_pathEffectGlowView;	// 976 = 0x3d0
    UIKeyboardPathEffectView *_pathEffectView;	// 984 = 0x3d8
    NSArray *_pathEffectViewConstraints;	// 992 = 0x3e0
    _Bool _isContinuousPathUnderway;	// 1000 = 0x3e8
    UIView *_keyplaneTransformationAreaView;	// 1008 = 0x3f0
    _Bool _externalDictationAndInternationalKeys;	// 1016 = 0x3f8
    _Bool _showsPunctuationKeysOnPrimaryKeyplane;	// 1017 = 0x3f9
    TUIKeyplaneView *_liveKeyplaneView;	// 1024 = 0x400
    _Bool _layoutSupportsCrescendo;	// 1032 = 0x408
    NSArray *_liveKeyplaneConstraints;	// 1040 = 0x410
    _Bool _preventPaddlesForPointerTouches;	// 1048 = 0x418
    _Bool _muteNextKeyClickSound;	// 1049 = 0x419
    int playKeyClickSoundOn;	// 1052 = 0x41c
    UIKBRenderConfig *_renderConfig;	// 1056 = 0x420
    UIView *_modalDisplayView;	// 1064 = 0x428
    id <UIKeyboardLayoutStarDelegate> _delegate;	// 1072 = 0x430
    double _lastTwoFingerTapTimestamp;	// 1080 = 0x438
    id <UITextCursorAssertion> _blinkAssertion;	// 1088 = 0x440
    id <UIKeyboardKeyplaneTransitionDelegate> _splitKeyplaneTransitionDelegate;	// 1096 = 0x448
}

+ (id)sharedPunctuationCharacterSet;	// IMP=0x001000000096b1fc
+ (id)sharedRivenKeyplaneGenerator;	// IMP=0x00100000009494fe
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000943db7
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000943aea
+ (id)keyboardFromFactoryWithName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000943824
+ (void)accessibilitySensitivityChanged;	// IMP=0x0010000000942f2a
+ (Class)_subclassForScreenTraits:(id)arg1;	// IMP=0x0010000000942965
- (void).cxx_destruct;	// IMP=0x000000000097d6f3
@property(nonatomic) __weak id <UIKeyboardKeyplaneTransitionDelegate> splitKeyplaneTransitionDelegate; // @synthesize splitKeyplaneTransitionDelegate=_splitKeyplaneTransitionDelegate;
@property(retain, nonatomic) id <UITextCursorAssertion> blinkAssertion; // @synthesize blinkAssertion=_blinkAssertion;
@property(nonatomic) _Bool muteNextKeyClickSound; // @synthesize muteNextKeyClickSound=_muteNextKeyClickSound;
@property(nonatomic) _Bool preventPaddlesForPointerTouches; // @synthesize preventPaddlesForPointerTouches=_preventPaddlesForPointerTouches;
@property(nonatomic) double lastTwoFingerTapTimestamp; // @synthesize lastTwoFingerTapTimestamp=_lastTwoFingerTapTimestamp;
@property(nonatomic) id <UIKeyboardLayoutStarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *modalDisplayView; // @synthesize modalDisplayView=_modalDisplayView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)typingStyleEstimator:(id)arg1 didChangeTypingStyleEstimate:(unsigned long long)arg2;	// IMP=0x000000000097d36b
- (void)triggerSpaceKeyplaneSwitchIfNecessary;	// IMP=0x000000000097d22c
- (_Bool)is10KeyRendering;	// IMP=0x000000000097d1b4
- (_Bool)isEmojiKeyplane;	// IMP=0x000000000097d16f
- (_Bool)keyplaneContainsEmojiKey;	// IMP=0x000000000097d0ee
- (_Bool)keyplaneContainsDismissKey;	// IMP=0x000000000097d0a9
- (void)updateGlobeKeyAndLayoutOriginBeforeSnapshotForInputView:(id)arg1;	// IMP=0x000000000097cf3b
- (id)currentKeyplaneView;	// IMP=0x000000000097cf26
- (id)currentKeyplane;	// IMP=0x000000000097cf11
- (void)fadeWithInvocation:(id)arg1;	// IMP=0x000000000097cde8
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;	// IMP=0x000000000097ca7e
- (id)simulateTouch:(struct CGPoint)arg1;	// IMP=0x000000000097c8ea
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;	// IMP=0x000000000097c696
- (void)switchKeyplane:(id)arg1;	// IMP=0x000000000097c5ca
- (void)changeToKeyplane:(id)arg1;	// IMP=0x000000000097c4fc
- (id)keyplaneNamed:(id)arg1;	// IMP=0x000000000097c479
- (id)keyplaneForKey:(id)arg1;	// IMP=0x000000000097c3f6
- (id)baseKeyForString:(id)arg1;	// IMP=0x000000000097bb5c
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x000000000097ba82
- (_Bool)shouldRetestTouchDraggedFromKey:(id)arg1;	// IMP=0x000000000097ba6d
- (void)didRotate;	// IMP=0x000000000097b874
- (void)willRotate;	// IMP=0x000000000097b76b
- (void)updateKeyCentroids;	// IMP=0x000000000097adef
- (void)divideKeysIntoLeft:(id)arg1 right:(id)arg2;	// IMP=0x000000000097a729
- (_Bool)isShiftKeyBeingHeld;	// IMP=0x000000000097a700
- (void)setAutoshift:(_Bool)arg1;	// IMP=0x000000000097a6c2
- (void)updateUndoKeyState;	// IMP=0x000000000097a5e8
- (void)setMultitapReverseKeyState;	// IMP=0x000000000097a446
- (void)updateShiftKeyState;	// IMP=0x0000000000979bd2
- (int)stateForShiftKey:(id)arg1;	// IMP=0x0000000000979937
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000979910
- (_Bool)supportsContinuousPath;	// IMP=0x00000000009798e9
- (_Bool)isKanaPlane;	// IMP=0x00000000009798cc
- (_Bool)isAlphabeticPlane;	// IMP=0x00000000009798a5
- (_Bool)ignoresShiftState;	// IMP=0x000000000097987e
- (_Bool)usesAutoShift;	// IMP=0x0000000000979857
- (void)upActionShift;	// IMP=0x0000000000979739
- (void)downActionShiftWithKey:(id)arg1;	// IMP=0x000000000097941f
- (void)refreshDualStringKeys;	// IMP=0x0000000000979288
- (unsigned long long)upActionFlagsForKey:(id)arg1;	// IMP=0x0000000000978ed4
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000978945
- (_Bool)keyHasAccentedVariants:(id)arg1;	// IMP=0x000000000097850d
- (_Bool)hasActiveContinuousPathInput;	// IMP=0x000000000097835f
- (id)activeTouchInfoForShift;	// IMP=0x0000000000978134
- (id)touchInfoForKey:(id)arg1;	// IMP=0x0000000000977f40
- (void)clearAllTouchInfo;	// IMP=0x0000000000977de5
- (void)clearInfoForTouch:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x0000000000977d06
- (void)clearInfoForTouch:(id)arg1;	// IMP=0x0000000000977cf2
- (void)cancelTouchIfNecessaryForInfo:(id)arg1 forResting:(_Bool)arg2;	// IMP=0x00000000009779f6
- (id)generateInfoForTouch:(id)arg1;	// IMP=0x000000000097791d
- (id)infoForTouch:(id)arg1;	// IMP=0x00000000009778bb
- (id)infoForTouchUUID:(id)arg1;	// IMP=0x0000000000977882
- (void)swipeDetected:(id)arg1;	// IMP=0x00000000009777d2
- (void)uninstallGestureRecognizers;	// IMP=0x0000000000977633
- (void)installGestureRecognizers;	// IMP=0x000000000097762d
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000977606
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000977539
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000000009773ff
- (void)touchChanged:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009772a0
- (void)touchCancelled:(id)arg1 forResting:(_Bool)arg2 executionContext:(id)arg3;	// IMP=0x0000000000976de7
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000976dd0
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000975e31
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(unsigned long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(unsigned long long)arg6 executionContext:(id)arg7;	// IMP=0x0000000000974d9f
- (_Bool)shouldSendStringForFlick:(id)arg1;	// IMP=0x0000000000974c02
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;	// IMP=0x0000000000974afa
- (void)presentModalDisplayForKey:(id)arg1;	// IMP=0x0000000000974832
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;	// IMP=0x0000000000971ecd
- (void)_recordKeystrokeStatisticForKeyPress;	// IMP=0x0000000000971e70
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;	// IMP=0x0000000000971d4c
- (void)handleKeyboardMenusForTouch:(id)arg1;	// IMP=0x0000000000971966
- (void)touchUp:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000970d0a
- (_Bool)shouldRetestTouchUp:(id)arg1;	// IMP=0x00000000009707bd
- (void)handleDelayedCentroidUpdate;	// IMP=0x000000000097063d
- (void)cancelDelayedCentroidUpdate;	// IMP=0x0000000000970605
- (void)refreshGhostKeyState;	// IMP=0x000000000097053f
- (_Bool)performSpaceAction;	// IMP=0x00000000009704de
- (_Bool)performReturnAction;	// IMP=0x000000000097047d
- (void)resetPanAlternativesForEndedTouch:(id)arg1;	// IMP=0x00000000009703ea
- (void)updatePanAlternativesForTouchInfo:(id)arg1;	// IMP=0x0000000000970031
- (void)updateSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2 withPoint:(struct CGPoint)arg3;	// IMP=0x000000000096fc72
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x000000000096fb36
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;	// IMP=0x000000000096e569
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;	// IMP=0x000000000096cf68
- (void)touchDragged:(id)arg1;	// IMP=0x000000000096ce54
- (_Bool)touchPassesDragThreshold:(id)arg1;	// IMP=0x000000000096cae1
- (_Bool)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2;	// IMP=0x000000000096c9da
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;	// IMP=0x000000000096c8c3
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x000000000096bb1d
- (_Bool)showGestureKeyboardIntroductionIfNeeded;	// IMP=0x000000000096b859
- (_Bool)shouldShowGestureKeyboardIntroduction;	// IMP=0x000000000096b766
- (id)synthesizeTouchUpEventForKey:(id)arg1;	// IMP=0x000000000096b63d
- (id)keyplaneNameForRevertAfterTouch;	// IMP=0x000000000096b5ca
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;	// IMP=0x000000000096b39e
- (void)incrementPunctuationIfNeeded:(id)arg1;	// IMP=0x000000000096b261
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;	// IMP=0x000000000096b1ac
- (void)touchDownWithKey:(id)arg1 withTouchInfo:(id)arg2 atPoint:(struct CGPoint)arg3 executionContext:(id)arg4;	// IMP=0x0000000000969dcd
- (void)_cleanUpBlinkAssertionIfNecessary;	// IMP=0x0000000000969d73
- (_Bool)isKeyScriptSwitchKey:(id)arg1;	// IMP=0x0000000000969ced
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0000000000969c33
- (void)playKeyClickSoundOnUpForKey:(id)arg1;	// IMP=0x0000000000969c21
- (void)playKeyClickSoundOnDownForKey:(id)arg1;	// IMP=0x0000000000969bd6
- (void)playKeyClickSoundForKey:(id)arg1;	// IMP=0x0000000000969aed
- (void)playKeyReleaseSoundForKey:(id)arg1;	// IMP=0x0000000000969ae7
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x00000000009693dc
- (void)touchDown:(id)arg1 executionContext:(id)arg2;	// IMP=0x0000000000968afe
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;	// IMP=0x000000000096855f
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000096850f
- (_Bool)_pointAllowedInStaticHitBuffer:(struct CGPoint)arg1;	// IMP=0x0000000000968259
- (double)hitBuffer;	// IMP=0x00000000009681c8
- (struct CGRect)_paddedKeyUnionFrame;	// IMP=0x0000000000967f16
- (_Bool)_handleTouchForEmojiInputView;	// IMP=0x0000000000967e06
- (void)prepareForFloatingTransition:(_Bool)arg1;	// IMP=0x0000000000967d1d
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000967b6d
- (void)_autoSplit:(id)arg1;	// IMP=0x0000000000967a2b
- (void)setSplitProgress:(double)arg1;	// IMP=0x00000000009678be
- (void)pinchHandler:(id)arg1;	// IMP=0x0000000000967828
- (void)pinchDidConsumeTouch:(id)arg1;	// IMP=0x0000000000967785
- (void)didDetectPinchWithSeparation:(double)arg1;	// IMP=0x00000000009676e0
- (_Bool)pinchCanBeginWithTouches:(id)arg1 andScale:(double)arg2;	// IMP=0x00000000009673e7
- (_Bool)pinchSplitGestureEnabled;	// IMP=0x00000000009673a4
- (_Bool)pinchDetected;	// IMP=0x0000000000967387
- (void)finishSplitTransitionWithProgress:(double)arg1;	// IMP=0x0000000000967369
- (void)finishSplitTransitionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000967096
- (void)finishSplitTransition;	// IMP=0x0000000000967082
- (void)finishSplitWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000966c39
- (void)showSplitTransitionView:(_Bool)arg1;	// IMP=0x0000000000966a80
- (void)prepareForSplitTransition;	// IMP=0x0000000000966935
- (id)splitTransitionDelegate;	// IMP=0x000000000096682f
- (id)hostViewForResizingKeyplane:(id)arg1;	// IMP=0x0000000000966826
- (void)resizeKeyplaneAndRedraw:(_Bool)arg1;	// IMP=0x00000000009662e4
- (_Bool)keyplaneSupportsResizingGesture;	// IMP=0x00000000009662ab
- (_Bool)keyplaneUsesResizingOffset;	// IMP=0x0000000000966195
- (void)_didTapBiasEscapeButton:(id)arg1;	// IMP=0x00000000009660e8
- (void)_setBiasEscapeButtonVisible:(_Bool)arg1;	// IMP=0x00000000009659be
- (void)setKeyboardBias:(long long)arg1;	// IMP=0x00000000009658a6
- (long long)currentHandBias;	// IMP=0x00000000009657e8
- (double)biasedKeyboardWidthRatio;	// IMP=0x0000000000965769
- (void)calculateReachabilityScoreWithKey:(id)arg1 keyError:(struct CGPoint)arg2;	// IMP=0x00000000009651ac
- (void)resetHRRLayoutState;	// IMP=0x000000000096516b
- (void)setNeedsVirtualDriftUpdate;	// IMP=0x0000000000965116
- (_Bool)_handRestRecognizerCancelShouldBeEnd;	// IMP=0x00000000009650f9
- (id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(long long)arg1;	// IMP=0x0000000000964d12
- (struct CGPoint)getCenterForKeyUnderRightIndexFinger;	// IMP=0x0000000000964bbd
- (struct CGPoint)getCenterForKeyUnderLeftIndexFinger;	// IMP=0x0000000000964a68
- (void)handRestRecognizerNotifyRestForBegin:(_Bool)arg1 location:(struct CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6;	// IMP=0x0000000000964922
- (CDUnknownBlockType)handRestRecognizerSilenceNextTouchDown;	// IMP=0x0000000000964908
- (struct CGSize)handRestRecognizerStandardKeyPixelSize;	// IMP=0x00000000009646be
- (id)handRestRecognizerGetHomeRowHint;	// IMP=0x00000000009644f8
- (id)getSortedKeysForDisplayRowHint:(int)arg1;	// IMP=0x0000000000964209
- (_Bool)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3 forRestingState:(unsigned long long)arg4 otherRestedTouchLocations:(id)arg5;	// IMP=0x0000000000963d45
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000963aef
- (void)layoutSubviews;	// IMP=0x0000000000963a7a
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000963a49
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000963a41
- (void)fadeActivationIndicatorWithDuration:(double)arg1 withDelay:(double)arg2;	// IMP=0x0000000000963a3b
- (id)activationIndicatorView;	// IMP=0x0000000000961bbf
- (void)setHideKeysUnderIndicator:(_Bool)arg1;	// IMP=0x0000000000961b10
- (_Bool)shouldShowIndicator;	// IMP=0x0000000000961a9e
- (void)showPopupVariantsForKey:(id)arg1;	// IMP=0x000000000095ff2a
- (id)_variantsOfCurrencyKey:(id)arg1 language:(id)arg2;	// IMP=0x000000000095fc87
- (id)_variantsByAppendingDualStringKey:(id)arg1 toVariants:(id)arg2;	// IMP=0x000000000095f8ea
- (id)_appendingSecondaryStringToVariantsTop:(id)arg1 secondaryString:(id)arg2 withDirection:(id)arg3;	// IMP=0x000000000095f803
- (id)_keyplaneVariantsKeyForString:(id)arg1;	// IMP=0x000000000095f76f
- (id)_keyboardLongPressInteractionRegions;	// IMP=0x000000000095f4b5
- (void)longPressAction;	// IMP=0x000000000095e648
- (void)showMenu:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000095e579
- (_Bool)shouldShowInternationalMenuForKey:(id)arg1;	// IMP=0x000000000095e507
- (_Bool)isLongPressedKey:(id)arg1;	// IMP=0x000000000095e45a
- (_Bool)isShiftKeyPlaneChooser;	// IMP=0x000000000095e2ea
- (void)restoreDefaultsForAllKeys;	// IMP=0x000000000095e2a0
- (void)restoreDefaultsForKey:(id)arg1;	// IMP=0x000000000095e1d8
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x000000000095e1a3
- (void)setAction:(SEL)arg1 forKey:(id)arg2;	// IMP=0x000000000095e16e
- (void)setTarget:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000095e0e5
- (void)setLabel:(id)arg1 forKey:(id)arg2;	// IMP=0x000000000095d9e3
- (void)updateLayoutTags;	// IMP=0x000000000095d2b5
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;	// IMP=0x000000000095d1fe
- (void)touchMultitapTimer;	// IMP=0x000000000095d11e
- (void)cancelMultitapTimer;	// IMP=0x000000000095d0e6
- (_Bool)isMultitapKey:(id)arg1;	// IMP=0x000000000095d00b
- (void)handleMultitapTimerFired;	// IMP=0x000000000095ce8b
- (void)multitapExpired;	// IMP=0x000000000095ce39
- (void)endMultitapForKey:(id)arg1;	// IMP=0x000000000095ce18
- (void)multitapInterrupted;	// IMP=0x000000000095cc22
- (_Bool)canMultitap;	// IMP=0x000000000095cb77
- (id)multitapForwardKeys;	// IMP=0x000000000095cb53
- (id)multitapCompleteKeys;	// IMP=0x000000000095cb2f
- (id)activeMultitapCompleteKey;	// IMP=0x000000000095c802
- (_Bool)hasAccentKey;	// IMP=0x000000000095c7bd
- (_Bool)hasCandidateKeys;	// IMP=0x000000000095c778
- (id)candidateList;	// IMP=0x000000000095c6be
- (void)logHandwritingData;	// IMP=0x000000000095c5f0
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;	// IMP=0x000000000095c50b
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;	// IMP=0x000000000095c426
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 inputFlags:(int)arg3;	// IMP=0x000000000095bdcb
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 touchInfo:(id)arg3 inputFlags:(int)arg4;	// IMP=0x000000000095bcf9
- (id)currentRepresentedStringForDualDisplayKey:(id)arg1;	// IMP=0x000000000095bb62
- (void)updatePhysicalKeyboardEvent:(id)arg1 withMarkedInput:(id)arg2;	// IMP=0x000000000095b875
- (_Bool)isDeadkeyInput:(id)arg1;	// IMP=0x000000000095b808
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;	// IMP=0x000000000095ac31
- (void)playKeyFeedbackIfNecessaryForTouchDownOnKey:(id)arg1 touchInfo:(id)arg2;	// IMP=0x000000000095ab15
- (id)unprocessedTouchEventsForTouchInfo:(id)arg1 touchStage:(int)arg2 forcedKeyCode:(int)arg3;	// IMP=0x000000000095a7b7
- (int)keycodeForKey:(id)arg1;	// IMP=0x000000000095a738
- (_Bool)shouldIgnoreDistantKey;	// IMP=0x000000000095a6a5
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x000000000095a690
- (_Bool)isGeometricShiftOrMoreKeyForTouch:(id)arg1;	// IMP=0x000000000095a588
- (id)keyHitTest:(struct CGPoint)arg1;	// IMP=0x000000000095a501
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;	// IMP=0x000000000095a3e2
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x000000000095a0f9
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;	// IMP=0x000000000095a078
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;	// IMP=0x0000000000959e88
- (id)keyViewHitTestForPoint:(struct CGPoint)arg1;	// IMP=0x0000000000959c2b
- (_Bool)shouldHitTestKey:(id)arg1;	// IMP=0x0000000000959bb2
- (void)finishSliderBehaviorFeedback;	// IMP=0x0000000000959bac
- (void)provideSliderBehaviorFeedback;	// IMP=0x0000000000959ba6
- (void)prepareSliderBehaviorFeedback;	// IMP=0x0000000000959ba0
- (_Bool)isTrackpadMode;	// IMP=0x0000000000959b90
- (void)deactivateActiveKey;	// IMP=0x0000000000959afe
- (void)deactivateActiveKeys;	// IMP=0x0000000000959a6c
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;	// IMP=0x00000000009598ca
- (void)cleanupPreviousKeyboardWithNewInputTraits:(id)arg1;	// IMP=0x000000000095982c
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;	// IMP=0x000000000095930a
- (_Bool)shouldUseDefaultShiftStateFromLayout;	// IMP=0x0000000000959302
- (void)setToInitialKeyplane;	// IMP=0x0000000000959286
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x000000000095925f
- (void)reloadKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000959238
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5 reload:(_Bool)arg6;	// IMP=0x0000000000958dca
- (void)showKeyboardWithInputMode:(id)arg1 renderConfig:(id)arg2 inputTraits:(id)arg3 screenTraits:(id)arg4 splitTraits:(id)arg5;	// IMP=0x0000000000958dae
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000958da6
- (void)updateCachedKeyplaneKeycaps;	// IMP=0x0000000000958af6
- (id)cacheTokenForKeyplane:(id)arg1 caseAlternates:(_Bool)arg2;	// IMP=0x0000000000958867
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;	// IMP=0x000000000095878f
@property(readonly, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
- (Class)keyViewAnimatorClassForCurrentKeyboardLayout;	// IMP=0x0000000000958710
- (id)keyViewAnimator;	// IMP=0x00000000009586c3
- (void)updateState:(int)arg1 forKey:(id)arg2;	// IMP=0x000000000095865f
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x00000000009585ed
- (int)stateForKey:(id)arg1;	// IMP=0x000000000095857e
- (id)viewForKey:(id)arg1;	// IMP=0x0000000000958501
- (id)keyplaneFactory;	// IMP=0x00000000009584ad
- (void)refreshForDictationAvailablityDidChange;	// IMP=0x00000000009583ae
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000957f91
- (id)inputModeToMergeCapsLockKey;	// IMP=0x0000000000957f20
- (_Bool)canAddRomanSwitchKey;	// IMP=0x0000000000957e09
- (void)relayoutForWriteboardKey;	// IMP=0x0000000000957c3c
- (void)transitionToModalContinuousPathKeyplane;	// IMP=0x0000000000957b0f
- (void)updateReturnKeysIfNeeded;	// IMP=0x0000000000957a46
- (void)updateMoreAndInternationalKeys;	// IMP=0x000000000095714b
- (void)recenterMonolithKeyplaneSwitchKeys;	// IMP=0x0000000000956f19
- (void)_transformCarPlayIfNecessary;	// IMP=0x0000000000956e1c
- (void)_transformFloatingKeyboardIfNecessary;	// IMP=0x0000000000956d2f
- (void)_addResizeTransformationIfNecessary;	// IMP=0x0000000000956c42
- (void)_addExtraControlKeysIfNecessary;	// IMP=0x0000000000956b55
- (id)_currentKeyplaneTransformationContext;	// IMP=0x0000000000956a25
- (_Bool)_shouldAttemptToAddSupplementaryControlKeys;	// IMP=0x0000000000956853
- (void)_updateSupplementaryKeys;	// IMP=0x0000000000956434
- (void)_swapGlobeAndMoreKeysIfNecessary;	// IMP=0x0000000000955eb0
- (void)mergeKeysIfNeeded;	// IMP=0x0000000000955ddd
- (id)keylistContainingKey:(id)arg1;	// IMP=0x0000000000955aa5
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000955874
- (void)setTextEditingTraits:(id)arg1;	// IMP=0x00000000009552d2
- (unsigned long long)textEditingKeyMask;	// IMP=0x00000000009550c1
- (int)stateForManipulationKey:(id)arg1;	// IMP=0x0000000000954e57
- (id)highlightedVariantListForStylingKey:(id)arg1;	// IMP=0x0000000000954d68
- (int)stateForStylingKey:(id)arg1;	// IMP=0x0000000000954c55
- (_Bool)supportStylingWithKey:(id)arg1;	// IMP=0x0000000000954b2f
- (int)stateForDictationKey:(id)arg1;	// IMP=0x0000000000954971
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000954966
- (int)stateForMultitapForwardKey:(id)arg1;	// IMP=0x0000000000954954
- (int)stateForMultitapReverseKey:(id)arg1;	// IMP=0x0000000000954868
- (int)displayTypeHintForShiftKey;	// IMP=0x00000000009547d8
- (int)displayTypeHintForMoreKey;	// IMP=0x0000000000954726
- (void)setPercentSignKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000953f80
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;	// IMP=0x0000000000953915
- (void)updateCurrencySymbolForKey:(id)arg1 withCurrencyString:(id)arg2;	// IMP=0x0000000000953680
- (_Bool)_stringContainsCurrencyCharacters:(id)arg1;	// IMP=0x00000000009534aa
- (void)_setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x00000000009530eb
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;	// IMP=0x0000000000953018
- (void)updateTransitionWithFlags:(unsigned long long)arg1;	// IMP=0x0000000000952f90
- (void)clearKeyAnnotationsIfNecessary;	// IMP=0x0000000000952b96
- (void)annotateWriteboardDisplayTypeHintForKeyIfNeeded;	// IMP=0x0000000000952851
- (_Bool)useUndoForMessagesWriteboard;	// IMP=0x00000000009527c7
- (_Bool)useDismissForMessagesWriteboard;	// IMP=0x0000000000952368
- (_Bool)ignoreWriteboard;	// IMP=0x00000000009522e4
- (void)annotateKeysWithDeveloperPunctuation;	// IMP=0x0000000000951d13
- (void)updateStateForKey:(id)arg1;	// IMP=0x0000000000951884
- (void)updateAllKeyStates;	// IMP=0x00000000009513ab
- (void)createLayoutFromName:(id)arg1;	// IMP=0x000000000094c4f0
- (_Bool)useCrescendoLayout;	// IMP=0x000000000094c4e0
- (void)reloadCurrentKeyplane;	// IMP=0x000000000094c46c
- (_Bool)_allowPaddle;	// IMP=0x000000000094c3ce
- (_Bool)_allowContinuousPathUI;	// IMP=0x000000000094c240
- (_Bool)shouldIgnoreContinuousPathRequirements;	// IMP=0x000000000094c15c
- (_Bool)_allowStartingContinuousPathForTouchInfo:(id)arg1 alreadyActiveKeyExisting:(_Bool)arg2;	// IMP=0x000000000094bea5
- (unsigned long long)keyplaneShiftState;	// IMP=0x000000000094bda7
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x000000000094bd4c
- (_Bool)shouldMergeAssistantBarWithKeyboardLayout;	// IMP=0x000000000094bcaa
- (struct CGSize)stretchFactor;	// IMP=0x000000000094bae6
- (double)stretchFactorHeight;	// IMP=0x000000000094b92b
- (_Bool)stretchKeyboardToFitKeyplane:(id)arg1;	// IMP=0x000000000094b7fc
- (_Bool)stretchKeyboardToFit;	// IMP=0x000000000094b7df
- (_Bool)showsDedicatedEmojiKeyAlongsideGlobeButton;	// IMP=0x000000000094b6b0
- (_Bool)globeKeyDisplaysAsEmojiKey;	// IMP=0x000000000094b1b4
- (void)updateGlobeKeyDisplayString;	// IMP=0x000000000094b11e
- (void)setTwoFingerTapTimestamp:(double)arg1;	// IMP=0x000000000094b10c
- (_Bool)shouldAllowSelectionGestures:(_Bool)arg1 atPoint:(struct CGPoint)arg2 toBegin:(_Bool)arg3;	// IMP=0x000000000094ac7d
- (_Bool)isResized;	// IMP=0x000000000094ac31
- (_Bool)isResizing;	// IMP=0x000000000094ac14
- (_Bool)supportsEmoji;	// IMP=0x000000000094ac0c
- (_Bool)canReuseKeyplaneView;	// IMP=0x000000000094a9f7
- (_Bool)shouldShowDictationKey;	// IMP=0x000000000094a69c
- (void)updateBackgroundIfNeeded;	// IMP=0x000000000094a46b
- (void)updateBackgroundCorners;	// IMP=0x000000000094a3c9
- (_Bool)isHandwritingPlane;	// IMP=0x000000000094a31e
- (void)setTrackpadMode:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000949d63
- (void)didEndTrackpadModeForServerSideDictation;	// IMP=0x0000000000949d4d
- (void)willBeginTrackpadModeForServerSideDictation;	// IMP=0x0000000000949d34
- (void)didEndIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000949ce7
- (_Bool)isDeveloperGestureKeybaord;	// IMP=0x0000000000949c91
- (void)didEndIndirectSelectionGesture;	// IMP=0x0000000000949c7a
- (void)cancelTouchesForTwoFingerTapGesture:(id)arg1;	// IMP=0x0000000000949c2f
- (void)willBeginIndirectSelectionGesture:(_Bool)arg1;	// IMP=0x0000000000949bdf
- (void)willBeginIndirectSelectionGesture;	// IMP=0x0000000000949bc8
- (void)setPasscodeOutlineAlpha:(double)arg1;	// IMP=0x0000000000949a7b
- (void)didTriggerDestructiveRenderConfigChange;	// IMP=0x0000000000949a0a
- (void)setRenderConfig:(id)arg1 updateKeyplane:(_Bool)arg2;	// IMP=0x0000000000949758
- (void)traitCollectionDidChange;	// IMP=0x0000000000949553
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;	// IMP=0x000000000094946e
- (struct CGImage *)renderedImageWithToken:(id)arg1;	// IMP=0x00000000009490e8
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;	// IMP=0x0000000000948ff9
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;	// IMP=0x0000000000948ca9
- (void)rebuildSplitTransitionView;	// IMP=0x000000000094895b
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000948953
- (void)updateLocalizedKeysForKeyplane:(id)arg1 updateAllKeyplanes:(_Bool)arg2;	// IMP=0x0000000000948648
- (void)updateLocalizedKeys:(_Bool)arg1;	// IMP=0x0000000000948610
- (void)updateInputModeLocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000947a91
- (void)updateLocalizedDisplayStringsForKeys:(id)arg1;	// IMP=0x0000000000946f01
- (void)updateAutolocalizedKeysForKeyplane:(id)arg1;	// IMP=0x0000000000946dc4
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;	// IMP=0x0000000000946577
- (void)nextToUseInputModeDidChange:(id)arg1;	// IMP=0x000000000094649a
- (id)internationalKeyDisplayStringOnEmojiKeyboard;	// IMP=0x0000000000946422
- (void)updateLocalizedDisplayStringOnEmojiInternationalWithKeyplane:(id)arg1 withInputMode:(id)arg2;	// IMP=0x0000000000945f8d
- (_Bool)canProduceString:(id)arg1;	// IMP=0x0000000000945888
@property(readonly, nonatomic) _Bool hasActiveKeys;
- (double)lastTouchDownTimestamp;	// IMP=0x0000000000945804
- (double)lastTouchUpTimestamp;	// IMP=0x00000000009457f2
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x000000000094539c
- (id)keyForKeyboardName:(id)arg1 screenTraits:(id)arg2;	// IMP=0x000000000094531d
- (void)updateKeyboardForKeyplane:(id)arg1;	// IMP=0x00000000009451c2
- (struct CGSize)sizeForKeyplane:(id)arg1;	// IMP=0x0000000000944e9f
- (_Bool)allKeyplanesHaveSameHeight;	// IMP=0x0000000000944c98
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x00000000009449f6
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;	// IMP=0x0000000000944938
- (void)refreshForRivenPreferences;	// IMP=0x000000000094479c
- (void)tearDownSplitTransitionView;	// IMP=0x00000000009446fb
- (struct CGRect)frameForKeylayoutName:(id)arg1;	// IMP=0x000000000094452b
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;	// IMP=0x000000000094449e
- (struct CGRect)dragGestureRectInView:(id)arg1;	// IMP=0x0000000000944276
- (id)defaultKeyplaneForKeyplane:(id)arg1;	// IMP=0x00000000009441e5
- (id)splitNameForKeyplane:(id)arg1;	// IMP=0x0000000000944147
- (id)splitNameForKeyplaneName:(id)arg1;	// IMP=0x00000000009440f0
- (id)defaultNameForKeyplaneName:(id)arg1;	// IMP=0x00000000009440cd
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;	// IMP=0x00000000009437b1
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000943520
- (void)removeFromSuperview;	// IMP=0x000000000094348f
- (void)clearTransientState;	// IMP=0x00000000009433ba
- (void)clearUnusedObjects:(_Bool)arg1;	// IMP=0x0000000000943009
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000942f93
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000942f43
- (void)accessibilitySensitivityChanged;	// IMP=0x0000000000942f0d
- (void)removePathEffectViewConstraintsIfNeeded;	// IMP=0x0000000000942ec4
- (void)dealloc;	// IMP=0x0000000000942c93
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000942976
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;	// IMP=0x000000000097e724
- (id)popupKeyViews;	// IMP=0x000000000097e4b4
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;	// IMP=0x000000000097e264
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;	// IMP=0x000000000097ddc2
- (id)keyWithRepresentedString:(id)arg1;	// IMP=0x000000000097db62
- (id)keyplaneView:(id)arg1 containingViewForActiveKey:(id)arg2;	// IMP=0x00000000009802b6
- (void)_didChangeKeyplaneWithContext:(id)arg1;	// IMP=0x0000000000980230
- (void)showPopupView:(long long)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;	// IMP=0x000000000098015a
- (void)setKeyboardDim:(_Bool)arg1;	// IMP=0x000000000097ff2d
- (void)setPreferredHeight:(double)arg1;	// IMP=0x000000000097fdb7
- (void)setDisableInteraction:(_Bool)arg1;	// IMP=0x000000000097fd6c
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;	// IMP=0x000000000097f9ac
- (void)dismissGestureKeyboardIntroduction;	// IMP=0x000000000097f96a
- (void)handleDismissFlickView;	// IMP=0x000000000097f8f8
- (void)handleDismissFlickView:(id)arg1;	// IMP=0x000000000097f6db
- (void)handlePopupView;	// IMP=0x000000000097f5be
- (void)handlePopupView:(id)arg1;	// IMP=0x000000000097f449
- (void)showFlickView:(long long)arg1 withKey:(id)arg2 flickString:(id)arg3;	// IMP=0x000000000097f3ca
- (_Bool)handleFlick:(id)arg1;	// IMP=0x000000000097eed1
- (void)populateFlickPopupsForKey:(id)arg1;	// IMP=0x000000000097e97d
- (id)flickStringForInputKey:(id)arg1 direction:(long long)arg2;	// IMP=0x000000000097e7ba
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;	// IMP=0x000000000097e73c
- (void)finishContinuousPathView:(_Bool)arg1;	// IMP=0x0000000000981256
- (void)clearContinuousPathView;	// IMP=0x0000000000981161
- (void)addContinuousPathPoint:(struct CGPoint)arg1 withTimestamp:(double)arg2 updateIdleDetection:(_Bool)arg3;	// IMP=0x0000000000980fc3
- (void)didBeginContinuousPath;	// IMP=0x0000000000980c46
- (void)transitionToPunctuationKeysVisible:(_Bool)arg1;	// IMP=0x0000000000980c40
- (void)_transitionToContinuousPathState:(long long)arg1 forTouchInfo:(id)arg2;	// IMP=0x0000000000980ba3
@property(retain, nonatomic) UIKeyboardPathEffectView *pathEffectView;
- (void)didMoveToWindow;	// IMP=0x00000000009804e9
- (_Bool)_continuousPathModalPunctuationPlaneEnabled;	// IMP=0x000000000098043b
- (_Bool)_continuousPathSpotlightEffectEnabled;	// IMP=0x00000000009803e6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

