//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIPickerView.h"

@class NSCalendar, NSLocale, NSString, UIColor, UIDatePicker, UIFont, UILabel, _UIControlEventsGestureRecognizer, _UIDatePickerDataModel, _UIDatePickerMode, _UIDatePickerNumericKeyboardViewController, _UIDatePickerWheelsTimeLabel, _UIPassthroughScrollInteraction;

__attribute__((visibility("hidden")))
@interface _UIDatePickerView : UIPickerView
{
    long long _loadingDate;	// 248 = 0xf8
    _Bool _allowsZeroTimeInterval;	// 256 = 0x100
    _UIDatePickerMode *_mode;	// 264 = 0x108
    UILabel *_hourLabel;	// 272 = 0x110
    UILabel *_minuteLabel;	// 280 = 0x118
    int _expectedAMPM;	// 288 = 0x120
    struct {
        unsigned int staggerTimeIntervals:1;
        unsigned int loadingDateOrTime:1;
        unsigned int highlightsToday:1;
        unsigned int usesBlackChrome:1;
        unsigned int updatingWithKeyInput:1;
        unsigned int isPendingManualKeyboardPresentation:1;
        unsigned int isPresentingManualKeyboard:1;
        unsigned int selectionBarTableHidden:1;
        unsigned int receivedTextInputUpdate:1;
        unsigned int isPresentingOrDismissingKeyboard:1;
    } _datePickerFlags;	// 292 = 0x124
    _UIPassthroughScrollInteraction *_passthroughInteraction;	// 296 = 0x128
    UIDatePicker *_datePicker;	// 304 = 0x130
    _UIDatePickerDataModel *_data;	// 312 = 0x138
    _UIDatePickerNumericKeyboardViewController *_numericKeyboardViewController;	// 320 = 0x140
    _UIDatePickerWheelsTimeLabel *_timeInputLabel;	// 328 = 0x148
    _UIControlEventsGestureRecognizer *_controlEventsGestureRecognizer;	// 336 = 0x150
}

- (void).cxx_destruct;	// IMP=0x0000000000bfe732
@property(readonly, nonatomic) _UIControlEventsGestureRecognizer *controlEventsGestureRecognizer; // @synthesize controlEventsGestureRecognizer=_controlEventsGestureRecognizer;
@property(readonly, nonatomic) _UIDatePickerWheelsTimeLabel *timeInputLabel; // @synthesize timeInputLabel=_timeInputLabel;
@property(readonly, nonatomic) _UIDatePickerNumericKeyboardViewController *numericKeyboardViewController; // @synthesize numericKeyboardViewController=_numericKeyboardViewController;
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (long long)datePickerMode;	// IMP=0x0000000000bfe6a4
@property(readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont; // @dynamic hrMinFont;
- (id)_hoursStringForHour:(long long)arg1;	// IMP=0x0000000000bfe5a1
- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;	// IMP=0x0000000000bfe4fa
- (long long)_selectionBarRowInComponent:(long long)arg1;	// IMP=0x0000000000bfe4b6
@property(readonly, nonatomic) struct UIEdgeInsets appliedInsetsToEdgeOfContent;
- (_Bool)hasDefaultSize;	// IMP=0x0000000000bfe44c
- (_Bool)_updateDateOrTime;	// IMP=0x0000000000bfe409
@property(readonly, nonatomic, getter=_amPmValue) long long amPmValue; // @dynamic amPmValue;
- (id)_existingLabelForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000bfe385
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000bfe2fe
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;	// IMP=0x0000000000bfe203
@property(nonatomic) _Bool highlightsToday; // @dynamic highlightsToday;
- (_Bool)staggerTimeIntervals;	// IMP=0x0000000000bfe1c2
- (void)presentationControllerDidDismiss:(id)arg1;	// IMP=0x0000000000bfe1b0
- (void)presentationControllerWillDismiss:(id)arg1;	// IMP=0x0000000000bfe156
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;	// IMP=0x0000000000bfe09d
- (void)_dismissManualKeyboard;	// IMP=0x0000000000bfdf22
- (void)_hardwareKeyboardAvailabilityChanged:(id)arg1;	// IMP=0x0000000000bfde42
- (_Bool)passthroughScrollInteractionDidRecognize:(id)arg1;	// IMP=0x0000000000bfddfe
- (_Bool)passthroughScrollInteraction:(id)arg1 shouldInteractAtLocation:(struct CGPoint)arg2 withEvent:(id)arg3;	// IMP=0x0000000000bfdc9d
@property(nonatomic) _Bool passthroughInteractionEnabled;
- (void)wheelsTimeLabel:(id)arg1 didChangeVisibility:(_Bool)arg2;	// IMP=0x0000000000bfdb96
- (_Bool)wheelsTimeLabelShouldReceiveInteraction:(id)arg1;	// IMP=0x0000000000bfda61
- (void)_updateWheelsLabelForCurrentDateComponents;	// IMP=0x0000000000bfd992
- (void)timeLabelDidEndEditing:(id)arg1;	// IMP=0x0000000000bfd91e
- (void)timeLabelDidBeginEditing:(id)arg1;	// IMP=0x0000000000bfd8d2
- (void)timeLabelDidResignFirstResponder:(id)arg1;	// IMP=0x0000000000bfd8b1
- (void)timeLabelDidFailToBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000bfd889
- (void)timeLabelDidBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000bfd57e
- (id)primaryFirstResponder;	// IMP=0x0000000000bfd56c
- (unsigned long long)_permittedArrowDirectionForKeyboardPopover;	// IMP=0x0000000000bfd3aa
- (void)timeLabelWillBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000bfd3a4
- (_Bool)timeLabelCanBecomeFirstResponder:(id)arg1;	// IMP=0x0000000000bfd38f
- (_Bool)timeLabelShouldSuppressSoftwareKeyboard:(id)arg1;	// IMP=0x0000000000bfd387
- (long long)keyboardTypeForTimeLabel:(id)arg1;	// IMP=0x0000000000bfd37c
- (void)timeLabel:(id)arg1 didUpdateText:(id)arg2;	// IMP=0x0000000000bfd368
- (_Bool)timeLabel:(id)arg1 didReceiveText:(id)arg2;	// IMP=0x0000000000bfd360
- (void)_updateWheelsForUpdatedTextInputWithForcedUpdate:(_Bool)arg1;	// IMP=0x0000000000bfcd2b
- (void)_gestureRecognizerFailed:(id)arg1;	// IMP=0x0000000000bfcc2b
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0000000000bfc9d1
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;	// IMP=0x0000000000bfc8b8
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x0000000000bfc768
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x0000000000bfc6f1
- (void)controlEventsGestureRecognizer:(id)arg1 recognizedControlEvent:(unsigned long long)arg2 withEvent:(id)arg3;	// IMP=0x0000000000bfc5dd
- (void)_uninstallTimeInputLabelIfNeeded;	// IMP=0x0000000000bfc460
- (void)_installTimeInputLabelIfNeeded;	// IMP=0x0000000000bfc161
- (struct CGRect)_currentTimeInputLabelFrame;	// IMP=0x0000000000bfc0d7
- (id)_currentTimeFormat;	// IMP=0x0000000000bfc038
- (_Bool)_shouldInstallTimeInputLabelForDatePickerMode:(long long)arg1;	// IMP=0x0000000000bfc028
- (void)_updateTimeInputLabelConfiguration;	// IMP=0x0000000000bfbfcf
- (void)_hidePickerViewSelectionBarForTimeInputLabel:(_Bool)arg1;	// IMP=0x0000000000bfbe9d
- (void)_updateTimeInputLabelPosition;	// IMP=0x0000000000bfbc7d
- (id)_viewForSelectedRowInComponent:(long long)arg1;	// IMP=0x0000000000bfbbe2
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome;
- (void)_setHidesLabels:(_Bool)arg1;	// IMP=0x0000000000bfba59
- (void)_resetSelectionOfTables;	// IMP=0x0000000000bfba53
- (void)layoutSubviews;	// IMP=0x0000000000bfb939
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000bfb81d
- (id)shadowColor;	// IMP=0x0000000000bfb80b
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;	// IMP=0x0000000000bfb6b4
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;	// IMP=0x0000000000bfb636
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;	// IMP=0x0000000000bfb619
@property(readonly, nonatomic) double contentWidth; // @dynamic contentWidth;
@property(nonatomic) double timeInterval;
- (void)_updateEnabledCellsIncludingWMDCells:(_Bool)arg1;	// IMP=0x0000000000bfb258
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x0000000000bfb244
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;	// IMP=0x0000000000bfaf18
- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000bfab3b
- (void)_updateTextColorForCalendarUnitLabel:(id)arg1;	// IMP=0x0000000000bfaac9
- (id)_makeNewCalendarUnitLabel;	// IMP=0x0000000000bfa98e
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;	// IMP=0x0000000000bfa969
- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;	// IMP=0x0000000000bfa406
- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(_Bool)arg3;	// IMP=0x0000000000bfa368
- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(_Bool)arg2;	// IMP=0x0000000000bfa264
- (void)_UIAppearance_setTextColor:(id)arg1;	// IMP=0x0000000000bfa252
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
- (void)_updateLabelColors;	// IMP=0x0000000000bfa14a
- (void)_updateLabels:(_Bool)arg1;	// IMP=0x0000000000bfa04d
- (_Bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;	// IMP=0x0000000000bf9e6c
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;	// IMP=0x0000000000bf9db8
- (int)_selectedMinuteForColumn:(int)arg1;	// IMP=0x0000000000bf9d7c
- (int)_selectedHourForColumn:(int)arg1;	// IMP=0x0000000000bf9d40
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;	// IMP=0x0000000000bf9cec
- (void)_loadDateAnimated:(_Bool)arg1;	// IMP=0x0000000000bf9c5c
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;	// IMP=0x0000000000bf9c3c
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x0000000000bf9770
- (void)didChangeRoundsToMinuteInterval;	// IMP=0x0000000000bf9710
- (void)didChangeMinuteInterval;	// IMP=0x0000000000bf9652
- (void)didChangeMode;	// IMP=0x0000000000bf9525
- (void)_setMode:(id)arg1;	// IMP=0x0000000000bf930a
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (long long)numberOfComponentsInPickerView:(id)arg1;	// IMP=0x0000000000bf92d0
- (void)_updateDateForNewDateRange;	// IMP=0x0000000000bf927b
- (void)didChangeMaximumDate;	// IMP=0x0000000000bf9269
- (void)didChangeMinimumDate;	// IMP=0x0000000000bf9257
- (void)displaySelectedDateAnimated:(_Bool)arg1;	// IMP=0x0000000000bf9251
- (void)didChangeDateFrom:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000bf9044
- (void)_updateLocaleTimeZoneOrCalendar;	// IMP=0x0000000000bf8f54
- (void)didChangeCalendar;	// IMP=0x0000000000bf8f42
- (void)didChangeTimeZone;	// IMP=0x0000000000bf8f30
- (void)didChangeLocale;	// IMP=0x0000000000bf8f1e
@property(readonly, nonatomic) long long datePickerStyle;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;	// IMP=0x0000000000bf8745
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;	// IMP=0x0000000000bf873d
- (_Bool)_showingDate;	// IMP=0x0000000000bf86eb
- (void)_doneLoadingDateOrTime;	// IMP=0x0000000000bf86c4
- (double)_tableRowHeight;	// IMP=0x0000000000bf86a7
- (void)didReset;	// IMP=0x0000000000bf8695
- (void)didChangeToday;	// IMP=0x0000000000bf8650
- (void)_disableCustomKeyboardIfNecessary;	// IMP=0x0000000000bf85c8
- (void)_enableCustomKeyboardIfNecessary;	// IMP=0x0000000000bf8543
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x0000000000bf84c0
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000bf843d
- (void)dealloc;	// IMP=0x0000000000bf83c8
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000bf825d

// Remaining properties
@property(readonly, nonatomic) NSCalendar *calendar; // @dynamic calendar;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;

@end

