//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIView.h"

@class NSDictionary, NSLayoutManager, NSString, NSTextContainer, UIColor, UIScrollView, UITextView, _UITextLayoutControllerBase;
@protocol _UITextCanvas, _UITextContainerViewDelegate, _UITextLayoutController;

__attribute__((visibility("hidden")))
@interface _UITextContainerView : UIView
{
    struct UIEdgeInsets _textContainerInset;	// 176 = 0xb0
    struct CGPoint _textContainerOrigin;	// 208 = 0xd0
    struct CGSize _minSize;	// 224 = 0xe0
    struct CGSize _maxSize;	// 240 = 0xf0
    NSTextContainer *_textContainer;	// 256 = 0x100
    NSDictionary *_linkTextAttributes;	// 264 = 0x108
    unsigned long long _invalidationSeqNo;	// 272 = 0x110
    long long _invalidationSeqClipsToBounds;	// 280 = 0x118
    struct {
        unsigned int textContainerOriginInvalid:1;
        unsigned int verticalLayout:2;
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
        unsigned int freezeTextContainerSize:1;
        unsigned int usesStandardTextScaling:1;
    } _tcvFlags;	// 288 = 0x120
    UITextView *_textView;	// 296 = 0x128
    _UITextLayoutControllerBase<_UITextLayoutController> *_textLayoutController;	// 304 = 0x130
    id <_UITextContainerViewDelegate> _delegate;	// 312 = 0x138
    UIView<_UITextCanvas> *_canvasView;	// 320 = 0x140
}

- (void).cxx_destruct;	// IMP=0x0000000000fcab48
@property(readonly, nonatomic) UIView<_UITextCanvas> *canvasView; // @synthesize canvasView=_canvasView;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) __weak id <_UITextContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(readonly, nonatomic) _UITextLayoutControllerBase<_UITextLayoutController> *textLayoutController; // @synthesize textLayoutController=_textLayoutController;
- (struct CGRect)visibleRect;	// IMP=0x0000000000fca99a
@property(readonly, copy) NSString *description;
- (id)attributedSubstringForMarkedRange;	// IMP=0x0000000000fca812
@property(readonly, nonatomic) NSDictionary *markedTextStyle;
@property(nonatomic) struct _NSRange markedRange;
- (void)setLayoutOrientation:(long long)arg1;	// IMP=0x0000000000fca55e
@property(readonly, nonatomic) long long layoutOrientation;
- (id)layoutManager:(id)arg1 effectiveCUICatalogForTextEffect:(id)arg2;	// IMP=0x0000000000fca4d6
- (void)_ensureLayoutCompleteForRect:(struct CGRect)arg1;	// IMP=0x0000000000fca2cb
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)arg1;	// IMP=0x0000000000fca1d8
- (void)layoutSubviews;	// IMP=0x0000000000fc9f8b
- (_Bool)drawTextInRectIfNeeded:(struct CGRect)arg1;	// IMP=0x0000000000fc9f83
- (void)didRemoveTextAttachmentViews:(id)arg1;	// IMP=0x0000000000fc9f7d
- (void)didLayoutTextAttachmentView:(id)arg1 inFragmentRect:(struct CGRect)arg2;	// IMP=0x0000000000fc9f77
- (void)didAddTextAttachmentViews:(id)arg1;	// IMP=0x0000000000fc9f71
- (void)textContainerUsageDidChangeToSize:(struct CGSize)arg1;	// IMP=0x0000000000fc9f39
@property(readonly, nonatomic) struct CGRect _clipRectForFadedEdges;
@property(readonly, nonatomic) struct CGPoint drawingScale;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
@property(readonly, nonatomic) UIScrollView *enclosingScrollView;
@property(readonly, nonatomic) UIColor *textColor;
- (void)willMoveToSuperview:(id)arg1;	// IMP=0x0000000000fc9d9e
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;	// IMP=0x0000000000fc9c83
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;	// IMP=0x0000000000fc9b2c
@property(nonatomic) _Bool usesStandardTextScaling;
- (_Bool)_ensureLayoutForCappedSize;	// IMP=0x0000000000fc9869
- (_Bool)_shouldCapSizeToFitLayoutRange:(out struct _NSRange *)arg1;	// IMP=0x0000000000fc94cb
- (void)sizeToFit;	// IMP=0x0000000000fc93ec
- (void)_sizeToConstrainedContainerUsedRect;	// IMP=0x0000000000fc92e0
@property(nonatomic, getter=isVerticallyResizable) _Bool verticallyResizable;
@property(nonatomic, getter=isHorizontallyResizable) _Bool horizontallyResizable;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;	// IMP=0x0000000000fc9087
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0000000000fc8f96
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0000000000fc8ea8
- (void)_setNeedsContentsFormatUpdate;	// IMP=0x0000000000fc8e8b
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x0000000000fc8e0b
- (void)setNeedsDisplay;	// IMP=0x0000000000fc8dee
- (void)_setFrameOrBounds:(struct CGRect)arg1 oldRect:(struct CGRect)arg2 isFrameRect:(_Bool)arg3 settingAction:(CDUnknownBlockType)arg4;	// IMP=0x0000000000fc88f0
- (void)_ensureMinAndMaxSizesConsistentWithBounds;	// IMP=0x0000000000fc8880
- (void)invalidateTextContainerOrigin;	// IMP=0x0000000000fc886f
- (_Bool)reconfigureWithLayoutManager:(id)arg1 triggeredBySelector:(SEL)arg2;	// IMP=0x0000000000fc8803
@property(readonly, nonatomic) struct CGPoint textContainerOrigin;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
@property(nonatomic, getter=_freezeTextContainerSize, setter=_setFreezeTextContainerSize:) _Bool freezeTextContainerSize;
- (void)setBackgroundColor:(id)arg1;	// IMP=0x0000000000fc8268
- (void)tintColorDidChange;	// IMP=0x0000000000fc8207
- (id)linkAttributesForLink:(id)arg1 forCharacterAtIndex:(unsigned long long)arg2;	// IMP=0x0000000000fc818e
- (id)linkTextAttributes;	// IMP=0x0000000000fc813f
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000fc8074
- (id)initWithFrame:(struct CGRect)arg1 textLayoutController:(id)arg2 textContainer:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000fc7d43

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

