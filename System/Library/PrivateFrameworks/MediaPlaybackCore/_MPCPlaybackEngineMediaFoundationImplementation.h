//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVPlayerViewController, MPAVItem, MPCAVItemTrace, MPCErrorControllerImplementation, MPCExternalPlaybackControllerImplementation, MPCItemBookmarker, MPCLeaseController, MPCMediaFoundationTranslator, MPCPlayPerfAnalytics, MPCPlaybackEngine, MPCPlayerItemConfigurator, MPCQueueController, NSDictionary, NSNumber, NSString, _MPCAudioSessionController;
@protocol MFAssetLoading, MFPlaybackStackController><MFQueueManagement, MPCPlaybackEngineEventStreamDeferralAssertion;

__attribute__((visibility("hidden")))
@interface _MPCPlaybackEngineMediaFoundationImplementation : NSObject
{
    _Bool _autoPlayWhenLikelyToKeepUp;	// 8 = 0x8
    _Bool _reloadingPlaybackContext;	// 9 = 0x9
    MPCPlaybackEngine *_playbackEngine;	// 16 = 0x10
    MPCQueueController *_queueController;	// 24 = 0x18
    long long _actionAtQueueEnd;	// 32 = 0x20
    long long _jumpIdentifier;	// 40 = 0x28
    id <MFPlaybackStackController><MFQueueManagement> _playbackStackController;	// 48 = 0x30
    MPCItemBookmarker *_bookmarker;	// 56 = 0x38
    MPCMediaFoundationTranslator *_translator;	// 64 = 0x40
    MPCErrorControllerImplementation *_errorController;	// 72 = 0x48
    MPCExternalPlaybackControllerImplementation *_externalPlaybackController;	// 80 = 0x50
    id <MFAssetLoading> _assetLoader;	// 88 = 0x58
    MPCLeaseController *_leaseController;	// 96 = 0x60
    MPCPlayerItemConfigurator *_configurator;	// 104 = 0x68
    unsigned long long _stateHandle;	// 112 = 0x70
    MPCAVItemTrace *_playbackStartTrace;	// 120 = 0x78
    MPCPlayPerfAnalytics *_playPerfAnalytics;	// 128 = 0x80
    _MPCAudioSessionController *_transientAudioSessionController;	// 136 = 0x88
    id <MPCPlaybackEngineEventStreamDeferralAssertion> _evsDeferralAssertionForFirstAudioFrame;	// 144 = 0x90
    NSNumber *_currentRelativeVolume;	// 152 = 0x98
}

+ (id)describePlayer:(id)arg1;	// IMP=0x001000000005bcca
- (void).cxx_destruct;	// IMP=0x0000000000017262
@property(copy, nonatomic) NSNumber *currentRelativeVolume; // @synthesize currentRelativeVolume=_currentRelativeVolume;
@property(retain, nonatomic) id <MPCPlaybackEngineEventStreamDeferralAssertion> evsDeferralAssertionForFirstAudioFrame; // @synthesize evsDeferralAssertionForFirstAudioFrame=_evsDeferralAssertionForFirstAudioFrame;
@property(retain, nonatomic) _MPCAudioSessionController *transientAudioSessionController; // @synthesize transientAudioSessionController=_transientAudioSessionController;
@property(retain, nonatomic) MPCPlayPerfAnalytics *playPerfAnalytics; // @synthesize playPerfAnalytics=_playPerfAnalytics;
@property(retain, nonatomic) MPCAVItemTrace *playbackStartTrace; // @synthesize playbackStartTrace=_playbackStartTrace;
@property(nonatomic) unsigned long long stateHandle; // @synthesize stateHandle=_stateHandle;
@property(retain, nonatomic) MPCPlayerItemConfigurator *configurator; // @synthesize configurator=_configurator;
@property(retain, nonatomic) MPCLeaseController *leaseController; // @synthesize leaseController=_leaseController;
@property(retain, nonatomic) id <MFAssetLoading> assetLoader; // @synthesize assetLoader=_assetLoader;
@property(retain, nonatomic) MPCExternalPlaybackControllerImplementation *externalPlaybackController; // @synthesize externalPlaybackController=_externalPlaybackController;
@property(retain, nonatomic) MPCErrorControllerImplementation *errorController; // @synthesize errorController=_errorController;
@property(retain, nonatomic) MPCMediaFoundationTranslator *translator; // @synthesize translator=_translator;
@property(retain, nonatomic) MPCItemBookmarker *bookmarker; // @synthesize bookmarker=_bookmarker;
@property(retain, nonatomic) id <MFPlaybackStackController><MFQueueManagement> playbackStackController; // @synthesize playbackStackController=_playbackStackController;
@property(nonatomic) long long jumpIdentifier; // @synthesize jumpIdentifier=_jumpIdentifier;
@property(readonly, nonatomic, getter=isReloadingPlaybackContext) _Bool reloadingPlaybackContext; // @synthesize reloadingPlaybackContext=_reloadingPlaybackContext;
@property(nonatomic) long long actionAtQueueEnd; // @synthesize actionAtQueueEnd=_actionAtQueueEnd;
@property(nonatomic) _Bool autoPlayWhenLikelyToKeepUp; // @synthesize autoPlayWhenLikelyToKeepUp=_autoPlayWhenLikelyToKeepUp;
@property(retain, nonatomic) MPCQueueController *queueController; // @synthesize queueController=_queueController;
@property(readonly, nonatomic) __weak MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
- (void)invalidateEVSDeferralAssertionForFirstAudioFrame;	// IMP=0x0000000000017011
- (void)takeEVSDeferralAssertionForFirstAudioFrame;	// IMP=0x0000000000016f1f
- (void)assetLoadingDidStartForItem:(id)arg1;	// IMP=0x0000000000016c4e
- (void)assetLoadingDidCompleteForItem:(id)arg1 error:(id)arg2;	// IMP=0x000000000001611a
- (void)stackControllerDidCreateTransitionFrom:(id)arg1 to:(id)arg2 type:(long long)arg3 parameters:(id)arg4;	// IMP=0x0000000000015f3b
- (void)errorResolutionDidEndForItem:(id)arg1 error:(id)arg2 resolution:(long long)arg3;	// IMP=0x0000000000015dcb
- (void)errorResolutionDidStartForItem:(id)arg1 error:(id)arg2;	// IMP=0x0000000000015c98
- (void)didReportSignpostWithType:(long long)arg1;	// IMP=0x0000000000015c24
- (void)relativeVolumeDidChangeTo:(float)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000015a34
- (void)firstVideoFrameWasRenderedForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000001548b
- (void)playbackIsBlockedOnNonPlayableItem:(id)arg1;	// IMP=0x000000000001531d
- (void)mediaServicesInterruptionDidEndWithTimeStamp:(id)arg1;	// IMP=0x0000000000014f8b
- (void)mediaServicesInterruptionDidBeginWithItemAtDeath:(id)arg1 timeAtDeath:(double)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000014a73
- (void)userActionDidEnd:(id)arg1 error:(id)arg2;	// IMP=0x00000000000147e7
- (void)userActionDidBegin:(id)arg1;	// IMP=0x000000000001438b
- (void)didReachEndOfQueueWithReason:(id)arg1;	// IMP=0x000000000001411a
- (void)screenRecordingDidChange:(_Bool)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000013f08
- (void)tracksDidChangeForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000013d14
- (void)playbackIsLikelyToKeepUp:(_Bool)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000013444
- (void)playbackBufferStateDidChangeToState:(long long)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000012bc3
- (void)interruptionDidFinishForInterruptor:(id)arg1 shouldResume:(_Bool)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000128e8
- (void)interruptionDidBeginWithInterruptor:(id)arg1 timeStamp:(id)arg2;	// IMP=0x0000000000012674
- (void)stateDidChangeFromState:(long long)arg1 toState:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000001213c
- (void)routeDidChange:(_Bool)arg1 metadata:(id)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000011c5c
- (void)playbackWaitingToPlayForItem:(id)arg1 reason:(id)arg2 timeStamp:(id)arg3;	// IMP=0x0000000000011a01
- (void)timeControlStatusDidChange:(long long)arg1 waitingReason:(id)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000116db
- (void)firstFrameWillRenderForItem:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000001103f
- (void)playbackRateDidChangeNotifiedForItem:(id)arg1 newRate:(float)arg2 reason:(id)arg3 participantIdentifier:(id)arg4 timeStamp:(id)arg5;	// IMP=0x0000000000010946
- (void)playbackRateDidChangeToRate:(float)arg1 forItem:(id)arg2 timeStamp:(id)arg3;	// IMP=0x00000000000106d8
- (void)playbackDidStopForItem:(id)arg1 source:(id)arg2 reason:(id)arg3 timeStamp:(id)arg4;	// IMP=0x00000000000103d2
- (void)playbackDidStartForItem:(id)arg1 rate:(float)arg2 fromStalling:(_Bool)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000fbc4
- (void)_logPlayerEventsForQueueItem:(id)arg1;	// IMP=0x000000000000f7ce
- (void)_updateActiveFormatForQueueItem:(id)arg1;	// IMP=0x000000000000f3f4
- (void)itemIsReadyToPlay:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000000ef31
- (void)itemDidPlayToEnd:(id)arg1 timeStamp:(id)arg2;	// IMP=0x000000000000ec9e
- (void)itemDidFailToPlayToEnd:(id)arg1 error:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000e6bf
- (void)itemDidFailToLoad:(id)arg1 error:(id)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000e449
- (void)userSeekCompletedForItem:(id)arg1 fromTime:(double)arg2 toTime:(double)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000e100
- (void)playbackTimeDidChangeTo:(double)arg1 forItem:(id)arg2 reason:(long long)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000d880
- (void)playbackDidReachQueueEndWithTimeStamp:(id)arg1;	// IMP=0x000000000000d6ed
- (void)itemDidResignCurrent:(id)arg1 source:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000d31d
- (void)itemDidBecomeCurrent:(id)arg1 source:(long long)arg2 timeStamp:(id)arg3;	// IMP=0x000000000000ccb0
- (void)currentItemWillChangeFromItem:(id)arg1 toItem:(id)arg2 source:(long long)arg3 timeStamp:(id)arg4;	// IMP=0x000000000000c73b
- (void)queueController:(id)arg1 didIncrementVersionForSegment:(id)arg2;	// IMP=0x000000000000c6fe
- (void)queueController:(id)arg1 didChangeActionAtQueueEnd:(long long)arg2;	// IMP=0x000000000000c68c
- (void)queueController:(id)arg1 didChangeShuffleType:(long long)arg2;	// IMP=0x000000000000c61a
- (void)queueController:(id)arg1 didChangeRepeatType:(long long)arg2;	// IMP=0x000000000000c5a8
- (void)queueController:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2;	// IMP=0x000000000000c5a2
- (void)queueController:(id)arg1 failedToLoadItem:(id)arg2;	// IMP=0x000000000000c3b8
- (void)queueControllerDidChangeContents:(id)arg1;	// IMP=0x000000000000c243
- (void)_performSkipForUserAction:(id)arg1;	// IMP=0x000000000000bfea
- (_Bool)_isAVKitSkipAction:(id)arg1;	// IMP=0x000000000000bf5f
- (void)_playbackDidStopForItem:(id)arg1 source:(id)arg2 reason:(id)arg3 time:(double)arg4;	// IMP=0x000000000000bb8d
- (id)_MPAVItemForMFQueuePlayerItem:(id)arg1;	// IMP=0x000000000000ba73
- (void)_logTimeJumpForItem:(id)arg1 fromTime:(double)arg2 toTime:(double)arg3 userInitiated:(_Bool)arg4 timeStamp:(id)arg5;	// IMP=0x000000000000b3c3
@property(readonly, nonatomic) NSDictionary *_stateDictionary;
- (void)_setupPlaybackStackWithPlaybackEngine:(id)arg1 queueController:(id)arg2;	// IMP=0x000000000000aa08
- (void)_resetPlaybackStack;	// IMP=0x000000000000a98f
- (void)setRelativeVolume:(float)arg1;	// IMP=0x000000000000a8fa
- (void)jumpToTime:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000a733
- (void)setRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000a508
- (void)endScanningWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000a358
- (void)beginScanningWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000a18e
- (void)skipWithDirection:(long long)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000009e47
- (_Bool)skipWithDirectionShouldJumpToItemStart:(long long)arg1;	// IMP=0x0000000000009df4
- (void)togglePlaybackWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000000099e8
- (void)pauseForLeasePreventionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000009827
- (void)pauseWithFadeout:(double)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000965c
- (void)pauseWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000949b
- (void)playWithRate:(float)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000000092a5
- (void)endPlaybackWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000900d
- (void)endPlayback;	// IMP=0x0000000000008f61
@property(readonly, nonatomic) _Bool hasPlayedSuccessfully;
@property(readonly, nonatomic) AVPlayerViewController *playerViewController;
@property(readonly, nonatomic) long long stateBeforeInterruption;
@property(readonly, nonatomic) long long state;
@property(readonly, nonatomic) float currentRate;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) MPAVItem *currentItem;
- (void)updateAudioSession;	// IMP=0x0000000000008b9c
- (void)endUsingVideoLayer;	// IMP=0x0000000000008b96
- (void)beginUsingVideoLayer;	// IMP=0x0000000000008b90
- (void)playWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000008b7e
- (void)pauseWithFadeout:(float)arg1;	// IMP=0x0000000000008a04
- (void)pause;	// IMP=0x00000000000089ef
- (_Bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2 ignoreElapsedTime:(_Bool)arg3 force:(_Bool)arg4 error:(id *)arg5;	// IMP=0x0000000000008611
- (void)becomeActiveWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000084ac
- (void)setQueueWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007e5d
- (void)loadSessionWithQueueController:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000007cb6
- (void)replaceCurrentItemWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000007916
- (void)reloadWithPlaybackContext:(id)arg1 identifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000073b4
- (void)setupPlaybackStackIfNeeded;	// IMP=0x0000000000007236
- (void)prewarm;	// IMP=0x00000000000071d7
- (void)dealloc;	// IMP=0x000000000000719d
- (id)initWithPlaybackEngine:(id)arg1;	// IMP=0x000000000000709c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

