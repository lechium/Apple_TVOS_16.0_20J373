//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaPlayer/MPAVItem.h>

@class ICAVAssetDownloadURLSession, ICContentKeySession, ICMusicSubscriptionLeaseSession, ICMusicSubscriptionLeaseStatus, ICStoreRequestContext, ICURLRequest, MPCAudioAssetTypeSelection, MPCModelGenericAVItemTimedMetadataRequest, MPCModelGenericAVItemTimedMetadataResponse, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackEngineEventStream, MPCPlaybackRequestEnvironment, MPCPlayerAudioFormat, MPCPlayerAudioRoute, MPCSuzeLeaseSession, MPGaplessInfo, MPMediaLibrary, MPModelGenericObject, MPPropertySet, MPSubscriptionStatusPlaybackInformation, NSArray, NSData, NSDictionary, NSNumber, NSObject, NSOperationQueue, NSString, NSURL;
@protocol MPCModelPlaybackAssetCacheProviding, MPCReportingIdentityPropertiesLoading, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MPCModelGenericAVItem : MPAVItem
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 112 = 0x70
    _Bool _allowsAirPlayFromCloud;	// 120 = 0x78
    NSNumber *_bookmarkTime;	// 128 = 0x80
    _Bool _hasLoadedSubscriptionLeaseSession;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_subscriptionLeaseSessionLoadQueue;	// 144 = 0x90
    ICMusicSubscriptionLeaseSession *_subscriptionLeaseSession;	// 152 = 0x98
    _Bool _hasLoadedSubscriptionPlaybackInformation;	// 160 = 0xa0
    MPSubscriptionStatusPlaybackInformation *_subscriptionPlaybackInformation;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_subscriptionPlaybackInformationLoadQueue;	// 176 = 0xb0
    _Bool _shouldAutomaticallyRefreshSubscriptionLease;	// 184 = 0xb8
    _Bool _isSubscriptionPolicyContent;	// 185 = 0xb9
    _Bool _lastPreparedForNonZeroRate;	// 186 = 0xba
    long long _subscriptionLeaseRequestCount;	// 192 = 0xc0
    _Bool _didDeferPreventionStatusUpdate;	// 200 = 0xc8
    MPCSuzeLeaseSession *_suzeLeaseSession;	// 208 = 0xd0
    _Bool _isAutomaticallyRefreshingSuzeLeaseSession;	// 216 = 0xd8
    CDUnknownBlockType _firstBecomeActivePlayerItemBlock;	// 224 = 0xe0
    NSArray *_currentGlobalTimedMetadataGroups;	// 232 = 0xe8
    MPModelGenericObject *_flattenedGenericObject;	// 240 = 0xf0
    MPModelGenericObject *_flattenedMetadataGenericObject;	// 248 = 0xf8
    MPModelGenericObject *_metadataGenericObject;	// 256 = 0x100
    MPPropertySet *_itemProperties;	// 264 = 0x108
    id <MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;	// 272 = 0x110
    MPCModelGenericAVItemTimedMetadataRequest *_timedMetadataRequest;	// 280 = 0x118
    MPCModelGenericAVItemTimedMetadataResponse *_timedMetadataResponse;	// 288 = 0x120
    NSOperationQueue *_timedMetadataOperationQueue;	// 296 = 0x128
    _Bool _isMusicCellularStreamingAllowed;	// 304 = 0x130
    _Bool _didReceiveHLSTimedMetadata;	// 305 = 0x131
    NSString *_hlsStreamIdentifier;	// 312 = 0x138
    _Bool _isiTunesStoreStream;	// 320 = 0x140
    ICStoreRequestContext *_storeRequestContext;	// 328 = 0x148
    NSURL *_streamingKeyCertificateURL;	// 336 = 0x150
    NSURL *_streamingKeyServerURL;	// 344 = 0x158
    NSString *_rtcReportingServiceIdentifier;	// 352 = 0x160
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 360 = 0x168
    ICContentKeySession *_contentKeySession;	// 368 = 0x170
    ICAVAssetDownloadURLSession *_hlsDownloadURLSession;	// 376 = 0x178
    ICURLRequest *_hlsDownloadURLRequest;	// 384 = 0x180
    struct os_unfair_lock_s _genericObjectLock;	// 392 = 0x188
    _Bool _mediaItemNeedsLoading;	// 396 = 0x18c
    NSURL *_tempFileURLToCleanup;	// 400 = 0x190
    _Bool _radioPlayback;	// 408 = 0x198
    _Bool _radioStreamPlayback;	// 409 = 0x199
    _Bool _subscriptionRequired;	// 410 = 0x19a
    _Bool _hlsAsset;	// 411 = 0x19b
    _Bool _downloadedAsset;	// 412 = 0x19c
    long long _leasePlaybackPreventionState;	// 416 = 0x1a0
    ICMusicSubscriptionLeaseStatus *_leaseStatus;	// 424 = 0x1a8
    NSDictionary *_audioFormatsDictionary;	// 432 = 0x1b0
    long long _preferredAudioAssetType;	// 440 = 0x1b8
    MPCAudioAssetTypeSelection *_preferredAudioAssetTypeSelection;	// 448 = 0x1c0
    id <MPCModelPlaybackAssetCacheProviding> _assetCacheProvider;	// 456 = 0x1c8
    NSString *_assetSourceStoreFrontID;	// 464 = 0x1d0
    long long _equivalencySourceAdamID;	// 472 = 0x1d8
    MPModelGenericObject *_genericObject;	// 480 = 0x1e0
    NSData *_jingleTimedMetadata;	// 488 = 0x1e8
    MPMediaLibrary *_mediaLibrary;	// 496 = 0x1f0
    NSNumber *_siriInitiated;	// 504 = 0x1f8
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 512 = 0x200
    long long _stationItemLikedState;	// 520 = 0x208
    NSDictionary *_trackInfo;	// 528 = 0x210
    NSString *_playerID;	// 536 = 0x218
    MPCPlaybackEngineEventStream *_eventStream;	// 544 = 0x220
    MPCPlayerAudioFormat *_preferredFormat;	// 552 = 0x228
    MPCPlayerAudioFormat *_activeFormat;	// 560 = 0x230
    long long _activeFormatJustification;	// 568 = 0x238
    NSArray *_alternateFormats;	// 576 = 0x240
    NSArray *_availableSortedFormats;	// 584 = 0x248
    MPCPlayerAudioRoute *_audioRoute;	// 592 = 0x250
    long long _loadedAudioAssetType;	// 600 = 0x258
}

+ (id)_downloadCompletionPendingItems;	// IMP=0x001000000003eb42
+ (id)_utilitySerialQueue;	// IMP=0x001000000003eb12
+ (_Bool)_prefersHighQualityVideoContentForNetworkType:(long long)arg1;	// IMP=0x001000000003e9d2
+ (_Bool)_prefersHighQualityAudioContentForNetworkType:(long long)arg1;	// IMP=0x001000000003e83f
+ (long long)_unwrapPlaybackError:(id)arg1;	// IMP=0x001000000003e75e
- (void).cxx_destruct;	// IMP=0x000000000003590d
@property(readonly, nonatomic, getter=isDownloadedAsset) _Bool downloadedAsset; // @synthesize downloadedAsset=_downloadedAsset;
@property(readonly, nonatomic, getter=isHLSAsset) _Bool hlsAsset; // @synthesize hlsAsset=_hlsAsset;
@property(readonly, nonatomic) long long loadedAudioAssetType; // @synthesize loadedAudioAssetType=_loadedAudioAssetType;
@property(retain, nonatomic) MPCPlayerAudioRoute *audioRoute; // @synthesize audioRoute=_audioRoute;
@property(retain, nonatomic) NSArray *availableSortedFormats; // @synthesize availableSortedFormats=_availableSortedFormats;
@property(retain, nonatomic) NSArray *alternateFormats; // @synthesize alternateFormats=_alternateFormats;
@property(nonatomic) long long activeFormatJustification; // @synthesize activeFormatJustification=_activeFormatJustification;
@property(retain, nonatomic) MPCPlayerAudioFormat *activeFormat; // @synthesize activeFormat=_activeFormat;
@property(retain, nonatomic) MPCPlayerAudioFormat *preferredFormat; // @synthesize preferredFormat=_preferredFormat;
@property(nonatomic) __weak MPCPlaybackEngineEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(retain, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
@property(retain, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(nonatomic) long long stationItemLikedState; // @synthesize stationItemLikedState=_stationItemLikedState;
@property(readonly, copy, nonatomic) MPCPlaybackRequestEnvironment *playbackRequestEnvironment; // @synthesize playbackRequestEnvironment=_playbackRequestEnvironment;
@property(nonatomic, getter=isSubscriptionRequired) _Bool subscriptionRequired; // @synthesize subscriptionRequired=_subscriptionRequired;
@property(nonatomic, getter=isRadioStreamPlayback) _Bool radioStreamPlayback; // @synthesize radioStreamPlayback=_radioStreamPlayback;
@property(nonatomic, getter=isRadioPlayback) _Bool radioPlayback; // @synthesize radioPlayback=_radioPlayback;
@property(copy, nonatomic, getter=isSiriInitiated) NSNumber *siriInitiated; // @synthesize siriInitiated=_siriInitiated;
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary; // @synthesize mediaLibrary=_mediaLibrary;
@property(readonly, copy, nonatomic) NSData *jingleTimedMetadata; // @synthesize jingleTimedMetadata=_jingleTimedMetadata;
@property(retain, nonatomic) MPModelGenericObject *genericObject; // @synthesize genericObject=_genericObject;
@property(nonatomic) long long equivalencySourceAdamID; // @synthesize equivalencySourceAdamID=_equivalencySourceAdamID;
@property(copy, nonatomic) NSString *assetSourceStoreFrontID; // @synthesize assetSourceStoreFrontID=_assetSourceStoreFrontID;
@property(retain, nonatomic) id <MPCModelPlaybackAssetCacheProviding> assetCacheProvider; // @synthesize assetCacheProvider=_assetCacheProvider;
@property(readonly, nonatomic) MPCAudioAssetTypeSelection *preferredAudioAssetTypeSelection; // @synthesize preferredAudioAssetTypeSelection=_preferredAudioAssetTypeSelection;
@property(readonly, nonatomic) long long preferredAudioAssetType; // @synthesize preferredAudioAssetType=_preferredAudioAssetType;
@property(copy, nonatomic) NSDictionary *audioFormatsDictionary; // @synthesize audioFormatsDictionary=_audioFormatsDictionary;
- (id)leaseStatus;	// IMP=0x00000000000355f5
- (long long)leasePlaybackPreventionState;	// IMP=0x00000000000355e4
- (void)_removeFromDownloadCompletionPendingItems;	// IMP=0x0000000000035559
- (void)_addToDownloadCompletionPendingItems;	// IMP=0x00000000000354ce
- (void)resumeContentKeySession;	// IMP=0x00000000000354aa
- (void)pauseContentKeySession;	// IMP=0x0000000000035486
- (id)analyticsFormatType;	// IMP=0x0000000000035261
- (id)analyticsContentType;	// IMP=0x000000000003520d
- (void)_updatePreventionStatusWithLeaseSession:(id)arg1;	// IMP=0x0000000000034e65
- (void)_updateJingleTimedMetadata;	// IMP=0x000000000003499f
- (void)_updateBookmarkTime:(double)arg1 isCheckpoint:(_Bool)arg2;	// IMP=0x000000000003475f
- (void)_updateAutomaticSubscriptionLeaseRefresh;	// IMP=0x0000000000034706
- (id)_storeUbiquitousIdentifier;	// IMP=0x00000000000346b6
- (id)_stopTime;	// IMP=0x0000000000034666
- (double)_startTime;	// IMP=0x0000000000034616
- (id)_storeRequestContext;	// IMP=0x0000000000034601
- (_Bool)_shouldRememberBookmarkTime;	// IMP=0x00000000000345ac
- (id)_rtcReportingServiceIdentifierWithAssetURL:(id)arg1;	// IMP=0x0000000000034278
- (id)_rtcReportingMediaIdentifierWithAssetLoadProperties:(id)arg1;	// IMP=0x00000000000340b2
- (id)_radioStation;	// IMP=0x0000000000034047
- (void)_postInvalidationNotifications;	// IMP=0x0000000000033f6d
- (id)_modelPlaybackPosition;	// IMP=0x0000000000033eab
- (id)_isPrivateListeningEnabled;	// IMP=0x0000000000033e50
- (void)_invalidateContentItem;	// IMP=0x0000000000033e2c
- (void)_updateHasBeenPlayedWithElapsedTime:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000033bf5
- (void)_handlePlaybackFinishedTime:(double)arg1 didFinishByHittingEnd:(_Bool)arg2;	// IMP=0x000000000003309c
- (void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000032e17
- (void)_getSubscriptionLeasePropertiesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000032b27
- (id)_bookmarkTime;	// IMP=0x0000000000032a8b
- (unsigned long long)_audioFormatPreference;	// IMP=0x0000000000032a40
- (void)_applyPreferredPeakBitRateToPlayerItem:(id)arg1 withItemType:(long long)arg2;	// IMP=0x00000000000324f4
- (void)_applyLoudnessInfo;	// IMP=0x0000000000032049
- (_Bool)_allowsStreamingPlayback;	// IMP=0x0000000000032041
- (_Bool)_allowsAssetCaching;	// IMP=0x0000000000031ff7
- (CDStruct_c6d350ec)_timeoutValues;	// IMP=0x0000000000031df5
- (void)_timedMetadataResponseDidInvalidateNotification:(id)arg1;	// IMP=0x0000000000031dae
- (void)_suzeLeaseSessionRenewDidFailNotification:(id)arg1;	// IMP=0x0000000000031c92
- (void)_subscriptionLeaseStatusDidChangeNotification:(id)arg1;	// IMP=0x0000000000031be8
- (void)_contentTasteControllerDidChangeNotification:(id)arg1;	// IMP=0x0000000000031b89
- (void)_ageVerificationStateDidChangeNotification:(id)arg1;	// IMP=0x0000000000031b2a
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;	// IMP=0x0000000000031acb
- (void)environmentMonitorDidChangeNetworkType:(id)arg1;	// IMP=0x0000000000031a6c
- (void)nowPlayingInfoCenter:(id)arg1 lyricsForContentItem:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000031595
- (void)_reloadTimedMetadataRequest;	// IMP=0x0000000000031184
- (void)metadataOutput:(id)arg1 didOutputTimedMetadataGroups:(id)arg2 fromPlayerItemTrack:(id)arg3;	// IMP=0x0000000000030fa0
- (_Bool)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2;	// IMP=0x0000000000030f8e
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;	// IMP=0x0000000000030b2f
- (id)rtcReportingServiceIdentifier;	// IMP=0x0000000000030ac2
@property(readonly, nonatomic) NSData *trackInfoData;
- (id)mpcReporting_trackInfo;	// IMP=0x0000000000030924
- (id)mpcReporting_siriInitiated;	// IMP=0x0000000000030912
- (id)mpcReporting_privateListeningEnabled;	// IMP=0x0000000000030900
- (_Bool)mpcReporting_shouldReportPlayEventsToStore;	// IMP=0x00000000000308ee
- (_Bool)mpcReporting_shouldUseRelativeTimePositions;	// IMP=0x00000000000308dc
- (id)mpcReporting_requestingBundleVersion;	// IMP=0x00000000000308bf
- (id)mpcReporting_requestingBundleIdentifier;	// IMP=0x00000000000308a2
- (id)mpcReporting_jingleTimedMetadata;	// IMP=0x0000000000030890
- (id)mpcReporting_identityPropertiesLoader;	// IMP=0x0000000000030834
- (unsigned long long)mpcReporting_itemType;	// IMP=0x00000000000307eb
- (long long)mpcReporting_equivalencySourceAdamID;	// IMP=0x00000000000307d9
- (CDUnknownBlockType)artworkCatalogBlock;	// IMP=0x000000000003069d
- (long long)_keyServerAdamID;	// IMP=0x0000000000030466
- (void)_didBecomeActivePlayerItem;	// IMP=0x0000000000030263
- (void)_didResignActivePlayerItem;	// IMP=0x000000000002ffc5
- (void)_willResignActivePlayerItem;	// IMP=0x000000000002fe9e
- (void)_willBecomeActivePlayerItem;	// IMP=0x000000000002fe23
- (long long)_persistedLikedState;	// IMP=0x000000000002fd29
- (void)_handleUpdatedLikedState:(long long)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000002fbf9
- (void)_currentPlaybackRateDidChange:(float)arg1;	// IMP=0x000000000002fbb8
- (_Bool)usesSubscriptionLease;	// IMP=0x000000000002fadc
- (id)useListeningHistory;	// IMP=0x000000000002f9e7
- (id)storeFrontIdentifier;	// IMP=0x000000000002f98c
- (id)storeAccountID;	// IMP=0x000000000002f905
- (_Bool)shouldPreventPlayback;	// IMP=0x000000000002f8f0
- (void)setPlaybackStoppedTime:(double)arg1;	// IMP=0x000000000002f63b
- (void)setPlaybackFinishedTime:(double)arg1;	// IMP=0x000000000002f5d9
- (void)setPlaybackCheckpointCurrentTime:(double)arg1;	// IMP=0x000000000002f58c
- (void)resolvePlaybackError:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000002ed79
- (_Bool)requiresLoadedAssetForAirPlayProperties;	// IMP=0x000000000002ed71
- (id)bookmarkTime;	// IMP=0x000000000002ed5f
- (_Bool)allowsExternalPlayback;	// IMP=0x000000000002ed57
- (_Bool)allowsAirPlayFromCloud;	// IMP=0x000000000002ed47
- (_Bool)canUseLoadedAsset;	// IMP=0x000000000002ecda
- (void)_updateAudioFormatInfoForContentItem:(id)arg1;	// IMP=0x000000000002e5bb
- (float)userRating;	// IMP=0x000000000002e523
- (_Bool)useEmbeddedChapterData;	// IMP=0x000000000002e51b
- (id)urlTimeMarkers;	// IMP=0x000000000002e513
- (long long)type;	// IMP=0x000000000002e43f
- (void)setupWithPlaybackInfo;	// IMP=0x000000000002e1c7
- (id)playbackInfo;	// IMP=0x000000000002dc29
- (id)containerUniqueID;	// IMP=0x000000000002dba8
- (_Bool)hasTimeSyncedLyrics;	// IMP=0x000000000002daed
- (_Bool)hasStoreLyrics;	// IMP=0x000000000002da32
- (id)libraryLyrics;	// IMP=0x000000000002d96b
- (_Bool)supportsLikedState;	// IMP=0x000000000002d963
- (long long)storeSubscriptionAdamID;	// IMP=0x000000000002d864
- (long long)storeItemInt64ID;	// IMP=0x000000000002d6f6
- (long long)stationProviderID;	// IMP=0x000000000002d68a
- (id)stationStringID;	// IMP=0x000000000002d5e9
- (id)stationName;	// IMP=0x000000000002d4af
- (id)stationHash;	// IMP=0x000000000002d40e
- (long long)stationID;	// IMP=0x000000000002d379
@property(readonly, nonatomic) _Bool shouldReportPlayEventsToStore;
- (void)setRating:(float)arg1;	// IMP=0x000000000002d10d
- (void)prepareForRate:(float)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000002cde9
- (_Bool)prefersSeekOverSkip;	// IMP=0x000000000002ccd4
- (_Bool)shouldShowComposer;	// IMP=0x000000000002cc48
- (id)playbackError;	// IMP=0x000000000002c840
- (void)notePlaybackFinishedByHittingEnd;	// IMP=0x000000000002c7c7
- (long long)storePurchasedAdamID;	// IMP=0x000000000002c728
- (unsigned long long)composerPersistentID;	// IMP=0x000000000002c61f
- (unsigned long long)genrePersistentID;	// IMP=0x000000000002c516
- (unsigned long long)artistPersistentID;	// IMP=0x000000000002c3d3
- (unsigned long long)albumArtistPersistentID;	// IMP=0x000000000002c2aa
- (unsigned long long)albumPersistentID;	// IMP=0x000000000002c167
- (id)cloudAlbumID;	// IMP=0x000000000002c051
- (id)cloudUniversalLibraryID;	// IMP=0x000000000002bfa6
- (id)personID;	// IMP=0x000000000002befb
- (unsigned long long)cloudID;	// IMP=0x000000000002be5c
- (id)databaseID;	// IMP=0x000000000002bdb1
- (unsigned long long)persistentID;	// IMP=0x000000000002bd12
- (unsigned long long)mediaType;	// IMP=0x000000000002bc57
- (id)modelGenericObject;	// IMP=0x000000000002bc13
- (_Bool)mediaItemNeedsLoading;	// IMP=0x000000000002bc03
- (id)mediaItem;	// IMP=0x000000000002bb39
- (id)mainTitle;	// IMP=0x000000000002ba77
- (void)updatePlayerItemMetadata;	// IMP=0x000000000002b113
- (void)_emitAudioAssetTypeSelection:(id)arg1;	// IMP=0x000000000002ae62
- (void)_emitAudioFormatChangeEvent;	// IMP=0x000000000002aa58
- (void)_updateActiveFormatJustification:(long long)arg1;	// IMP=0x000000000002a99b
- (void)configureAVPlayerItemWithAudioFormat:(id)arg1 forceSpatial:(_Bool)arg2;	// IMP=0x000000000002a903
- (_Bool)updateActiveFormat:(id)arg1 justification:(long long)arg2;	// IMP=0x000000000002a6d5
- (_Bool)updatePreferredFormat:(id)arg1;	// IMP=0x000000000002a552
- (_Bool)updateAudioFormatsDictionary:(id)arg1;	// IMP=0x000000000002a41c
- (id)audioFormatForStableVariantID:(id)arg1;	// IMP=0x000000000002a399
- (id)currentPlayerAudioFormat;	// IMP=0x000000000002a30c
- (_Bool)_linkAssetIfNeededAtURL:(id)arg1 toDestinationURL:(id)arg2 shareCacheURL:(id)arg3;	// IMP=0x0000000000029dfd
- (void)_checkDownloadErrorAndValidityOfDownloadedHLSAsset:(id)arg1 downloadLocationURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000029ac7
- (void)_downloadHLSAsset:(id)arg1 destinationURL:(id)arg2 sharedCacheURL:(id)arg3 assetLoadProperties:(id)arg4 loadResult:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x0000000000029717
- (id)_createOrUpdateDatabaseEntry:(id)arg1 loadResult:(id)arg2 urlBag:(id)arg3 destinationURL:(id)arg4 purgeable:(_Bool)arg5;	// IMP=0x000000000002935c
- (id)_hlsDownloadOptionsDictionary:(id)arg1;	// IMP=0x000000000002903a
- (void)_getHLSServerDataForLoadResults:(id)arg1 bag:(id)arg2 keyCertificateURL:(id *)arg3 keyServerURL:(id *)arg4 keyServerAdamID:(id *)arg5 keyServerProtocolType:(long long *)arg6;	// IMP=0x0000000000028ce9
- (void)_downloadHLSAssetWhilePlaying:(id)arg1 assetLoadProperties:(id)arg2 assetLoadResult:(id)arg3 destinationURL:(id)arg4 sharedCacheURL:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x0000000000028973
- (void)_prepareAssetForHLSPlayback:(id)arg1 loadResult:(id)arg2 destinationURL:(id)arg3 storeRequestContext:(id)arg4 urlBag:(id)arg5 identityProperties:(id)arg6;	// IMP=0x0000000000027e7c
- (_Bool)_isAssetLoadResultValidForPlayback:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000027be0
- (id)_decorateAssetLoadResult:(id)arg1 withURLBag:(id)arg2;	// IMP=0x0000000000027758
- (void)loadAssetAndPlayerItem;	// IMP=0x000000000001fbfb
- (float)_volumeAdjustment;	// IMP=0x000000000001fb5c
- (id)_loudnessInfoMediaKind;	// IMP=0x000000000001fa83
@property(readonly, nonatomic) MPGaplessInfo *gaplessInfo;
- (id)_iTunesStorePurchasedMediaKind;	// IMP=0x000000000001f8f9
- (long long)_suzeLeaseMediaType;	// IMP=0x000000000001f841
- (id)_assetLoadPropertiesWithUserIdentityProperties:(id)arg1 delegatedUserIdentityProperties:(id)arg2 subscriptionPlaybackInfo:(id)arg3;	// IMP=0x000000000001f088
- (_Bool)_shouldPreloadSubscriptionStatus;	// IMP=0x000000000001efd7
@property(readonly, nonatomic) _Bool hasVideo;
- (_Bool)_prefersHighQualityContent;	// IMP=0x000000000001ed3e
- (id)_delegatedUserIdentityProperties:(id *)arg1;	// IMP=0x000000000001eb71
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;	// IMP=0x000000000001ea7f
- (_Bool)isStreamable;	// IMP=0x000000000001ea77
- (_Bool)isRadioItem;	// IMP=0x000000000001ea65
- (_Bool)isLikedStateEnabled;	// IMP=0x000000000001ea5d
- (id)explicitBadge;	// IMP=0x000000000001e95a
- (_Bool)isExplicitTrack;	// IMP=0x000000000001e870
- (_Bool)isAssetURLValid;	// IMP=0x000000000001e868
- (_Bool)isAlwaysLive;	// IMP=0x000000000001e6d6
- (id)genre;	// IMP=0x000000000001e60f
- (id)externalContentIdentifier;	// IMP=0x000000000001e545
- (double)durationFromExternalMetadata;	// IMP=0x000000000001e488
- (id)copyrightText;	// IMP=0x000000000001e3ee
- (id)chapterTimeMarkers;	// IMP=0x000000000001e3e6
- (id)composer;	// IMP=0x000000000001e31f
- (id)artworkTimeMarkers;	// IMP=0x000000000001e317
- (_Bool)isArtistUploadedContent;	// IMP=0x000000000001e28b
- (id)artist;	// IMP=0x000000000001e178
- (void)applyVolumeNormalizationWithSoundCheckEnabled:(_Bool)arg1;	// IMP=0x000000000001e05d
- (_Bool)allowsEQ;	// IMP=0x000000000001e055
- (unsigned long long)albumTrackCount;	// IMP=0x000000000001dfc0
- (unsigned long long)albumTrackNumber;	// IMP=0x000000000001df2b
- (long long)artistStoreID;	// IMP=0x000000000001dd8d
- (long long)albumStoreID;	// IMP=0x000000000001dbef
- (id)albumArtist;	// IMP=0x000000000001daa5
- (long long)albumYear;	// IMP=0x000000000001d9ea
- (id)album;	// IMP=0x000000000001d923
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x000000000001d2a8
- (id)initWithGenericObject:(id)arg1 itemProperties:(id)arg2 playbackRequestEnvironment:(id)arg3 identityPropertySet:(id)arg4;	// IMP=0x000000000001cfb2
@property(readonly, nonatomic) long long rtcReportingAssetType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

