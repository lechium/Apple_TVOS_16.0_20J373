//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MCMContainerClassPath, MCMUserIdentityCache, NSMutableDictionary, NSString, NSUUID;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MCMContainerClassCache : NSObject
{
    _Bool _resyncRequired;	// 8 = 0x8
    _Bool _writeThroughEnabled;	// 9 = 0x9
    unsigned long long _containerClass;	// 16 = 0x10
    MCMContainerClassPath *_containerClassPath;	// 24 = 0x18
    NSUUID *_lastCompletedDiskScanUUID;	// 32 = 0x20
    CDUnknownBlockType _concurrentWriteThroughHandler;	// 40 = 0x28
    NSUUID *_targetDiskScanUUID;	// 48 = 0x30
    NSMutableDictionary *_lock_cache;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_fsScanQueue;	// 64 = 0x40
    Class _cacheEntryClass;	// 72 = 0x48
    MCMUserIdentityCache *_userIdentityCache;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x0000000000040d9d
@property(readonly, nonatomic) MCMUserIdentityCache *userIdentityCache; // @synthesize userIdentityCache=_userIdentityCache;
@property(readonly, nonatomic) Class cacheEntryClass; // @synthesize cacheEntryClass=_cacheEntryClass;
@property(nonatomic) _Bool writeThroughEnabled; // @synthesize writeThroughEnabled=_writeThroughEnabled;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *fsScanQueue; // @synthesize fsScanQueue=_fsScanQueue;
@property(readonly, nonatomic) NSMutableDictionary *lock_cache; // @synthesize lock_cache=_lock_cache;
@property(retain, nonatomic) NSUUID *targetDiskScanUUID; // @synthesize targetDiskScanUUID=_targetDiskScanUUID;
@property(copy, nonatomic) CDUnknownBlockType concurrentWriteThroughHandler; // @synthesize concurrentWriteThroughHandler=_concurrentWriteThroughHandler;
@property(nonatomic) _Bool resyncRequired; // @synthesize resyncRequired=_resyncRequired;
@property(retain, nonatomic) NSUUID *lastCompletedDiskScanUUID; // @synthesize lastCompletedDiskScanUUID=_lastCompletedDiskScanUUID;
@property(readonly, nonatomic) MCMContainerClassPath *containerClassPath; // @synthesize containerClassPath=_containerClassPath;
@property(readonly, nonatomic) unsigned long long containerClass; // @synthesize containerClass=_containerClass;
- (id)_setEntry:(id)arg1 forIdentifier:(id)arg2 writeThrough:(_Bool)arg3;	// IMP=0x0000000000040827
- (id)_concurrent_generateCacheEntryWithURL:(id)arg1 identifier:(id)arg2 containerPath:(id)arg3 schemaVersion:(id)arg4 uuid:(id)arg5 metadata:(id)arg6;	// IMP=0x00000000000406fd
- (id)_concurrent_slowGenerateCacheEntryWithFD:(int)arg1 URL:(id)arg2 containerPath:(id)arg3;	// IMP=0x000000000003fedf
- (void)_concurrent_processCorruptEntry:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003fcf9
- (void)_concurrent_processURL:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003f9a4
- (void)_processCorruptEntries:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003f8e1
- (void)_processURLs:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000000003f81e
- (void)_queue_syncWithDisk;	// IMP=0x000000000003ebc6
- (_Bool)_checkExistanceOfCacheEntry:(id)arg1 libraryRepair:(id)arg2;	// IMP=0x000000000003ea4f
- (void)forceWriteThrough;	// IMP=0x000000000003e910
- (void)asyncStartSynchronization;	// IMP=0x000000000003e831
- (void)flush;	// IMP=0x000000000003e76d
- (void)waitForSynchronizationToComplete;	// IMP=0x000000000003e71e
- (_Bool)enumerateCacheEntriesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x000000000003e49a
- (id)setCacheEntry:(id)arg1 forIdentifier:(id)arg2 writeThrough:(_Bool)arg3;	// IMP=0x000000000003e302
- (id)setCacheEntry:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x000000000003e2bf
- (id)cacheEntryForIdentifier:(id)arg1;	// IMP=0x000000000003e144
- (id)initWithContainerClassPath:(id)arg1 cacheEntryClass:(Class)arg2 targetQueue:(id)arg3 userIdentityCache:(id)arg4;	// IMP=0x000000000003deb3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

