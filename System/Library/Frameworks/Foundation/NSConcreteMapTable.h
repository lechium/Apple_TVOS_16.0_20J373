//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSMapTable.h"

__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;	// 8 = 0x8
    struct NSSlice values;	// 40 = 0x28
    unsigned long long count;	// 72 = 0x48
    unsigned long long capacity;	// 80 = 0x50
    unsigned long long keyOptions;	// 88 = 0x58
    unsigned long long valueOptions;	// 96 = 0x60
    unsigned long long mutations;	// 104 = 0x68
    struct os_unfair_lock_s growLock;	// 112 = 0x70
    _Bool shouldRehash;	// 116 = 0x74
    _Bool hasDynamicSlices;	// 117 = 0x75
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00600000004fb8f5
- (id)allValues;	// IMP=0x00000000004fde05
- (id)allKeys;	// IMP=0x00000000004fdd3d
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000004fdbf7
- (unsigned long long)hash;	// IMP=0x00000000004fdbbf
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;	// IMP=0x00000000004fdad2
- (id)objectEnumerator;	// IMP=0x00000000004fdab6
- (id)keyEnumerator;	// IMP=0x00000000004fda80
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000004fd9b7
- (id)description;	// IMP=0x00000000004fd87f
- (void)dealloc;	// IMP=0x00000000004fd782
- (void)removeAllItems;	// IMP=0x00000000004fd6c6
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000000004fd5a2
- (void)_reclaim;	// IMP=0x00000000004fd598
- (void)rehash;	// IMP=0x00000000004fd50c
- (unsigned long long)rehashAround:(unsigned long long)arg1;	// IMP=0x00000000004fd292
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;	// IMP=0x00000000004fd1d8
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;	// IMP=0x00000000004fd10f
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000004fd01f
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;	// IMP=0x00000000004fcf22
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000004fce4e
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000004fcd74
- (id)objectForKey:(id)arg1;	// IMP=0x00000000004fcce9
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;	// IMP=0x00000000004fcbe7
- (void)grow;	// IMP=0x00000000004fc8d1
- (id)dump;	// IMP=0x00000000004fc6c1
- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000004fc29e
- (unsigned long long)__capacity;	// IMP=0x00000000004fc28d
- (unsigned long long)count;	// IMP=0x00000000004fc238
- (id)valuePointerFunctions;	// IMP=0x00000000004fc1fa
- (id)keyPointerFunctions;	// IMP=0x00000000004fc1bc
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000004fbd64
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000004fb8fd
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000004fb746
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000004fb594
- (id)copy;	// IMP=0x00000000004fb3a9
- (void)_setBackingStore;	// IMP=0x00000000004fb315
- (void)checkCount:(const char *)arg1;	// IMP=0x00000000004fb28c
- (unsigned long long)realCount;	// IMP=0x00000000004fb1e1
- (void)raiseCountUnderflowException;	// IMP=0x00000000004fb190
- (id)init;	// IMP=0x00000000004fb174

@end

