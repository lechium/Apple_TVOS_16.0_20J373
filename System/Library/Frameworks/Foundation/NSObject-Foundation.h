//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface NSObject (Foundation)
+ (id)__old_unswizzled_keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x0020000000050530
+ (_Bool)__old_unswizzled_automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x00200000000504e0
+ (const char *)_localClassNameForClass;	// IMP=0x002000000047f673
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x0020000000482ece
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;	// IMP=0x0020000000482cc8
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004cb2e1
+ (_Bool)accessInstanceVariablesDirectly;	// IMP=0x00200000004cb2d9
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d15f3
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d131a
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d12d8
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d1296
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d0c2e
+ (id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d05bc
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004d02c7
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;	// IMP=0x00200000004cfbb1
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x00200000004e1eae
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;	// IMP=0x00200000004e1c5e
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;	// IMP=0x00200000004e1aac
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;	// IMP=0x00200000004e219a
+ (_Bool)_shouldAddObservationForwardersForKey:(id)arg1;	// IMP=0x00200000004e2285
+ (id)classFallbacksForKeyedArchiver;	// IMP=0x00200000004f6c63
+ (Class)classForKeyedUnarchiver;	// IMP=0x00200000004f6c70
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;	// IMP=0x0020000000552bda
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;	// IMP=0x0020000000552803
+ (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00200000005f5683
- (id)__NS_swiftOverlay_keyPathsForValuesAffectingValueForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000050720
- (_Bool)__NS_swiftOverlay_automaticallyNotifiesObserversForKey:(id)arg1 foundationImplementation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000050580
- (id)newTaggedNSStringWithASCIIBytes_:(const char *)arg1 length_:(long long)arg2;	// IMP=0x00100000001a5450
- (id)replacementObjectForArchiver:(id)arg1;	// IMP=0x0010000000439efa
- (Class)classForArchiver;	// IMP=0x0010000000439ee8
- (const char *)_localClassNameForClass;	// IMP=0x001000000047f661
- (_Bool)_conformsToProtocolNamed:(const char *)arg1;	// IMP=0x0010000000483012
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;	// IMP=0x0010000000482f92
- (void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2;	// IMP=0x00100000004849df
- (void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x00100000004849c2
- (id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2;	// IMP=0x0010000000484951
- (void)_receiveBox:(id)arg1;	// IMP=0x00100000004a3488
- (void)removeObservation:(id)arg1;	// IMP=0x00100000004a344a
- (id)addObserver:(id)arg1;	// IMP=0x00100000004a33c4
- (void)receiveObservedValue:(id)arg1;	// IMP=0x00100000004a32c1
- (void)receiveObservedError:(id)arg1;	// IMP=0x00100000004a31be
- (_Bool)_isToManyChangeInformation;	// IMP=0x00100000004a31b6
- (void)_destroyObserverList;	// IMP=0x00100000004a31a2
- (void *)_observerStorageOfSize:(unsigned long long)arg1;	// IMP=0x00100000004a319a
- (id *)_observerStorage;	// IMP=0x00100000004a3192
- (id)addObservationTransformer:(CDUnknownBlockType)arg1;	// IMP=0x00100000004a30ef
- (id)addObserverBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000004a2fab
- (id)addChainedObservers:(id)arg1;	// IMP=0x00100000004a2e61
- (void)finishObserving;	// IMP=0x00100000004a2e28
- (_Bool)_overrideUseFastBlockObservers;	// IMP=0x00100000004a2e20
- (void)setValuesForKeysWithDictionary:(id)arg1;	// IMP=0x00100000004cd081
- (id)dictionaryWithValuesForKeys:(id)arg1;	// IMP=0x00100000004ccf77
- (void)setNilValueForKey:(id)arg1;	// IMP=0x00100000004ccf0b
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;	// IMP=0x00100000004cce1a
- (id)valueForUndefinedKey:(id)arg1;	// IMP=0x00100000004ccd28
- (id)mutableSetValueForKeyPath:(id)arg1;	// IMP=0x00100000004ccbdb
- (id)mutableOrderedSetValueForKeyPath:(id)arg1;	// IMP=0x00100000004cca8e
- (id)mutableArrayValueForKeyPath:(id)arg1;	// IMP=0x00100000004cc941
- (_Bool)validateValue:(inout id *)arg1 forKeyPath:(id)arg2 error:(out id *)arg3;	// IMP=0x00100000004cc7d3
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x00100000004cc67c
- (id)valueForKeyPath:(id)arg1;	// IMP=0x00100000004cc52f
- (id)mutableSetValueForKey:(id)arg1;	// IMP=0x00100000004cc3d0
- (id)mutableOrderedSetValueForKey:(id)arg1;	// IMP=0x00100000004cc271
- (id)mutableArrayValueForKey:(id)arg1;	// IMP=0x00100000004cc112
- (_Bool)validateValue:(inout id *)arg1 forKey:(id)arg2 error:(out id *)arg3;	// IMP=0x00100000004cbfa9
- (void)setValue:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000004cbd40
- (id)valueForKey:(id)arg1;	// IMP=0x00100000004cbab4
- (_Bool)_isKVOA;	// IMP=0x00100000004dc30d
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x00100000004df92e
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;	// IMP=0x00100000004e05d0
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void *)arg3;	// IMP=0x00100000004e046f
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x00100000004e0276
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;	// IMP=0x00100000004dff40
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;	// IMP=0x00100000004dfa21
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x00100000004e1a38
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;	// IMP=0x00100000004e1672
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x00100000004e11ee
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;	// IMP=0x00100000004e0f40
- (void)didChangeValueForKey:(id)arg1;	// IMP=0x00100000004e0f27
- (void)willChangeValueForKey:(id)arg1;	// IMP=0x00100000004e0f0b
@property void *observationInfo;
- (id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(_Bool)arg2;	// IMP=0x00100000004e38b6
- (id)_implicitObservationInfo;	// IMP=0x00100000004e38ae
- (void)_changeValueForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000004e3857
- (void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000004e37f8
- (void)_changeValueForKeys:(id *)arg1 count:(unsigned long long)arg2 maybeOldValuesDict:(id)arg3 maybeNewValuesDict:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000004e2d09
- (void)_notifyObserversOfChangeFromValuesForKeys:(id)arg1 toValuesForKeys:(id)arg2;	// IMP=0x00100000004e26bf
- (void)_didChangeValuesForKeys:(id)arg1;	// IMP=0x00100000004e26a3
- (void)_willChangeValuesForKeys:(id)arg1;	// IMP=0x00100000004e2684
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;	// IMP=0x00100000004e228d
- (void)_didEndKeyValueObserving;	// IMP=0x00100000004e227f
- (void)_willBeginKeyValueObserving;	// IMP=0x00100000004e2279
- (id)replacementObjectForKeyedArchiver:(id)arg1;	// IMP=0x00100000004f6c0b
@property(readonly) Class classForKeyedArchiver;
@property(readonly, retain) id autoContentAccessingProxy;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;	// IMP=0x0010000000552415
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;	// IMP=0x0010000000552403
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;	// IMP=0x001000000055239b
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;	// IMP=0x001000000057aee1
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4;	// IMP=0x001000000057ae5c
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3;	// IMP=0x001000000057adc9
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(_Bool)arg3 modes:(id)arg4;	// IMP=0x001000000057ad63
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(_Bool)arg4 modes:(id)arg5;	// IMP=0x001000000057a8ca
- (id)replacementObjectForPortCoder:(id)arg1;	// IMP=0x00100000005f5646
- (Class)classForPortCoder;	// IMP=0x00100000005f5634
@end

