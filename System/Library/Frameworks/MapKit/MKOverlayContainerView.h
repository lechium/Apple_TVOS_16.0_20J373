//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class MKMapView, NSArray, NSMapTable, NSMutableArray, NSMutableOrderedSet;
@protocol MKOverlayContainerViewDelegate;

__attribute__((visibility("hidden")))
@interface MKOverlayContainerView : UIView
{
    NSMutableOrderedSet *_overlays[2];	// 8 = 0x8
    NSMapTable *_overlayToDrawable[2];	// 24 = 0x18
    NSMutableArray *_drawables[2];	// 40 = 0x28
    NSMutableArray *_vkOverlays[2];	// 56 = 0x38
    UIView *_viewContainers[2];	// 72 = 0x48
    id <MKOverlayContainerViewDelegate> _delegate;	// 88 = 0x58
    double _mapZoomScale;	// 96 = 0x60
    MKMapView *_mapView;	// 104 = 0x68
}

+ (long long)_defaultOverlayLevel;	// IMP=0x0060000000074b9e
- (void).cxx_destruct;	// IMP=0x00000000000769c1
@property(nonatomic) __weak MKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) double mapZoomScale; // @synthesize mapZoomScale=_mapZoomScale;
@property(nonatomic) __weak id <MKOverlayContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_allOverlaysSupportElevation;	// IMP=0x00000000000766e9
- (_Bool)_anyOverlayRequiresModernMap;	// IMP=0x0000000000076506
- (_Bool)_overlayRequiresModernMap:(id)arg1;	// IMP=0x00000000000764ad
- (void)_unFlexTerrainIfNeeded;	// IMP=0x0000000000076470
- (void)_flexTerrainIfNeeded;	// IMP=0x0000000000076433
@property(readonly, nonatomic) _Bool requiresModernMap;
@property(readonly, nonatomic) _Bool supportsElevation;
- (void)didMoveToWindow;	// IMP=0x000000000007623c
- (void)_insertDrawable:(id)arg1 forOverlay:(id)arg2 atIndex:(long long)arg3 level:(long long)arg4;	// IMP=0x0000000000075d65
- (void)_updateContentScale:(id)arg1;	// IMP=0x0000000000075c05
- (void)_removeDrawable:(id)arg1 forOverlay:(id)arg2 level:(long long)arg3;	// IMP=0x0000000000075925
@property(readonly, nonatomic) NSArray *allDrawables;
- (id)drawableForOverlay:(id)arg1;	// IMP=0x0000000000075793
- (id)overlaysInLevel:(long long)arg1;	// IMP=0x0000000000075732
@property(readonly, nonatomic) NSArray *overlays;
- (unsigned long long)_overlayCount;	// IMP=0x00000000000755fe
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;	// IMP=0x0000000000075541
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;	// IMP=0x0000000000075483
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;	// IMP=0x000000000007533b
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;	// IMP=0x00000000000752ee
- (void)_exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2 level:(long long)arg3;	// IMP=0x0000000000075113
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000000000750b3
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;	// IMP=0x0000000000074f51
- (void)removeOverlays:(id)arg1;	// IMP=0x0000000000074e27
- (void)removeOverlay:(id)arg1;	// IMP=0x0000000000074d3e
- (long long)_levelForOverlay:(id)arg1 exists:(_Bool *)arg2;	// IMP=0x0000000000074c9f
- (void)addOverlays:(id)arg1;	// IMP=0x0000000000074c44
- (void)addOverlay:(id)arg1;	// IMP=0x0000000000074be9
- (void)addOverlays:(id)arg1 level:(long long)arg2;	// IMP=0x000000000007489e
- (void)addOverlay:(id)arg1 level:(long long)arg2;	// IMP=0x00000000000746cd
- (void)addAndRemoveOverlayViews;	// IMP=0x000000000007403d
- (id)_considerAddingDrawable:(id)arg1 inAddRect:(CDStruct_02837cd9)arg2 level:(long long)arg3;	// IMP=0x0000000000073e9c
- (void)_configureAndAddDrawable:(id)arg1 forOverlay:(id)arg2 level:(long long)arg3;	// IMP=0x0000000000073d2a
- (CDStruct_02837cd9)_mapRectWithFractionOfVisible:(double)arg1;	// IMP=0x0000000000073c17
- (long long)_drawableIndexForDrawable:(id)arg1 level:(long long)arg2;	// IMP=0x0000000000073a32
- (id)_viewContainerForLevel:(long long)arg1;	// IMP=0x0000000000073916
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x000000000007390e
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000737ce

@end

