//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, AVAssetTrack, AVCoordinatedPlaybackSuspension, AVDelegateManager, AVInterstitialController, AVMediaSelectionOption, AVNavigationMarkersGroup, AVObservationController, AVPlayer, AVPlayerItem, AVPlayerLayer, AVQueuePlayer, AVTimeRange, AVValueTiming, BSSimpleAssertion, NSArray, NSDate, NSDictionary, NSError, NSNumber, NSString, NSTimer;
@protocol AVPlayerControllerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface AVPlayerController : NSObject
{
    NSArray *_audioMediaSelectionOptions;	// 8 = 0x8
    NSArray *_visualMediaSelectionOptions;	// 16 = 0x10
    NSArray *_legibleMediaSelectionOptions;	// 24 = 0x18
    AVMediaSelectionOption *_cachedSelectedAudioMediaSelectionOption;	// 32 = 0x20
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOption;	// 40 = 0x28
    AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;	// 48 = 0x30
    NSString *_lastKnownPersistedExtendedLanguageTag;	// 56 = 0x38
    void *_observationInfo;	// 64 = 0x40
    _Bool _inspectionSuspended;	// 72 = 0x48
    id _updateAtMinMaxTimePeriodicObserverToken;	// 80 = 0x50
    id _timecodePeriodicObserverToken;	// 88 = 0x58
    _Bool _pictureInPictureInterrupted;	// 96 = 0x60
    _Bool _handlesAudioSessionInterruptions;	// 97 = 0x61
    _Bool _isDeallocating;	// 98 = 0x62
    _Bool _hasSetUpSeekableLiveStreamState;	// 99 = 0x63
    NSNumber *_rateToRestoreAfterAudioSessionInterruptionEnds;	// 104 = 0x68
    CDUnknownBlockType _retryPlayingImmediatelyBlock;	// 112 = 0x70
    _Bool _shouldPlayImmediately;	// 120 = 0x78
    _Bool _looping;	// 121 = 0x79
    long long _actionAtItemEnd;	// 128 = 0x80
    long long _playbackSuspensionCount;	// 136 = 0x88
    long long _scrubbingCount;	// 144 = 0x90
    _Bool _usesSeekBasedHighRateStrategy;	// 152 = 0x98
    float _rate;	// 156 = 0x9c
    NSObject<OS_dispatch_queue> *_seekQueue;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_seekTimer;	// 168 = 0xa8
    double _timeOfLastUpdate;	// 176 = 0xb0
    _Bool _ignoreRateKeyValueChanges;	// 184 = 0xb8
    _Bool _ignoreNextRateKeyValueChange;	// 185 = 0xb9
    _Bool _pendingSeek;	// 186 = 0xba
    _Bool _isResumed;	// 187 = 0xbb
    CDStruct_1b6d18a9 _toleranceBefore;	// 188 = 0xbc
    CDStruct_1b6d18a9 _toleranceAfter;	// 212 = 0xd4
    _Bool _isScanningForward;	// 236 = 0xec
    _Bool _isScanningBackward;	// 237 = 0xed
    unsigned long long _scanningCount;	// 240 = 0xf0
    double _preScanningRate;	// 248 = 0xf8
    AVValueTiming *_liveStreamMinTiming;	// 256 = 0x100
    AVValueTiming *_liveStreamMaxTiming;	// 264 = 0x108
    _Bool _liveStreamEventModePossible;	// 272 = 0x110
    long long _canUseNetworkResourcesForLiveStreamingWhilePausedCount;	// 280 = 0x118
    _Bool _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;	// 288 = 0x120
    _Bool _shouldPlayWhenLikelyToKeepUp;	// 289 = 0x121
    _Bool _playingOnSecondScreen;	// 290 = 0x122
    BSSimpleAssertion *_reduceResourceUsageAssertion;	// 296 = 0x128
    double _defaultPlaybackRate;	// 304 = 0x130
    _Bool _touchBarRequiresLinearPlayback;	// 312 = 0x138
    id <AVPlayerControllerDelegate> _internalDelegate;	// 320 = 0x140
    NSObject<OS_dispatch_queue> *_backgroundQueue;	// 328 = 0x148
    NSDate *_lastTimePlayingOnMatchPointDeviceWasUpdated;	// 336 = 0x150
    NSTimer *_updatePlayingOnMatchPointDeviceThrottleTimer;	// 344 = 0x158
    _Bool _atMaxTime;	// 352 = 0x160
    _Bool _atMinTime;	// 353 = 0x161
    _Bool _scrubbing;	// 354 = 0x162
    _Bool _pictureInPictureSupported;	// 355 = 0x163
    _Bool _seekingInternal;	// 356 = 0x164
    _Bool _seeking;	// 357 = 0x165
    _Bool _composable;	// 358 = 0x166
    _Bool _hasProtectedContent;	// 359 = 0x167
    _Bool _compatibleWithAirPlayVideo;	// 360 = 0x168
    _Bool _preventingIdleSystemSleep;	// 361 = 0x169
    _Bool _preventingIdleDisplaySleep;	// 362 = 0x16a
    _Bool _disablingAutomaticTermination;	// 363 = 0x16b
    _Bool _allowsPictureInPicturePlayback;	// 364 = 0x16c
    _Bool _pictureInPictureActive;	// 365 = 0x16d
    _Bool _canTogglePictureInPicture;	// 366 = 0x16e
    _Bool _hasBegunInspection;	// 367 = 0x16f
    _Bool _playingOnMatchPointDevice;	// 368 = 0x170
    _Bool _playbackSuspended;	// 369 = 0x171
    _Bool _coordinatedPlaybackActive;	// 370 = 0x172
    AVPlayer *_player;	// 376 = 0x178
    AVPlayer *_activePlayer;	// 384 = 0x180
    double _activeRate;	// 392 = 0x188
    AVObservationController *_observationController;	// 400 = 0x190
    AVAsset *_currentAssetIfReady;	// 408 = 0x198
    NSObject<OS_dispatch_queue> *_assetInspectionQueue;	// 416 = 0x1a0
    AVAsset *_assetBeingPrepared;	// 424 = 0x1a8
    NSString *_externalPlaybackAirPlayDeviceLocalizedName;	// 432 = 0x1b0
    AVValueTiming *_timing;	// 440 = 0x1b8
    AVValueTiming *_minTiming;	// 448 = 0x1c0
    AVValueTiming *_maxTiming;	// 456 = 0x1c8
    AVAssetTrack *_currentAudioTrack;	// 464 = 0x1d0
    AVAssetTrack *_currentVideoTrack;	// 472 = 0x1d8
    double _seekToTime;	// 480 = 0x1e0
    double _initialScrubbingTime;	// 488 = 0x1e8
    NSDictionary *_metadata;	// 496 = 0x1f0
    NSArray *_availableMetadataFormats;	// 504 = 0x1f8
    double _rateBeforeScrubBegan;	// 512 = 0x200
    AVCoordinatedPlaybackSuspension *_scrubCoordinatorSuspension;	// 520 = 0x208
    NSString *_pipActivitySessionIdentifier;	// 528 = 0x210
    AVPlayerLayer *_playerLayerForReducingResources;	// 536 = 0x218
    long long _bestAvailableVideoResolution;	// 544 = 0x220
    long long _bestAvailableVideoRange;	// 552 = 0x228
    long long _bestAvailableAudioFormat;	// 560 = 0x230
    double _suspendedRate;	// 568 = 0x238
    struct CGSize _presentationSize;	// 576 = 0x240
    CDStruct_1b6d18a9 _seekToTimeInternal;	// 592 = 0x250
}

+ (id)keyPathsForValuesAffectingPictureInPicturePossible;	// IMP=0x00600000000bff5e
+ (id)keyPathsForValuesAffectingExternalPlaybackType;	// IMP=0x00600000000bff32
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;	// IMP=0x00600000000bff12
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;	// IMP=0x00600000000bfee6
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;	// IMP=0x00600000000bfec6
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;	// IMP=0x00600000000bfe9a
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;	// IMP=0x00600000000bfe6e
+ (id)keyPathsForValuesAffectingCanSeekToEnd;	// IMP=0x00600000000bfe4e
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;	// IMP=0x00600000000bfe2e
+ (id)keyPathsForValuesAffectingCanScanBackward;	// IMP=0x00600000000bfdf7
+ (id)keyPathsForValuesAffectingCanScanForward;	// IMP=0x00600000000bfdc0
+ (id)keyPathsForValuesAffectingCanSeek;	// IMP=0x00600000000bfd6c
+ (id)keyPathsForValuesAffectingTimeControlStatus;	// IMP=0x00600000000bfd4c
+ (id)keyPathsForValuesAffectingHasShareableContent;	// IMP=0x00600000000bfd15
+ (id)keyPathsForValuesAffectingHasTrimmableContent;	// IMP=0x00600000000bfce9
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;	// IMP=0x00600000000bfc1a
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;	// IMP=0x00600000000bfb56
+ (id)keyPathsForValuesAffectingStreaming;	// IMP=0x00600000000bfb36
+ (id)keyPathsForValuesAffectingHasEnabledVideo;	// IMP=0x00600000000bfb16
+ (id)keyPathsForValuesAffectingHasVideo;	// IMP=0x00600000000bfaf6
+ (id)keyPathsForValuesAffectingHasEnabledAudio;	// IMP=0x00600000000bfad6
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;	// IMP=0x00600000000bfa9f
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;	// IMP=0x00600000000bfa7f
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;	// IMP=0x00600000000bfa53
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;	// IMP=0x00600000000bfa27
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;	// IMP=0x00600000000bfa07
+ (id)keyPathsForValuesAffectingMaxTime;	// IMP=0x00600000000bf9bf
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;	// IMP=0x00600000000bf99f
+ (id)keyPathsForValuesAffectingMinTime;	// IMP=0x00600000000bf968
+ (id)keyPathsForValuesAffectingCurrentTime;	// IMP=0x00600000000bf948
+ (id)keyPathsForValuesAffectingContentDimensions;	// IMP=0x00600000000bf89a
+ (id)keyPathsForValuesAffectingContentDuration;	// IMP=0x00600000000bf87a
+ (id)keyPathsForValuesAffectingHasContent;	// IMP=0x00600000000bf85a
+ (id)keyPathsForValuesAffectingMuted;	// IMP=0x00600000000bf83a
+ (id)keyPathsForValuesAffectingVolume;	// IMP=0x00600000000bf81a
+ (id)keyPathsForValuesAffectingCanTogglePlayback;	// IMP=0x00600000000bf7ee
+ (id)keyPathsForValuesAffectingCanPause;	// IMP=0x00600000000bf7ce
+ (id)keyPathsForValuesAffectingPlaying;	// IMP=0x00600000000bf7ae
+ (id)keyPathsForValuesAffectingCanPlay;	// IMP=0x00600000000bf782
+ (id)keyPathsForValuesAffectingDefaultPlaybackRate;	// IMP=0x00600000000bf75e
+ (id)keyPathsForValuesAffectingRate;	// IMP=0x00600000000bf73e
+ (id)keyPathsForValuesAffectingActiveRate;	// IMP=0x00600000000bf71a
+ (id)keyPathsForValuesAffectingCompletelySeekable;	// IMP=0x00600000000bf6ee
+ (id)keyPathsForValuesAffectingError;	// IMP=0x00600000000bf6ce
+ (id)keyPathsForValuesAffectingReadyToPlay;	// IMP=0x00600000000bf6ae
+ (id)keyPathsForValuesAffectingStatus;	// IMP=0x00600000000bf677
+ (_Bool)_usesCoreMediaBasedSmoothHighRatePlayback;	// IMP=0x00600000000bf65c
+ (void)setCachedIsPictureInPictureSupported:(_Bool)arg1;	// IMP=0x00600000000bf650
+ (_Bool)cachedIsPictureInPictureSupported;	// IMP=0x00600000000bf644
+ (void)initialize;	// IMP=0x00600000000bf5ca
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;	// IMP=0x00600000000c0234
+ (id)keyPathsForValuesAffectingPreferredDisplayCriteria;	// IMP=0x00600000000c0214
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;	// IMP=0x00600000000c01f4
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;	// IMP=0x006000000012e38e
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;	// IMP=0x006000000012e36e
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;	// IMP=0x006000000012e342
+ (id)canonicalLanguageIdentifierFromString:(id)arg1;	// IMP=0x006000000012e1cb
- (void).cxx_destruct;	// IMP=0x00000000000bb0b5
@property(nonatomic) _Bool coordinatedPlaybackActive; // @synthesize coordinatedPlaybackActive=_coordinatedPlaybackActive;
@property(readonly, nonatomic) double suspendedRate; // @synthesize suspendedRate=_suspendedRate;
@property(readonly, nonatomic, getter=isPlaybackSuspended) _Bool playbackSuspended; // @synthesize playbackSuspended=_playbackSuspended;
@property(nonatomic) long long bestAvailableAudioFormat; // @synthesize bestAvailableAudioFormat=_bestAvailableAudioFormat;
@property(nonatomic) long long bestAvailableVideoRange; // @synthesize bestAvailableVideoRange=_bestAvailableVideoRange;
@property(nonatomic) long long bestAvailableVideoResolution; // @synthesize bestAvailableVideoResolution=_bestAvailableVideoResolution;
@property(nonatomic) __weak AVPlayerLayer *playerLayerForReducingResources; // @synthesize playerLayerForReducingResources=_playerLayerForReducingResources;
@property(nonatomic, getter=isPlayingOnMatchPointDevice) _Bool playingOnMatchPointDevice; // @synthesize playingOnMatchPointDevice=_playingOnMatchPointDevice;
@property(nonatomic) _Bool hasBegunInspection; // @synthesize hasBegunInspection=_hasBegunInspection;
@property(copy, nonatomic) NSString *pipActivitySessionIdentifier; // @synthesize pipActivitySessionIdentifier=_pipActivitySessionIdentifier;
@property(nonatomic) _Bool canTogglePictureInPicture; // @synthesize canTogglePictureInPicture=_canTogglePictureInPicture;
@property(nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) _Bool allowsPictureInPicturePlayback; // @synthesize allowsPictureInPicturePlayback=_allowsPictureInPicturePlayback;
@property(nonatomic, getter=isDisablingAutomaticTermination) _Bool disablingAutomaticTermination; // @synthesize disablingAutomaticTermination=_disablingAutomaticTermination;
@property(nonatomic, getter=isPreventingIdleDisplaySleep) _Bool preventingIdleDisplaySleep; // @synthesize preventingIdleDisplaySleep=_preventingIdleDisplaySleep;
@property(nonatomic, getter=isPreventingIdleSystemSleep) _Bool preventingIdleSystemSleep; // @synthesize preventingIdleSystemSleep=_preventingIdleSystemSleep;
@property(retain, nonatomic) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension; // @synthesize scrubCoordinatorSuspension=_scrubCoordinatorSuspension;
@property(nonatomic) double rateBeforeScrubBegan; // @synthesize rateBeforeScrubBegan=_rateBeforeScrubBegan;
@property(nonatomic, getter=isCompatibleWithAirPlayVideo) _Bool compatibleWithAirPlayVideo; // @synthesize compatibleWithAirPlayVideo=_compatibleWithAirPlayVideo;
@property(retain, nonatomic) NSArray *availableMetadataFormats; // @synthesize availableMetadataFormats=_availableMetadataFormats;
@property(nonatomic) _Bool hasProtectedContent; // @synthesize hasProtectedContent=_hasProtectedContent;
@property(nonatomic, getter=isComposable) _Bool composable; // @synthesize composable=_composable;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) double initialScrubbingTime; // @synthesize initialScrubbingTime=_initialScrubbingTime;
@property(nonatomic) double seekToTime; // @synthesize seekToTime=_seekToTime;
@property CDStruct_1b6d18a9 seekToTimeInternal; // @synthesize seekToTimeInternal=_seekToTimeInternal;
@property(nonatomic, getter=isSeeking) _Bool seeking; // @synthesize seeking=_seeking;
@property(getter=isSeekingInternal) _Bool seekingInternal; // @synthesize seekingInternal=_seekingInternal;
@property(retain, nonatomic) AVAssetTrack *currentVideoTrack; // @synthesize currentVideoTrack=_currentVideoTrack;
@property(retain, nonatomic) AVAssetTrack *currentAudioTrack; // @synthesize currentAudioTrack=_currentAudioTrack;
@property(retain, nonatomic) AVValueTiming *maxTiming; // @synthesize maxTiming=_maxTiming;
@property(retain, nonatomic) AVValueTiming *minTiming; // @synthesize minTiming=_minTiming;
@property(retain, nonatomic) AVValueTiming *timing; // @synthesize timing=_timing;
@property(retain, nonatomic) NSString *externalPlaybackAirPlayDeviceLocalizedName; // @synthesize externalPlaybackAirPlayDeviceLocalizedName=_externalPlaybackAirPlayDeviceLocalizedName;
@property(nonatomic, getter=isPictureInPictureSupported) _Bool pictureInPictureSupported; // @synthesize pictureInPictureSupported=_pictureInPictureSupported;
@property(retain, nonatomic) AVAsset *assetBeingPrepared; // @synthesize assetBeingPrepared=_assetBeingPrepared;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *assetInspectionQueue; // @synthesize assetInspectionQueue=_assetInspectionQueue;
@property(retain, nonatomic) AVAsset *currentAssetIfReady; // @synthesize currentAssetIfReady=_currentAssetIfReady;
@property(nonatomic) struct CGSize presentationSize; // @synthesize presentationSize=_presentationSize;
@property(readonly, nonatomic) AVObservationController *observationController; // @synthesize observationController=_observationController;
@property(nonatomic) double activeRate; // @synthesize activeRate=_activeRate;
@property(retain, nonatomic) AVPlayer *activePlayer; // @synthesize activePlayer=_activePlayer;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(nonatomic, getter=isAtMinTime) _Bool atMinTime; // @synthesize atMinTime=_atMinTime;
@property(nonatomic, getter=isAtMaxTime) _Bool atMaxTime; // @synthesize atMaxTime=_atMaxTime;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (double)_adjustedSeekTimeFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000000babb1
- (void)_updateActivePlayer;	// IMP=0x00000000000bab65
- (void)_setupInterstitialController;	// IMP=0x00000000000bab5f
- (void)_prepareAssetForInspectionIfNeeded;	// IMP=0x00000000000ba621
- (id)scanningDelays;	// IMP=0x00000000000ba5c7
- (void)_updateRateForScrubbingAndSeeking;	// IMP=0x00000000000ba43d
- (void)_updateMetadata;	// IMP=0x00000000000ba19e
- (id)_outputContext;	// IMP=0x00000000000ba14e
- (id)_timecodeTrack;	// IMP=0x00000000000b9ff9
- (void)_stopSuspendingPlayback;	// IMP=0x00000000000b9fa7
- (void)_startSuspendingPlayback;	// IMP=0x00000000000b9f52
- (void)_setSuspendedRate:(double)arg1;	// IMP=0x00000000000b9f34
- (void)_setPlaybackSuspended:(_Bool)arg1;	// IMP=0x00000000000b9f20
- (void)_endPlaybackSuspension_AVKitStrategy;	// IMP=0x00000000000b9e9a
- (void)_endPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000b9e5c
- (id)_createMetadataDictionaryForCurrentAsset;	// IMP=0x00000000000b9a25
- (void)_cancelPendingSeeksIfNeeded;	// IMP=0x00000000000b99d7
- (void)_beginPlaybackSuspension_AVKitStrategy;	// IMP=0x00000000000b9951
- (void)_beginPlaybackSuspension_AVFoundationStrategy;	// IMP=0x00000000000b9913
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(_Bool)arg1;	// IMP=0x00000000000b98a4
- (_Bool)canUseNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b9836
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b9739
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;	// IMP=0x00000000000b9645
- (_Bool)isReducingResourcesForPictureInPicture;	// IMP=0x00000000000b9612
@property(retain, nonatomic) BSSimpleAssertion *reduceResourceUsageAssertion;
- (void)acquireResourceReductionAssertion;	// IMP=0x00000000000b93f4
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000b9303
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)arg1;	// IMP=0x00000000000b9055
- (void)togglePictureInPicture:(id)arg1;	// IMP=0x00000000000b904f
- (void)setPictureInPictureInterrupted:(_Bool)arg1;	// IMP=0x00000000000b9007
- (_Bool)isPictureInPictureInterrupted;	// IMP=0x00000000000b8ffe
- (_Bool)isPictureInPicturePossible;	// IMP=0x00000000000b8da6
- (void)_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded;	// IMP=0x00000000000b89e4
- (long long)externalPlaybackType;	// IMP=0x00000000000b8959
- (_Bool)isExternalPlaybackActive;	// IMP=0x00000000000b8915
@property(nonatomic, getter=isPlayingOnSecondScreen) _Bool playingOnSecondScreen;
- (_Bool)isPlayingOnExternalScreen;	// IMP=0x00000000000b88d0
- (void)setAllowsExternalPlayback:(_Bool)arg1;	// IMP=0x00000000000b8884
- (_Bool)allowsExternalPlayback;	// IMP=0x00000000000b8840
- (void)_updateMinMaxTimingIfNeeded;	// IMP=0x00000000000b87ff
- (void)updateMinMaxTiming;	// IMP=0x00000000000b7f56
- (void)updateTiming;	// IMP=0x00000000000b7d20
- (void)endScrubbing:(id)arg1;	// IMP=0x00000000000b7bf1
- (void)beginScrubbing:(id)arg1;	// IMP=0x00000000000b7b20
- (void)skipBackwardThirtySeconds:(id)arg1;	// IMP=0x00000000000b79fc
- (void)seekOrStepByFrameCount:(long long)arg1;	// IMP=0x00000000000b72c7
- (void)seekFrameBackward:(id)arg1;	// IMP=0x00000000000b7289
- (_Bool)canSeekFrameBackward;	// IMP=0x00000000000b7250
- (void)seekFrameForward:(id)arg1;	// IMP=0x00000000000b7214
- (_Bool)canSeekFrameForward;	// IMP=0x00000000000b71db
- (void)seekToEnd:(id)arg1;	// IMP=0x00000000000b71bb
- (_Bool)canSeekToEnd;	// IMP=0x00000000000b71a9
- (void)seekToBeginning:(id)arg1;	// IMP=0x00000000000b7189
- (_Bool)canSeekToBeginning;	// IMP=0x00000000000b7177
- (void)endScanningBackward:(id)arg1;	// IMP=0x00000000000b6ffc
- (void)_updateScanningBackwardRate;	// IMP=0x00000000000b6e0f
- (void)beginScanningBackward:(id)arg1;	// IMP=0x00000000000b6c5b
- (void)scanBackward:(id)arg1;	// IMP=0x00000000000b6b83
- (_Bool)canScanBackward;	// IMP=0x00000000000b6ae8
- (void)endScanningForward:(id)arg1;	// IMP=0x00000000000b696d
- (void)_updateScanningForwardRate;	// IMP=0x00000000000b678e
- (void)beginScanningForward:(id)arg1;	// IMP=0x00000000000b65da
- (void)scanForward:(id)arg1;	// IMP=0x00000000000b6507
- (_Bool)canScanForward;	// IMP=0x00000000000b646c
- (void)seekByTimeInterval:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000b631e
- (void)seekByTimeInterval:(double)arg1;	// IMP=0x00000000000b6306
- (void)actuallySeekToTime;	// IMP=0x00000000000b6025
- (void)throttledSeekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000b5c5b
- (void)seekToCMTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;	// IMP=0x00000000000b5c49
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;	// IMP=0x00000000000b5ba6
- (void)resumePlaybackCoordinatorIfSuspended;	// IMP=0x00000000000b5a12
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;	// IMP=0x00000000000b58c8
- (void)endScrubbing;	// IMP=0x00000000000b57f7
- (void)beginScrubbing;	// IMP=0x00000000000b56f9
- (void)seekToTime:(double)arg1;	// IMP=0x00000000000b56e1
- (_Bool)canSeek;	// IMP=0x00000000000b550a
- (long long)timeControlStatus;	// IMP=0x00000000000b54c6
- (id)currentEnabledAssetTrackForMediaType:(id)arg1;	// IMP=0x00000000000b4f9e
- (void)_updateCurrentVideoTrackIfNeeded;	// IMP=0x00000000000b4f25
- (void)_updateCurrentAudioTrackIfNeeded;	// IMP=0x00000000000b4eac
- (void)_updateCoordinatedPlaybackActive;	// IMP=0x00000000000b4e0d
- (_Bool)_assetContainsProResRaw:(id)arg1;	// IMP=0x00000000000b4b7d
- (_Bool)_assetIsMarkedNotSerializable:(id)arg1;	// IMP=0x00000000000b4921
- (id)audioWaveform;	// IMP=0x00000000000b4919
- (_Bool)_assetIsRestrictedFromSaving:(id)arg1;	// IMP=0x00000000000b483b
- (_Bool)hasShareableContent;	// IMP=0x00000000000b472c
- (_Bool)hasTrimmableContent;	// IMP=0x00000000000b4656
- (_Bool)hasSeekableLiveStreamingContent;	// IMP=0x00000000000b43a7
- (_Bool)hasLiveStreamingContent;	// IMP=0x00000000000b4240
- (_Bool)isStreaming;	// IMP=0x00000000000b41cb
- (_Bool)hasContentChapters;	// IMP=0x00000000000b41c3
- (_Bool)hasEnabledVideo;	// IMP=0x00000000000b4155
- (_Bool)hasVideo;	// IMP=0x00000000000b40e7
- (_Bool)hasEnabledAudio;	// IMP=0x00000000000b4079
- (id)loadedTimeRanges;	// IMP=0x00000000000b3cd0
- (id)seekableTimeRanges;	// IMP=0x00000000000b3c56
- (double)currentTimeWithinEndTimes;	// IMP=0x00000000000b3c0f
@property(readonly, nonatomic) NSDate *currentOrEstimatedDate;
@property(readonly, nonatomic) NSDate *currentDate;
- (double)contentDurationWithinEndTimes;	// IMP=0x00000000000b3a6a
- (void)_setMinTiming:(id)arg1 maxTiming:(id)arg2;	// IMP=0x00000000000b3a09
- (void)setForwardPlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000b398b
- (CDStruct_1b6d18a9)forwardPlaybackEndTime;	// IMP=0x00000000000b38fe
- (void)setMaxTime:(double)arg1;	// IMP=0x00000000000b374c
- (double)maxTime;	// IMP=0x00000000000b35ef
- (void)setReversePlaybackEndTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x00000000000b3571
- (CDStruct_1b6d18a9)reversePlaybackEndTime;	// IMP=0x00000000000b34e4
- (void)setMinTime:(double)arg1;	// IMP=0x00000000000b33fd
- (double)minTime;	// IMP=0x00000000000b32d8
- (double)currentTime;	// IMP=0x00000000000b31c7
- (struct CGSize)contentDimensions;	// IMP=0x00000000000b3189
- (float)nominalFrameRate;	// IMP=0x00000000000b2edd
- (double)contentDuration;	// IMP=0x00000000000b2e37
- (_Bool)hasContent;	// IMP=0x00000000000b2dd4
- (void)setInspectionSuspended:(_Bool)arg1;	// IMP=0x00000000000b2d82
- (_Bool)isInspectionSuspended;	// IMP=0x00000000000b2d79
- (void)toggleMuted:(id)arg1;	// IMP=0x00000000000b2c69
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000000000b2c1d
- (_Bool)isMuted;	// IMP=0x00000000000b2bd9
- (void)changeVolumeToMaximum:(id)arg1;	// IMP=0x00000000000b2bbf
- (void)changeVolumeToMinimum:(id)arg1;	// IMP=0x00000000000b2baa
- (void)decreaseVolume:(id)arg1;	// IMP=0x00000000000b2b6c
- (void)increaseVolume:(id)arg1;	// IMP=0x00000000000b2b2e
- (void)setVolume:(double)arg1;	// IMP=0x00000000000b2a3c
- (double)volume;	// IMP=0x00000000000b29e8
- (void)updateAtMinMaxTime;	// IMP=0x00000000000b295d
- (void)setLooping:(_Bool)arg1;	// IMP=0x00000000000b289a
- (_Bool)isLooping;	// IMP=0x00000000000b2891
@property(nonatomic) _Bool touchBarRequiresLinearPlayback;
- (void)togglePlayback:(id)arg1;	// IMP=0x00000000000b276e
- (_Bool)canTogglePlayback;	// IMP=0x00000000000b2737
- (_Bool)canPause;	// IMP=0x00000000000b2725
- (void)autoplay:(id)arg1;	// IMP=0x00000000000b256f
- (void)play:(id)arg1;	// IMP=0x00000000000b24c5
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00000000000b229d
- (_Bool)isPlaying;	// IMP=0x00000000000b2279
- (_Bool)canPlay;	// IMP=0x00000000000b2242
- (void)_handleSeekTimerEvent;	// IMP=0x00000000000b2053
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *seekTimer;
- (_Bool)canPlayImmediately;	// IMP=0x00000000000b1b89
- (void)_retryPlayImmediatelyIfNeeded;	// IMP=0x00000000000b1af0
- (void)setDefaultPlaybackRate:(double)arg1;	// IMP=0x00000000000b1a2b
- (double)defaultPlaybackRate;	// IMP=0x00000000000b19d7
- (void)setRate:(double)arg1;	// IMP=0x00000000000b1976
- (void)_setRate_AVKitStrategy:(double)arg1;	// IMP=0x00000000000b158a
- (void)_setRate_AVFoundationStrategy:(double)arg1;	// IMP=0x00000000000b153c
- (void)_playAtRate:(double)arg1;	// IMP=0x00000000000b1230
- (double)rate;	// IMP=0x00000000000b11c9
- (void)_observeValueForKeyPath:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3;	// IMP=0x00000000000af424
- (_Bool)isCompletelySeekable;	// IMP=0x00000000000af1eb
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isReadyToPlay) _Bool readyToPlay;
@property(readonly, nonatomic) long long status;
- (id)_queuePlayer;	// IMP=0x00000000000aeebc
- (void)setObservationInfo:(void *)arg1;	// IMP=0x00000000000aeeb2
- (void *)observationInfo;	// IMP=0x00000000000aeea8
- (void)startKVO;	// IMP=0x00000000000ae68d
- (void)dealloc;	// IMP=0x00000000000ae4b4
- (void)startInspectionIfNeeded;	// IMP=0x00000000000ae146
- (id)initWithPlayer:(id)arg1;	// IMP=0x00000000000ade70
- (id)init;	// IMP=0x00000000000adc4f
- (void)_nukeTVExtras;	// IMP=0x000000000003a78f
- (void)_makeTVExtras;	// IMP=0x000000000003a727
- (id)tvExtras;	// IMP=0x000000000003a716
- (void)_updateNavigationMarkers;	// IMP=0x000000000003a5e3
- (void)_updatePrimaryNavigationMarkersGroup;	// IMP=0x000000000003a4d1
- (void)_setPrimaryNavigationMarkersGroup:(id)arg1;	// IMP=0x000000000003a45f
@property(readonly, nonatomic) AVNavigationMarkersGroup *primaryNavigationMarkersGroup;
- (_Bool)isFirstFilteredNavigationGroupChapters;	// IMP=0x000000000003a360
- (_Bool)isFirstUnfilteredNavigationGroupChapters;	// IMP=0x000000000003a2f4
- (id)externalChapterNavigationMarkersGroup;	// IMP=0x000000000003a247
@property(readonly, nonatomic) NSArray *externalNavigationMarkerGroups;
@property(readonly, nonatomic) AVNavigationMarkersGroup *embeddedChapterNavigationMarkersGroup;
- (void)_loadEmbeddedChapterNavigationMarkersGroupAsynchronously:(CDUnknownBlockType)arg1;	// IMP=0x0000000000039d39
- (void)endPlaybackSuspension;	// IMP=0x0000000000039cea
- (void)beginPlaybackSuspension;	// IMP=0x0000000000039caf
- (_Bool)isCoordinatorSuspended;	// IMP=0x0000000000039c4c
- (void)_resumePlaybackCoordinator;	// IMP=0x0000000000039ad9
- (void)_suspendPlaybackCoordinatorForReason:(id)arg1;	// IMP=0x0000000000039942
- (void)setLimitReadAheadIfAllowed:(_Bool)arg1;	// IMP=0x0000000000039883
- (void)togglePlaybackEvenWhenInBackground:(id)arg1;	// IMP=0x00000000000396f9
- (void)requestNavigateToDate:(id)arg1 fromDate:(id)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000000003955e
- (void)requestSeekToDate:(id)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x00000000000392bb
- (void)requestNavigateToTime:(double)arg1 fromTime:(double)arg2 reason:(long long)arg3 playWhenReady:(_Bool)arg4 permissionHandler:(CDUnknownBlockType)arg5 seekCompletion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000038ac0
- (void)requestSeekToTime:(double)arg1 reason:(long long)arg2 playWhenReady:(_Bool)arg3;	// IMP=0x0000000000038777
- (void)requestPauseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000003875d
- (void)requestPauseWithoutAffectingCoordinatedPlaybackWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000038746
- (void)requestPauseForAllCoordinatedPlaybackParticipants:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000003857e
- (void)requestPlayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000000382f2
- (void)requestSeekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000038081
- (void)requestSeekToTime:(double)arg1 seekReason:(long long)arg2 permissionHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000037ddc
- (CDStruct_1b6d18a9)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x0000000000037c43
- (void)seekToDate:(id)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000037a82
- (void)gotoEndOfSeekableRanges:(id)arg1;	// IMP=0x000000000003792e
- (void)seekToTime:(double)arg1 seekReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000376fb
- (void)_didRequestSeek;	// IMP=0x000000000003768a
- (void)_willRequestSeek;	// IMP=0x0000000000037619
- (void)_didEndSeek;	// IMP=0x00000000000375a8
- (void)_willBeginSeek;	// IMP=0x0000000000037537
- (_Bool)playerItem:(id)arg1 shouldSeekToTime:(CDStruct_1b6d18a9 *)arg2 toleranceBefore:(CDStruct_1b6d18a9 *)arg3 toleranceAfter:(CDStruct_1b6d18a9 *)arg4;	// IMP=0x000000000003745a
@property(readonly, nonatomic) _Bool isSeekingTV;
@property(readonly, nonatomic) long long currentSeekReason;
- (double)displayTimeFromTime:(double)arg1;	// IMP=0x0000000000037333
- (double)timeFromDisplayTime:(double)arg1;	// IMP=0x00000000000372d9
@property(readonly, nonatomic) _Bool shouldContinuePlaybackInBackground;
@property(readonly, nonatomic) long long avkitMediaType;
- (void)loadAspectRatio:(CDUnknownBlockType)arg1;	// IMP=0x0000000000037006
- (double)bounceBackReturningDisplayTime;	// IMP=0x0000000000036f85
@property(readonly, nonatomic) _Bool shouldBounceBackAfterScanForwardPastEndTime;
- (void)updateStartAndEndDates;	// IMP=0x0000000000036410
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) NSDate *exactEndDate;
@property(readonly, nonatomic) NSDate *exactStartDate;
@property(readonly, nonatomic) _Bool hasStartAndEndDates;
@property(retain, nonatomic) NSDate *programEndDate;
@property(retain, nonatomic) NSDate *programStartDate;
- (void)setEffectiveRateNonZero:(_Bool)arg1;	// IMP=0x000000000003600a
@property(readonly, nonatomic, getter=isEffectiveRateNonZero) _Bool effectiveRateNonZero;
@property(readonly, nonatomic) double currentDisplayTime;
- (double)playbackEndTime;	// IMP=0x0000000000035f48
@property(readonly, nonatomic) double displayedDuration;
@property(readonly, nonatomic) double longestSeekableDurationSeenForCurrentItem;
@property(readonly, nonatomic, getter=isLiveStreamEventModePossible) _Bool liveStreamEventModePossible;
@property(readonly, nonatomic) _Bool isContentDurationIndefinite;
@property(readonly, nonatomic) double contentDurationCached;
@property(readonly, nonatomic) AVTimeRange *displayTimeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNavigation;
@property(readonly, nonatomic) AVTimeRange *timeRangeForNonLivePlayback;
@property(readonly, nonatomic) AVTimeRange *timeRangeSeekable;
@property(readonly, nonatomic) AVPlayerItem *currentItem;
@property(readonly, nonatomic) _Bool hasMoreEnqueuedContent;
- (void)setActivePlaying:(_Bool)arg1;	// IMP=0x0000000000035505
- (_Bool)isActivePlaying;	// IMP=0x00000000000354c0
- (float)_activeRate;	// IMP=0x00000000000352f4
- (_Bool)isPrimaryPlayerWaitingForInterstitial;	// IMP=0x00000000000351d1
@property(readonly, nonatomic) AVQueuePlayer *queuePlayer;
- (_Bool)linearPlaybackRequiredByInterstitial:(id)arg1;	// IMP=0x00000000000350c9
@property(readonly, nonatomic) AVInterstitialController *interstitialController;
@property(retain, nonatomic) AVDelegateManager *delegateManager;
- (id)kvoPlayerItem;	// IMP=0x0000000000034f39
- (id)kvoPlayer;	// IMP=0x0000000000034ee9
- (void)_durationDidChange;	// IMP=0x0000000000034d95
- (void)updateTimeRanges;	// IMP=0x0000000000034a75
- (void)invalidateTV;	// IMP=0x0000000000034869
- (id)initWithTVPlayer:(id)arg1;	// IMP=0x0000000000034469
- (void)setClientSpecifiedDate:(id)arg1;	// IMP=0x00000000000343f7
- (id)clientSpecifiedDate;	// IMP=0x00000000000343a7
- (void)updateAudioFormats;	// IMP=0x000000000006966a
- (void)updateVideoResolutionAndRange;	// IMP=0x00000000000694f9
- (void)_updateVideoResolutionAndRange;	// IMP=0x0000000000068f30
- (id)_audioAssetTracks;	// IMP=0x0000000000068c9e
- (id)_videoAssetTracks;	// IMP=0x0000000000068a0c
@property(readonly, nonatomic) struct CGSize maximumVideoResolution;
- (id)preferredDisplayCriteria;	// IMP=0x00000000000c0103
@property(readonly, nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool handlesAudioSessionInterruptions;
- (_Bool)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;	// IMP=0x000000000012d41f
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)arg1;	// IMP=0x000000000012d311
- (void)_setMediaOption:(id)arg1 mediaCharacteristic:(id)arg2;	// IMP=0x000000000012cfd6
- (void)_enableAutoMediaSelection:(id)arg1;	// IMP=0x000000000012ce9d
- (void)_disableLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000012cde7
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)arg1;	// IMP=0x000000000012cd1c
- (void)_ensureUserCaptionDisplayType:(long long)arg1;	// IMP=0x000000000012cc4a
- (id)legibleOptions;	// IMP=0x000000000012c071
- (id)audioOptions;	// IMP=0x000000000012bbc7
- (void)reloadLegibleOptions;	// IMP=0x000000000012bb35
- (void)reloadAudioOptions;	// IMP=0x000000000012baa3
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000012b944
- (void)reloadOptionsAndCurrentSelections;	// IMP=0x000000000012b92d
- (void)reloadOptions;	// IMP=0x000000000012b919
- (void)selectedMediaOptionMayHaveChanged:(_Bool)arg1;	// IMP=0x000000000012b2a2
- (void)selectedMediaOptionMayHaveChanged;	// IMP=0x000000000012b28e
- (id)_optionsForGroup:(id)arg1;	// IMP=0x000000000012b279
- (id)mediaSelectionGroupForMediaCharacteristic:(id)arg1;	// IMP=0x000000000012b1f6
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;	// IMP=0x000000000012b181
- (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;	// IMP=0x000000000012b155
- (id)currentLegibleMediaSelectionOption;	// IMP=0x000000000012ae4b
- (void)setLegibleMediaSelectionOptions:(id)arg1;	// IMP=0x000000000012ad76
- (id)legibleMediaSelectionOptions;	// IMP=0x000000000012ad68
- (_Bool)hasLegibleMediaSelectionOptions;	// IMP=0x000000000012ad20
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;	// IMP=0x000000000012ad04
- (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;	// IMP=0x000000000012ace0
@property(retain, nonatomic) AVMediaSelectionOption *currentVideoMediaSelectionOption; // @dynamic currentVideoMediaSelectionOption;
- (id)currentAudioMediaSelectionOption;	// IMP=0x000000000012abca
- (void)setAudioMediaSelectionOptions:(id)arg1;	// IMP=0x000000000012aaf5
@property(readonly, nonatomic) NSArray *visualMediaSelectionOptions; // @dynamic visualMediaSelectionOptions;
- (id)audioMediaSelectionOptions;	// IMP=0x000000000012aad9
- (void)setLegibleMediaSelectionOptions:(id)arg1 audioMediaSelectionOptions:(id)arg2 assumeMediaOptionMayHaveChanged:(_Bool)arg3;	// IMP=0x000000000012aa08
- (_Bool)hasAudioMediaSelectionOptions;	// IMP=0x000000000012a9bf
- (_Bool)hasMediaSelectionOptions;	// IMP=0x000000000012a986

@end

