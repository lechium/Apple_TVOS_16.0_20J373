//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSMutableArray, NSObject, NSString, NSTimer, NSXPCConnection;
@protocol GCNintendoJoyConFusionGestureServiceClientInterface, OS_voucher;

@interface JoyConHIDServicePlugin
{
    unsigned char _globalPacketNumber;	// 8 = 0x8
    struct {
        NSString *string;
        _Atomic _Bool hasFecthedAtLeastOnce;
    } _serialNumber;	// 16 = 0x10
    struct {
        struct {
            unsigned short firmwareVersion;
            unsigned char type;
            unsigned char bluetoothMAC[6];
            unsigned char unknown1;
            unsigned char unknown2;
            unsigned char spiColorsOverride;
        } properties;
        _Bool hasFecthedAtLeastOnce;
        _Bool valid;
    } _deviceInfo;	// 32 = 0x20
    struct {
        CDStruct_11ffa521 bodyColor;
        CDStruct_11ffa521 buttonsColor;
    } _colorInfo;	// 46 = 0x2e
    struct {
        struct {
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } factory;
            struct {
                CDStruct_5aea82d7 left;
                CDStruct_5aea82d7 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
                unsigned int hasLeft:1;
                unsigned int hasRight:1;
            } user;
            struct {
                CDStruct_298edf78 left;
                CDStruct_298edf78 right;
                unsigned int fetchedLeft:1;
                unsigned int fetchedRight:1;
            } parameters;
        } stick;
    } _calibration;	// 52 = 0x34
    struct {
        _Bool initialized;
        struct {
            _Bool charging;
            unsigned char level;
        } info;
    } _battery;	// 162 = 0xa2
    unsigned char _lowPowerSetting;	// 165 = 0xa5
    unsigned char _inputReportMode;	// 166 = 0xa6
    CDStruct_9f249b22 _playerLights;	// 167 = 0xa7
    id <GCNintendoJoyConFusionGestureServiceClientInterface> _gestureClient;	// 176 = 0xb0
    NSTimer *_homeButtonLongPressGestureTimer;	// 184 = 0xb8
    NSTimer *_homeButtonLongPressRecognizedGesture;	// 192 = 0xc0
    _Bool _previousHomeButtonPressed;	// 200 = 0xc8
    NSMutableArray *_pendingSubcommands;	// 208 = 0xd0
    struct {
        unsigned char identifier;
        NSObject<OS_voucher> *voucher;
        CDUnknownBlockType responseHandler;
        unsigned long long requestTimestamp;
    } _outstandingSubcommand;	// 216 = 0xd8
    NSXPCConnection *_daemonConnection;	// 248 = 0xf8
}

+ (_Bool)matchService:(unsigned int)arg1 options:(id)arg2 score:(long long *)arg3;	// IMP=0x001000000000690d
- (void).cxx_destruct;	// IMP=0x000000000000d649
- (float)defaultRightAxisSnapRadius;	// IMP=0x000000000000d640
- (float)defaultLeftAxisSnapRadius;	// IMP=0x000000000000d637
- (float)defaultRightThumbstickDeadzoneRadius;	// IMP=0x000000000000d62e
- (float)defaultLeftThumbstickDeadzoneRadius;	// IMP=0x000000000000d625
- (float)defaultRightThumbstickNoiseBuffer;	// IMP=0x000000000000d617
- (float)defaultLeftThumbstickNoiseBuffer;	// IMP=0x000000000000d609
- (void)connectToNintendoJoyConFusionGestureServiceWithClient:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d5bd
- (void)fetchDeviceRegistryIDWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000000000d541
- (void)initGameControllerDaemonXPC;	// IMP=0x000000000000d19c
- (unsigned char)nextGlobalPacketNumber;	// IMP=0x000000000000d17a
- (void)applyDeadzone:(float)arg1 axisSnapRadius:(float)arg2 input:(MISSING_TYPE **)arg3;	// IMP=0x000000000000d174
- (void)homeButtonPressed:(_Bool)arg1;	// IMP=0x000000000000ce99
- (void)homeButtonLongPressGestureEnded:(id)arg1;	// IMP=0x000000000000cdf1
- (void)homeButtonLongPressGestureBegan:(id)arg1;	// IMP=0x000000000000ccee
- (CDStruct_a46637cf)currentRumbleData;	// IMP=0x000000000000c9a8
- (id)defaultHapticMotors;	// IMP=0x000000000000c857
- (float)defaultHapticDispatchFrequency;	// IMP=0x000000000000c849
- (void)dispatchHapticEvent;	// IMP=0x000000000000c837
- (void)dispatchSetVibrationEnabledSubcommandWithChange:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c76e
- (void)dispatchSetPlayerLightsSubcommandWithNewState:(CDStruct_9f249b22)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c61b
- (void)dispatchSPIFlashReadSubcommandWithAddress:(unsigned int)arg1 length:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000000c1ae
- (void)dispatchSetLowPowerStateSubcommandWithChange:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c0e5
- (void)dispatchSetInputReportModeSubcommandWithRequestedMode:(unsigned char)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000c01c
- (void)dispatchRequestDeviceInfoSubcommandWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000000bdaf
- (void)enqueueSubcommand:(unsigned char)arg1 data:(const void *)arg2 length:(unsigned long long)arg3 replyHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000000000b687
- (void)dispatchPendingSubcommandIfReady;	// IMP=0x000000000000b5f5
- (void)dispatchCurrentRumbleData;	// IMP=0x000000000000b0ce
- (unsigned char)fourBitAmplitudeLookup:(float)arg1;	// IMP=0x000000000000b004
- (void)handleSubcommandReply:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x000000000000aceb
- (void)handleStandardFullPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x000000000000a776
- (void)handleHIDControllerPayload:(long long)arg1 withData:(id)arg2 timestamp:(unsigned long long)arg3;	// IMP=0x000000000000a414
- (void)refreshCalibrationData;	// IMP=0x0000000000009730
- (void)refreshDeviceInfo;	// IMP=0x0000000000008fca
- (void)refreshLowPowerSetting;	// IMP=0x0000000000008db8
- (void)setVibrationEnabled:(_Bool)arg1;	// IMP=0x0000000000008c58
- (void)setLowPower:(_Bool)arg1;	// IMP=0x0000000000008ae7
- (void)switchToInputMode:(unsigned char)arg1;	// IMP=0x0000000000008987
- (void)setPlayerLights:(CDStruct_9f249b22)arg1;	// IMP=0x000000000000889a
- (_Bool)io_playerLights:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000083c3
- (_Bool)io_color:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000080cc
- (_Bool)io_inputMode:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000007f7d
- (_Bool)io_lowPowerSetting:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x0000000000007f2c
- (_Bool)io_calibrationInfo:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000074f3
- (_Bool)io_serialNumber:(id)arg1 value:(id *)arg2 modify:(_Bool)arg3;	// IMP=0x00000000000074c4
@property(readonly, copy) NSString *description;
- (_Bool)shouldDisconnectWhenIdle;	// IMP=0x00000000000074a5
- (void)setupRawReportHandling;	// IMP=0x0000000000007266
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2 client:(id)arg3;	// IMP=0x00000000000070e4
- (id)propertyForKey:(id)arg1 client:(id)arg2;	// IMP=0x0000000000006b76
- (void)cancel;	// IMP=0x0000000000006b2d
- (id)initWithService:(unsigned int)arg1;	// IMP=0x00000000000069c7

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

