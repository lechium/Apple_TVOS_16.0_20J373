//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryController, CSDCallHistoryControllerXPCServer, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRelayMessagingController, CSDRouteController, CSDVoIPApplicationController, NSNumber, NSString, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDCallContainer, CSDProcessObserverProtocol, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryController *_callHistoryController;	// 8 = 0x8
    CSDCallHistoryManager *_callHistoryManager;	// 16 = 0x10
    CSDCallProviderManager *_callProviderManager;	// 24 = 0x18
    CSDCallController *_callController;	// 32 = 0x20
    CSDVoIPApplicationController *_voipApplicationController;	// 40 = 0x28
    CSDRelayMessagingController *_relayMessagingController;	// 48 = 0x30
    CSDRecentsController *_recentsController;	// 56 = 0x38
    CSDAudioController *_audioController;	// 64 = 0x40
    CSDAudioArbitrationController *_audioArbitrationController;	// 72 = 0x48
    CSDRouteController *_localRouteController;	// 80 = 0x50
    CSDRouteController *_pairedHostDeviceRouteController;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_queue;	// 96 = 0x60
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 104 = 0x68
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 112 = 0x70
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 120 = 0x78
    id <TUFeatureFlags> _featureFlags;	// 128 = 0x80
    CSDRelayCallDataSource *_relayCallDataSource;	// 136 = 0x88
    CSDRelayCallDelegate *_relayCallDelegate;	// 144 = 0x90
    CSDClientManager *_clientManager;	// 152 = 0x98
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 160 = 0xa0
    id <CSDProcessObserverProtocol> _processObserver;	// 168 = 0xa8
    CSDCallHistoryControllerXPCServer *_callHistoryControllerXPCServer;	// 176 = 0xb0
    CDUnknownBlockType _clientInvalidationHandler;	// 184 = 0xb8
    CSDProviderCallDataSource *_providerCallDataSource;	// 192 = 0xc0
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 200 = 0xc8
}

+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x0020000000134af9
- (void).cxx_destruct;	// IMP=0x0020000000141ea6
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) CSDCallHistoryControllerXPCServer *callHistoryControllerXPCServer; // @synthesize callHistoryControllerXPCServer=_callHistoryControllerXPCServer;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) CSDRelayMessagingController *relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
@property(retain, nonatomic) CSDCallHistoryController *callHistoryController; // @synthesize callHistoryController=_callHistoryController;
- (_Bool)isInCallUIActive;	// IMP=0x0010000000141d1d
- (void)updateAudioArbitration;	// IMP=0x0010000000141d17
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x0010000000141d11
- (void)didChangeRelayCallingCapabilities;	// IMP=0x0010000000141c9b
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x0010000000141c95
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000141b5b
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x0010000000141a33
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x00100000001417ef
- (id)currentCallsForClient:(id)arg1;	// IMP=0x001000000014172b
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x0010000000141696
- (id)currentProxyCalls;	// IMP=0x001000000014147c
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x001000000014140a
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001412cd
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000141190
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x0010000000141020
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x0010000000140f1b
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000140d0c
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000140a9d
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000001409a8
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000140799
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000014069f
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000001404b5
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001402e4
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x0010000000140113
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000013ffbb
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000013fe63
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000013fc84
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x001000000013faa5
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x001000000013f90e
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x001000000013f817
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x001000000013f811
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x001000000013f7b4
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x001000000013f757
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x001000000013f4e7
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x001000000013f2a1
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x001000000013f075
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x001000000013ee74
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000013ec34
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x001000000013eb17
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x001000000013e9ee
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013e7b2
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x001000000013e623
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013e448
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x001000000013e31f
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000013e190
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013dec4
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013dbf8
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013d8e4
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013d618
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013d34c
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000013d1bd
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000013ceaa
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000013cd1b
- (oneway void)pullRelayingCallsFromClient;	// IMP=0x001000000013cbe8
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013c9e3
- (oneway void)disconnectAllCalls;	// IMP=0x001000000013c8ba
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x001000000013c791
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x001000000013c4c5
- (oneway void)swapCalls;	// IMP=0x001000000013c39c
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013c0f4
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000013bd09
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013ba61
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013b48c
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013b1e4
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000013af3c
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x001000000013abf3
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000013ab0a
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000013a92f
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000013a5a7
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x001000000013a24d
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x001000000013a199
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x0010000000139f30
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000139cdd
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x0010000000139c6b
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000139b67
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x00100000001398f0
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x0010000000139718
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x0010000000139690
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000013961e
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x001000000013934f
- (void)performDisconnectAllCalls;	// IMP=0x0010000000139066
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x00100000001384d2
- (void)performDisconnectCall:(id)arg1;	// IMP=0x0010000000138119
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000138095
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000138011
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0000000000137785
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000136f52
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000136876
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x00100000001366a2
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000136443
- (void)performSwapCalls;	// IMP=0x0010000000135e1c
- (void)performUngroupCall:(id)arg1;	// IMP=0x0010000000135a6a
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x0010000000135682
- (void)performUnholdCall:(id)arg1;	// IMP=0x0010000000135494
- (void)performHoldCall:(id)arg1;	// IMP=0x00100000001352a6
- (id)performJoinConversation:(id)arg1;	// IMP=0x0010000000135170
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x00100000001348d7
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x0010000000134664
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x00100000001345b4
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x001000000013457f
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000134440
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x00100000001343bf
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x00100000001342f9
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000134285
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000134197
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000134080
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000133eaf
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000133e12
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000133b3c
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x00100000001338c0
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x0010000000133401
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x00100000001333fb
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x00100000001332a7
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x0010000000133165
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x001000000013301c
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x0010000000132e8b
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x0010000000132d27
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x0010000000132c19
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x0010000000132ad7
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x001000000013296d
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x0010000000132817
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x00100000001326d5
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x00100000001325b1
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x0010000000132469
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x0010000000132300
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x0010000000131f30
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x0010000000131dbb
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x0010000000131c46
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x0010000000131b26
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x00100000001319a2
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x001000000013182d
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x00100000001316eb
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x00100000001315a9
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x0010000000131327
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x0010000000131312
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x00100000001312fb
- (void)resetClientCallProvisionalStates;	// IMP=0x00100000001311fe
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000130f53
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000130c3c
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000130bc2
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001309d6
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x00100000001303af
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x0010000000130164
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x001000000013015e
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x001000000012ff31
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x001000000012ff2b
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x001000000012fcfe
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x001000000012fb2a
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x001000000012f9d7
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x001000000012f16c
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x001000000012eee8
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x001000000012eee0
- (void)_requestCallStateFromHost;	// IMP=0x001000000012eeda
- (void)_handleRelayCallingChanged;	// IMP=0x001000000012e975
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x001000000012e5df
- (void)dealloc;	// IMP=0x001000000012e4fc
- (void)invalidate;	// IMP=0x001000000012e4bf
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2;	// IMP=0x001000000012c674
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000012c610

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

