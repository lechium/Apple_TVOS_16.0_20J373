//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _flags;	// 24 = 0x18
    NSString *__error_ivar;	// 32 = 0x20
    unsigned long long __internal_state_ivar;	// 40 = 0x28
    CDUnknownBlockType _corruptionHandler;	// 48 = 0x30
}

+ (id)defaultDatabaseWALPath;	// IMP=0x004000000003ce8d
+ (id)defaultDatabasePath;	// IMP=0x001000000003ce2f
- (void).cxx_destruct;	// IMP=0x001000000003e9ed
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x001000000003e844
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x001000000003e542
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x001000000003e50a
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x001000000003e488
- (void)disableStatementCachingForBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003e3f4
- (void)clearCachedStatements;	// IMP=0x001000000003e3de
- (_Bool)rollback;	// IMP=0x001000000003e3c8
- (_Bool)commit;	// IMP=0x001000000003e3b2
- (_Bool)beginTransaction;	// IMP=0x001000000003e39c
- (void)close;	// IMP=0x001000000003e2ec
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x001000000003e214
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x001000000003d388
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x001000000003d268
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x001000000003d0c8
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x001000000003cf6e
- (id)initWithPath:(id)arg1;	// IMP=0x001000000003cf5a
- (id)initWithQueue:(id)arg1;	// IMP=0x001000000003cee4
- (int)CRDTLocationCount;	// IMP=0x001000000000447e
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000000430f
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x001000000000414c
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x0010000000003f9b
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x0010000000003d44
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x0010000000003b60
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x0010000000003720
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x00100000000034b8
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x00100000000031cc
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x0010000000003089
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x0010000000002f62
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x0010000000002d80
- (id)allPeers;	// IMP=0x0010000000006a96
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000006959
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x001000000000681a
- (id)lastSyncDateFromAnyDevice;	// IMP=0x001000000000675e
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x001000000000661a
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x00100000000060be
- (id)localDevice;	// IMP=0x0010000000006000
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000017963
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x00100000000176ed
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x00100000000174d8
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x0010000000017287
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x0010000000017153
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x001000000001704b
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x00100000000243b7
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000024220
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000023f42
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000000236c7
- (void)locationsInClockVector:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000022e86
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x00100000000229f0
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000022690
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000022440
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x0010000000022354
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002221e
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000022040
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x0010000000021de9
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000217cc
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x001000000002152b
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000212fa
- (int)ckAtomCount;	// IMP=0x0010000000021248
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000021054
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x0010000000020b0c
- (id)timestampClockVectorForStreamName:(id)arg1;	// IMP=0x0010000000020869
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000206f4
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000204d7
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000001fa55
@property(retain, nonatomic) NSString *mergeableRecordValueKey;
- (void)clearCKSyncEngineMetaData;	// IMP=0x0010000000027897
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x001000000002787e
- (id)ckSyncEngineMetaData;	// IMP=0x0010000000027865
@property(retain, nonatomic) NSDate *lastCloudKitSyncDate;
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000027c43
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForZoneName:(id)arg1;	// IMP=0x0010000000027b65
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x0010000000027a5e
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x0010000000027923
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000027fa5
- (id)latestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000027de7
- (_Bool)enableAllCKSyncRecordsPreviouslyDisabledForSite:(id)arg1 stream:(id)arg2;	// IMP=0x0010000000039d59
- (_Bool)disableAllCKSyncRecordsForSite:(id)arg1 stream:(id)arg2;	// IMP=0x0010000000039b39
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000039704
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x00100000000395c6
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x0010000000039470
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x0010000000039308
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000039139
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x0010000000038fb1
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x0010000000038e94
- (void);	// IMP=0x0010000000038c8e
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000038b6d
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x00100000000388dd
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x00100000000386d0
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000038561
- (id)ckRecordForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x00100000000383c4
- (_Bool)clearCKRecordLocalMergeableValueAndSetToSyncForZone:(id)arg1;	// IMP=0x00100000000381e1
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x0010000000037e25
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x0010000000037b5f
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x00100000000378ba
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x00100000000376b7
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x00100000000374d0
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000037338
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(id)arg2 recordType:(unsigned long long)arg3 crdtDeleted:(id)arg4;	// IMP=0x0010000000036c5d
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x0010000000036a72
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x001000000003697a
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x00100000000366d9
- (void)compactAndDeleteSessionLogs;	// IMP=0x001000000003fc2f
- (id)computeAggregatedSessionLogs;	// IMP=0x001000000003fb3d
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x001000000003f81b
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x001000000003f537
- (void)recordSessionEnd:(id)arg1 timeSincePreviousSync:(double)arg2;	// IMP=0x001000000003f34b
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x001000000003f0e5
- (unsigned long long)sizeOfTableInKilobytes:(id)arg1;	// IMP=0x0010000000040bd2
- (unsigned long long)numRowsInTable:(id)arg1;	// IMP=0x00100000000408ef
- (unsigned long long)_sizeOfFileInKilobytes:(id)arg1;	// IMP=0x0010000000040756
- (unsigned long long)walSizeInKilobytes;	// IMP=0x00100000000406fb
- (unsigned long long)databaseSizeInKilobytes;	// IMP=0x00100000000406a0
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000040134
- (unsigned long long)_numPagesToVacuum;	// IMP=0x001000000003fda7
@property(retain, nonatomic) NSDate *dateOfLastVacuum;

@end

