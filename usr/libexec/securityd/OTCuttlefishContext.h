//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKAccountInfo, CKKSCondition, CKKSKeychainView, CKKSLaunchSequence, CKKSLockStateTracker, CKKSNearFutureScheduler, CuttlefishXPCWrapper, NSData, NSOperationQueue, NSString, OTAccountSettingsX, OTCustodianRecoveryKey, OTCuttlefishAccountStateHolder, OTFollowup, OTInheritanceKey, OctagonAPSReceiver, OctagonStateMachine, TPPolicyVersion, TPSpecificUser;
@protocol CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer, CKKSPeerProvider, OS_dispatch_queue, OTAccountsAdapter, OTAuthKitAdapter, OTDeviceInformationAdapter, OTPersonaAdapter, OTSOSAdapter, OTTooManyPeersAdapter;

@interface OTCuttlefishContext : NSObject
{
    NSString *_bottleID;	// 8 = 0x8
    NSString *_bottleSalt;	// 16 = 0x10
    NSData *_entropy;	// 24 = 0x18
    long long _resetReason;	// 32 = 0x20
    _Bool _skipRateLimitingCheck;	// 40 = 0x28
    _Bool _initialBecomeUntrustedPosted;	// 41 = 0x29
    CuttlefishXPCWrapper *_cuttlefishXPCWrapper;	// 48 = 0x30
    OTFollowup *_followupHandler;	// 56 = 0x38
    NSString *_containerName;	// 64 = 0x40
    NSString *_contextID;	// 72 = 0x48
    TPSpecificUser *_activeAccount;	// 80 = 0x50
    NSString *_pairingUUID;	// 88 = 0x58
    CKKSLockStateTracker *_lockStateTracker;	// 96 = 0x60
    OTCuttlefishAccountStateHolder *_accountMetadataStore;	// 104 = 0x68
    OctagonStateMachine *_stateMachine;	// 112 = 0x70
    CKKSNearFutureScheduler *_apsRateLimiter;	// 120 = 0x78
    CKKSNearFutureScheduler *_sosConsistencyRateLimiter;	// 128 = 0x80
    CKKSKeychainView *_ckks;	// 136 = 0x88
    id <CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer> _accountStateTracker;	// 144 = 0x90
    id <OTDeviceInformationAdapter> _deviceAdapter;	// 152 = 0x98
    id <OTAccountsAdapter> _accountsAdapter;	// 160 = 0xa0
    id <OTAuthKitAdapter> _authKitAdapter;	// 168 = 0xa8
    id <OTPersonaAdapter> _personaAdapter;	// 176 = 0xb0
    id <OTSOSAdapter> _sosAdapter;	// 184 = 0xb8
    id <OTTooManyPeersAdapter> _tooManyPeersAdapter;	// 192 = 0xc0
    CKKSCondition *_pendingEscrowCacheWarmup;	// 200 = 0xc8
    NSObject<OS_dispatch_queue> *_queue;	// 208 = 0xd0
    TPPolicyVersion *_policyOverride;	// 216 = 0xd8
    CKKSLaunchSequence *_launchSequence;	// 224 = 0xe0
    NSOperationQueue *_operationQueue;	// 232 = 0xe8
    CKAccountInfo *_cloudKitAccountInfo;	// 240 = 0xf0
    CKKSCondition *_cloudKitAccountStateKnown;	// 248 = 0xf8
    CKKSNearFutureScheduler *_suggestTLKUploadNotifier;	// 256 = 0x100
    CKKSNearFutureScheduler *_requestPolicyCheckNotifier;	// 264 = 0x108
    CKKSNearFutureScheduler *_upgradeUserControllableViewsRateLimiter;	// 272 = 0x110
    CKKSNearFutureScheduler *_fixupRetryScheduler;	// 280 = 0x118
    NSString *_recoveryKey;	// 288 = 0x120
    OTCustodianRecoveryKey *_custodianRecoveryKey;	// 296 = 0x128
    OTInheritanceKey *_inheritanceKey;	// 304 = 0x130
    OTAccountSettingsX *_settings;	// 312 = 0x138
    OctagonAPSReceiver *_apsReceiver;	// 320 = 0x140
    id <CKKSPeerProvider> _octagonAdapter;	// 328 = 0x148
    Class _escrowRequestClass;	// 336 = 0x150
    Class _notifierClass;	// 344 = 0x158
    NSString *_machineID;	// 352 = 0x160
}

- (void).cxx_destruct;	// IMP=0x00200000000e31ae
@property(retain, nonatomic) NSString *machineID; // @synthesize machineID=_machineID;
@property(nonatomic) _Bool initialBecomeUntrustedPosted; // @synthesize initialBecomeUntrustedPosted=_initialBecomeUntrustedPosted;
@property(readonly) Class notifierClass; // @synthesize notifierClass=_notifierClass;
@property(readonly) Class escrowRequestClass; // @synthesize escrowRequestClass=_escrowRequestClass;
@property(retain) id <CKKSPeerProvider> octagonAdapter; // @synthesize octagonAdapter=_octagonAdapter;
@property(retain) OctagonAPSReceiver *apsReceiver; // @synthesize apsReceiver=_apsReceiver;
@property(retain, nonatomic) OTAccountSettingsX *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) OTInheritanceKey *inheritanceKey; // @synthesize inheritanceKey=_inheritanceKey;
@property(retain, nonatomic) OTCustodianRecoveryKey *custodianRecoveryKey; // @synthesize custodianRecoveryKey=_custodianRecoveryKey;
@property(retain, nonatomic) NSString *recoveryKey; // @synthesize recoveryKey=_recoveryKey;
@property(retain) CKKSNearFutureScheduler *fixupRetryScheduler; // @synthesize fixupRetryScheduler=_fixupRetryScheduler;
@property(retain) CKKSNearFutureScheduler *upgradeUserControllableViewsRateLimiter; // @synthesize upgradeUserControllableViewsRateLimiter=_upgradeUserControllableViewsRateLimiter;
@property(retain) CKKSNearFutureScheduler *requestPolicyCheckNotifier; // @synthesize requestPolicyCheckNotifier=_requestPolicyCheckNotifier;
@property(retain) CKKSNearFutureScheduler *suggestTLKUploadNotifier; // @synthesize suggestTLKUploadNotifier=_suggestTLKUploadNotifier;
@property(retain) CKKSCondition *cloudKitAccountStateKnown; // @synthesize cloudKitAccountStateKnown=_cloudKitAccountStateKnown;
@property(retain) CKAccountInfo *cloudKitAccountInfo; // @synthesize cloudKitAccountInfo=_cloudKitAccountInfo;
@property(retain) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) CKKSLaunchSequence *launchSequence; // @synthesize launchSequence=_launchSequence;
@property(retain) TPPolicyVersion *policyOverride; // @synthesize policyOverride=_policyOverride;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) CKKSCondition *pendingEscrowCacheWarmup; // @synthesize pendingEscrowCacheWarmup=_pendingEscrowCacheWarmup;
@property(readonly) id <OTTooManyPeersAdapter> tooManyPeersAdapter; // @synthesize tooManyPeersAdapter=_tooManyPeersAdapter;
@property(readonly) id <OTSOSAdapter> sosAdapter; // @synthesize sosAdapter=_sosAdapter;
@property(readonly) id <OTPersonaAdapter> personaAdapter; // @synthesize personaAdapter=_personaAdapter;
@property(readonly) id <OTAuthKitAdapter> authKitAdapter; // @synthesize authKitAdapter=_authKitAdapter;
@property(readonly) id <OTAccountsAdapter> accountsAdapter; // @synthesize accountsAdapter=_accountsAdapter;
@property(readonly) id <OTDeviceInformationAdapter> deviceAdapter; // @synthesize deviceAdapter=_deviceAdapter;
@property(readonly) id <CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer> accountStateTracker; // @synthesize accountStateTracker=_accountStateTracker;
@property(retain) CKKSKeychainView *ckks; // @synthesize ckks=_ckks;
@property(retain, nonatomic) CKKSNearFutureScheduler *sosConsistencyRateLimiter; // @synthesize sosConsistencyRateLimiter=_sosConsistencyRateLimiter;
@property(retain, nonatomic) CKKSNearFutureScheduler *apsRateLimiter; // @synthesize apsRateLimiter=_apsRateLimiter;
@property(readonly) OctagonStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic) OTCuttlefishAccountStateHolder *accountMetadataStore; // @synthesize accountMetadataStore=_accountMetadataStore;
@property(readonly, nonatomic) CKKSLockStateTracker *lockStateTracker; // @synthesize lockStateTracker=_lockStateTracker;
@property(retain, nonatomic) NSString *pairingUUID; // @synthesize pairingUUID=_pairingUUID;
@property(retain) TPSpecificUser *activeAccount; // @synthesize activeAccount=_activeAccount;
@property(readonly) NSString *contextID; // @synthesize contextID=_contextID;
@property(readonly) NSString *containerName; // @synthesize containerName=_containerName;
@property(retain) OTFollowup *followupHandler; // @synthesize followupHandler=_followupHandler;
@property(readonly) CuttlefishXPCWrapper *cuttlefishXPCWrapper; // @synthesize cuttlefishXPCWrapper=_cuttlefishXPCWrapper;
- (_Bool)checkAllStateCleared;	// IMP=0x00100000000e2c92
- (void)clearContextState;	// IMP=0x00100000000e2c16
- (void)rpcResetAccountCDPContents:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e2a81
- (id)egoPeerStatus:(id *)arg1;	// IMP=0x00100000000e28dc
- (_Bool)machineIDOnMemoizedList:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000e2713
- (void)waitForOctagonUpgrade:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e1ef0
- (void)checkOctagonHealth:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e177c
- (_Bool)processMoveRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000e0fee
- (_Bool)postConfirmPasscodeCFU:(id *)arg1;	// IMP=0x00100000000e0ea9
- (_Bool)leaveTrust:(id *)arg1;	// IMP=0x00100000000e0e44
- (_Bool)shouldPostConfirmPasscodeCFU:(id *)arg1;	// IMP=0x00100000000e0bde
- (_Bool)postRepairCFU:(id *)arg1;	// IMP=0x00100000000e0a48
- (void)rpcTlkRecoverabilityForEscrowRecordData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e08eb
- (void)tlkRecoverabilityInOctagon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e082d
- (void)octagonPeerIDGivenBottleID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e079f
- (void)rpcWaitForPriorityViewKeychainDataRecovery:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e05f9
- (void)rpcPersistAccountSettings:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e0548
- (void)rpcAccountWideSettings:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e0417
- (void)rpcFetchAccountSettings:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e02e6
- (void)rpcFetchTrustedSecureElementIdentities:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e0006
- (void)rpcRemoveLocalSecureElementIdentityPeerID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dfe62
- (void)rpcSetLocalSecureElementIdentity:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dfc55
- (void)rpcSetUserControllableViewsSyncingStatus:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dfb90
- (void)rpcFetchUserControllableViewsSyncingStatus:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df698
- (void)rpcRefetchCKKSPolicy:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df459
- (void)fetchEscrowContents:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df383
- (void)rpcInvalidateEscrowCache:(CDUnknownBlockType)arg1;	// IMP=0x00100000000df1ee
- (void)rpcFetchAllViableEscrowRecords:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000df045
- (void)rpcFetchAllViableBottles:(CDUnknownBlockType)arg1;	// IMP=0x00100000000deeac
- (void)rpcTrustStatus:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de7ac
- (void)rpcTrustStatusCachedStatus:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de62e
- (void)rpcRemoveInheritanceKeyWithUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de476
- (void)rpcStoreInheritanceKeyWithIK:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de2be
- (void)rpcGenerateInheritanceKeyWithUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000de172
- (void)rpcCreateInheritanceKeyWithUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ddfba
- (void)rpcRemoveCustodianRecoveryKeyWithUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dde02
- (void)rpcCreateCustodianRecoveryKeyWithUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ddc4a
- (void)rpcSetRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dda30
- (void)rpcFetchPeerIDByBottleID:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dda0f
- (void)rpcFetchDeviceNamesByPeerID:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dd909
- (void)rpcFetchPeerAttributes:(id)arg1 includeSelf:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dd800
- (void)rpcFetchEgoPeerID:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dd6ae
- (void)rpcStatus:(CDUnknownBlockType)arg1;	// IMP=0x00100000000dca9a
- (id)sosSelvesStatus;	// IMP=0x00100000000dc6c0
- (id)sosTrustedPeersStatus;	// IMP=0x00100000000dc41b
- (id)ckksPeerStatus:(id)arg1;	// IMP=0x00100000000dc291
- (void)rpcJoin:(id)arg1 vouchSig:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000dbf32
- (id)joinStatePathDictionary;	// IMP=0x00100000000dba00
- (void)preflightJoinWithInheritanceKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000db5fa
- (void)joinWithInheritanceKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000db31c
- (void)preflightJoinWithCustodianRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000daf3f
- (void)joinWithCustodianRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dacd1
- (void)joinWithRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000daa63
- (void)joinWithBottle:(id)arg1 entropy:(id)arg2 bottleSalt:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000000da70c
- (void)rpcPrepareIdentityAsApplicantWithConfiguration:(id)arg1 epoch:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000da249
- (id)errorIfNoCKAccount:(id)arg1;	// IMP=0x00100000000da1ce
- (long long)checkForCKAccount:(id)arg1;	// IMP=0x00100000000d9d2e
- (void)trustedPeerSetChanged:(id)arg1;	// IMP=0x00100000000d99f2
- (void)selfPeerChanged:(id)arg1;	// IMP=0x00100000000d99ec
- (void)deviceNameUpdated;	// IMP=0x00100000000d98c0
- (void)requestTrustedDeviceListRefresh;	// IMP=0x00100000000d987c
- (id)currentMemoizedLastHealthCheck;	// IMP=0x00100000000d96fd
- (int)currentMemoizedAccountState;	// IMP=0x00100000000d95e4
- (int)currentMemoizedTrustState;	// IMP=0x00100000000d94cb
- (void)setMachineIDOverride:(id)arg1;	// IMP=0x00100000000d9459
- (void)popTooManyPeersDialogWithEgoPeerStatus:(id)arg1 accountMeta:(id)arg2;	// IMP=0x00100000000d8f20
- (_Bool)waitForReady:(long long)arg1;	// IMP=0x00100000000d8e98
- (void)notifyContainerChangeWithUserInfo:(id)arg1;	// IMP=0x00100000000d8a54
- (void)notifyContainerChange:(id)arg1;	// IMP=0x00100000000d8a05
- (void)handleTTRRequest:(id)arg1;	// IMP=0x00100000000d85ab
- (void)handleHealthRequest;	// IMP=0x00100000000d847e
- (id)extractStringKey:(id)arg1 fromDictionary:(id)arg2;	// IMP=0x00100000000d841b
- (id)becomeReadyOperation;	// IMP=0x00100000000d833f
- (id)becomeInheritedOperation;	// IMP=0x00100000000d8263
- (id)becomeUntrustedOperation:(id)arg1;	// IMP=0x00100000000d816f
- (void)checkTrustStatusAndPostRepairCFUIfNecessary:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d806f
- (_Bool)checkForPhonePeerPresence:(id)arg1;	// IMP=0x00100000000d7dfd
- (id)repairAccountIfTrustedByTPHWithIntendedState:(id)arg1;	// IMP=0x00100000000d7c6c
- (id)cloudKitAccountNewlyAvailableOperation:(id)arg1;	// IMP=0x00100000000d7b78
- (id)postRepairCFUAndBecomeUntrusted;	// IMP=0x00100000000d7afe
- (id)cuttlefishTrustEvaluation;	// IMP=0x00100000000d7983
- (id)evaluateTPHOctagonTrust;	// IMP=0x00100000000d7909
- (id)evaluateSecdOctagonTrust;	// IMP=0x00100000000d788f
- (id)checkForAccountFixupsOperation:(id)arg1;	// IMP=0x00100000000d777c
- (id)initializingOperation;	// IMP=0x00100000000d76a0
- (id)_onqueueNextStateMachineTransition:(id)arg1 flags:(id)arg2 pendingFlags:(id)arg3;	// IMP=0x00100000000d4193
- (void)clearPairingUUID;	// IMP=0x00100000000d417f
- (void)handlePairingRestart:(id)arg1;	// IMP=0x00100000000d3e25
- (void)startOctagonStateMachine;	// IMP=0x00100000000d3de8
- (id)operationDependencies;	// IMP=0x00100000000d3b74
- (id)prepareInformation;	// IMP=0x00100000000d3842
- (void)rpcRemoveFriendsInClique:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d3722
- (void)rpcLeaveClique:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d3482
- (void)rpcResetAndEstablish:(long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d3250
- (void)rpcEstablish:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d315c
- (id)establishStatePathDictionary;	// IMP=0x00100000000d2d9f
- (void)localReset:(CDUnknownBlockType)arg1;	// IMP=0x00100000000d2b67
- (void)resetOctagonStateMachine;	// IMP=0x00100000000d299d
- (_Bool)setCDPEnabled:(id *)arg1;	// IMP=0x00100000000d27ed
- (long long)getCDPStatus:(id *)arg1;	// IMP=0x00100000000d2626
- (_Bool)accountNoLongerAvailable:(id *)arg1;	// IMP=0x00100000000d2423
- (_Bool)idmsTrustLevelChanged:(id *)arg1;	// IMP=0x00100000000d23dc
- (void)moveToCheckTrustedState;	// IMP=0x00100000000d21c4
- (_Bool)accountAvailable:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000d19b5
- (void)cloudkitAccountStateChange:(id)arg1 to:(id)arg2;	// IMP=0x00100000000d17d0
- (void)incompleteNotificationOfMachineIDListChange;	// IMP=0x00100000000d1753
- (void)machinesRemoved:(id)arg1 altDSID:(id)arg2;	// IMP=0x00100000000d13b6
- (void)machinesAdded:(id)arg1 altDSID:(id)arg2;	// IMP=0x00100000000d1019
@property(readonly, copy) NSString *description;
- (void)accountStateUpdated:(id)arg1 from:(id)arg2;	// IMP=0x00100000000d0c90
- (void)notifyTrustChanged:(int)arg1;	// IMP=0x00100000000d0b35
- (void)dealloc;	// IMP=0x00100000000d0b06
- (void)resetCKKS:(id)arg1;	// IMP=0x00100000000d0af4
- (void)clearCKKS;	// IMP=0x00100000000d0ae0
- (id)initWithContainerName:(id)arg1 contextID:(id)arg2 activeAccount:(id)arg3 cuttlefish:(id)arg4 ckksAccountSync:(id)arg5 sosAdapter:(id)arg6 accountsAdapter:(id)arg7 authKitAdapter:(id)arg8 personaAdapter:(id)arg9 tooManyPeersAdapter:(id)arg10 lockStateTracker:(id)arg11 reachabilityTracker:(id)arg12 accountStateTracker:(id)arg13 deviceInformationAdapter:(id)arg14 apsConnectionClass:(Class)arg15 escrowRequestClass:(Class)arg16 notifierClass:(Class)arg17 cdpd:(id)arg18;	// IMP=0x00100000000d0208

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

