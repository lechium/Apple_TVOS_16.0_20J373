//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CPLPrequeliteSynthesizedVariable, CPLPrequeliteTodoVar, CPLPrequeliteVariable, CPLPrequeliteVariableGroup, MISSING_TYPE, NSMutableSet, NSString, _CPLPrequeliteScopeBase, _CPLPrequeliteScopeSyncState;
@protocol PQLInjecting;

@interface CPLPrequeliteScopeStorage
{
    CPLPrequeliteVariable *_nextIndexVar;	// 8 = 0x8
    CPLPrequeliteVariable *_scopeListSyncAnchorVar;	// 16 = 0x10
    NSMutableSet *_modifiedVariables;	// 24 = 0x18
    _CPLPrequeliteScopeBase *_base;	// 32 = 0x20
    CPLPrequeliteVariable *_flagsVar;	// 40 = 0x28
    CPLPrequeliteVariable *_disabledDateVar;	// 48 = 0x30
    CPLPrequeliteVariable *_deleteDateVar;	// 56 = 0x38
    CPLPrequeliteVariable *_libraryInfoVar;	// 64 = 0x40
    CPLPrequeliteVariable *_scopeChangeVar;	// 72 = 0x48
    CPLPrequeliteVariable *_lastLibraryInfoUpdateVar;	// 80 = 0x50
    CPLPrequeliteVariable *_transportScopeVar;	// 88 = 0x58
    _CPLPrequeliteScopeSyncState *_syncState;	// 96 = 0x60
    CPLPrequeliteVariable *_estimatedSizeVar;	// 104 = 0x68
    CPLPrequeliteVariable *_estimatedAssetCountVar;	// 112 = 0x70
    CPLPrequeliteVariable *_initialSyncDateVar;	// 120 = 0x78
    CPLPrequeliteTodoVar *_pushToTransportTodoVar;	// 128 = 0x80
    CPLPrequeliteTodoVar *_pullFromTransportTodoVar;	// 136 = 0x88
    CPLPrequeliteTodoVar *_clientNeedsToPullTodoVar;	// 144 = 0x90
    CPLPrequeliteTodoVar *_updateTransportTodoVar;	// 152 = 0x98
    CPLPrequeliteVariable *_stagedScopeIdentifierVar;	// 160 = 0xa0
    CPLPrequeliteVariableGroup *_all;	// 168 = 0xa8
    CPLPrequeliteVariableGroup *_libraryStateGroup;	// 176 = 0xb0
    id <PQLInjecting> _injectionForScopesAllowingPullFromTransport;	// 184 = 0xb8
    Class _transportGroupClass;	// 192 = 0xc0
    _Bool _noteEndOfResetIfNecessary;	// 200 = 0xc8
    CPLPrequeliteSynthesizedVariable *_hasStagedSyncAnchorsVar;	// 208 = 0xd0
}

+ (id)_supportedScopeTypesWithOptions:(unsigned long long)arg1;	// IMP=0x002000000001c5a1
+ (_Bool)_scopeType:(long long)arg1 supportsClientSyncWithOptions:(unsigned long long)arg2;	// IMP=0x001000000001c414
- (void).cxx_destruct;	// IMP=0x002000000002a22e
- (void)writeTransactionDidFail;	// IMP=0x001000000002a087
- (void)writeTransactionDidSucceed;	// IMP=0x001000000002a017
- (_Bool)bumpPullFromTransportExpirationIntervalWithError:(id *)arg1;	// IMP=0x0010000000029dbd
- (id)filterForExcludedScopeIdentifiers:(id)arg1;	// IMP=0x0010000000029c5c
- (id)filterForIncludedScopeIdentifiers:(id)arg1;	// IMP=0x0010000000029acb
- (id)_injectionForFilter:(id)arg1;	// IMP=0x001000000002997f
- (void)_getLocalIndexes:(id *)arg1 cloudIndexes:(id *)arg2 forScopeIdentifiers:(id)arg3;	// IMP=0x001000000002972d
- (void)_noteEndOfResetIfNecessary;	// IMP=0x00100000000295d3
- (unsigned long long)estimatedAssetCountForScope:(id)arg1;	// IMP=0x0010000000029581
- (unsigned long long)estimatedSizeForScope:(id)arg1;	// IMP=0x001000000002952f
- (_Bool)storeEstimatedSize:(unsigned long long)arg1 estimatedAssetCount:(unsigned long long)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000029428
- (_Bool)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000029372
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)arg1;	// IMP=0x00100000000292cf
- (id)lastDateOfCompletedPullFromTransportForScope:(id)arg1;	// IMP=0x00100000000292b2
- (_Bool)storeLastDateOfClearedPushRepository:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002920f
- (id)lastDateOfClearedPushRepositoryForScope:(id)arg1;	// IMP=0x001000000002917e
- (_Bool)allActiveScopesHasFinishedSyncs;	// IMP=0x0010000000029085
- (_Bool)hasFinishedAFullSyncForScope:(id)arg1;	// IMP=0x0010000000028feb
- (id)initialSyncDateForScope:(id)arg1;	// IMP=0x0010000000028fcb
- (id)initialSyncAnchorForScope:(id)arg1;	// IMP=0x0010000000028f3a
- (_Bool)setInitialSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000028e97
- (_Bool)setHasFetchedInitialSyncAnchor:(_Bool)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000028de1
- (_Bool)hasScopeFetchedInitialSyncAnchor:(id)arg1;	// IMP=0x0010000000028d3e
- (_Bool)setClassNameOfRecordsForInitialQuery:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000028c9b
- (id)classNameOfRecordsForInitialQueryForScope:(id)arg1;	// IMP=0x0010000000028c0a
- (_Bool)storeTransientSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000028b67
- (id)transientSyncAnchorForScope:(id)arg1;	// IMP=0x0010000000028ad6
- (_Bool)discardStagedSyncAnchorWithScopeFilter:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000028990
- (_Bool)discardStagedSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000288f3
@property(readonly, nonatomic) _Bool hasStagedSyncAnchors;
- (_Bool)hasStagedSyncAnchorForScope:(id)arg1;	// IMP=0x00100000000286b6
- (_Bool)commitSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002819c
- (void)_markFirstSyncOfPrimaryAsSuccessfulWithScope:(id)arg1;	// IMP=0x0010000000027e96
- (_Bool)resetSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000027d0a
- (_Bool)setSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000278f1
- (id)syncAnchorForScope:(id)arg1 isCommitted:(_Bool *)arg2;	// IMP=0x001000000002780b
- (_Bool)setDidDropSomeRecordsForScope:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002777e
- (_Bool)didDropSomeRecordsForScope:(id)arg1;	// IMP=0x00100000000276db
- (_Bool)storeDownloadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000027638
- (id)downloadTransportGroupForScope:(id)arg1;	// IMP=0x00100000000275a7
- (_Bool)storeUploadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000027504
- (id)uploadTransportGroupForScope:(id)arg1;	// IMP=0x0010000000027473
- (_Bool)resetSyncStateForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000027235
- (void)_discardCachedValuesForGroup:(id)arg1;	// IMP=0x0010000000027105
- (_Bool)_storeTransportGroup:(id)arg1 inColumnVariable:(id)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000026f76
- (id)_transportGroupForColumnVariable:(id)arg1 forScope:(id)arg2;	// IMP=0x0010000000026ea1
- (Class)_transportGroupClass;	// IMP=0x0010000000026da3
- (id)lastScopeChangeUpdateDateForScope:(id)arg1;	// IMP=0x0010000000026d83
- (_Bool)storeScopeChange:(id)arg1 forScope:(id)arg2 scopeChangeHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x001000000002687b
- (_Bool)_storeLibraryInfo:(id)arg1 forScope:(id)arg2 libraryInfoHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0010000000026370
- (id)scopeChangeForScope:(id)arg1;	// IMP=0x0010000000025f17
- (id)_libraryInfoForScope:(id)arg1;	// IMP=0x0010000000025e97
- (_Bool)setTransportScope:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000025e74
- (id)transportScopeForScope:(id)arg1;	// IMP=0x0010000000025e54
- (_Bool)setScopeNeedsUpdateFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000025e2f
- (id)_librarySateForScope:(id)arg1;	// IMP=0x0010000000025b5f
- (_Bool)setDeleteDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000025b3c
- (id)deleteDateForScope:(id)arg1;	// IMP=0x0010000000025b1c
- (_Bool)setDisabledDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000025af9
- (id)disabledDateForScope:(id)arg1;	// IMP=0x0010000000025ad9
- (_Bool)updateFlags:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000258a8
- (id)flagsForScope:(id)arg1;	// IMP=0x001000000002581d
- (id)_valueForColumnVariable:(id)arg1 scope:(id)arg2;	// IMP=0x00100000000255ee
- (_Bool)_storeValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 error:(id *)arg4;	// IMP=0x001000000002540b
- (void)_cacheValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3;	// IMP=0x0010000000025356
- (_Bool)storeScopeListSyncAnchor:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000025151
- (id)scopeListSyncAnchor;	// IMP=0x0010000000025134
- (long long)busyStateForScope:(id)arg1;	// IMP=0x0010000000025091
- (_Bool)storeBusyState:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000024fdb
- (_Bool)storeRewindSyncAnchors:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000024f1c
- (MISSING_TYPE *)rewindSyncAnchorsForScope: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000024d0c
- (id)stagingScopeForScope:(id)arg1;	// IMP=0x0010000000024c5f
- (id)primaryScope;	// IMP=0x0010000000024bef
- (id)validCloudIndexes;	// IMP=0x00100000000249b2
- (id)validLocalIndexes;	// IMP=0x0010000000024775
- (id)scopeWithStableIndex:(long long)arg1;	// IMP=0x0010000000024703
- (id)scopeWithCloudIndex:(long long)arg1;	// IMP=0x0010000000024691
- (id)scopeWithLocalIndex:(long long)arg1;	// IMP=0x001000000002461f
- (id)scopeWithIdentifier:(id)arg1;	// IMP=0x0010000000024595
- (id)_scopeWithQuery:(id)arg1;	// IMP=0x00100000000243b5
- (_Bool)bumpStableIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000024255
- (_Bool)bumpCloudIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000240f5
- (_Bool)bumpLocalIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000023f95
- (long long)_bumpIndexWithError:(id *)arg1;	// IMP=0x0010000000023ed3
- (_Bool)setScopeType:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000023b27
- (_Bool)deleteScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000239d1
- (id)addScopeWithIdentifier:(id)arg1 scopeType:(long long)arg2 error:(id *)arg3;	// IMP=0x0010000000023857
- (_Bool)doesScopeNeedToUpdateTransport:(id)arg1;	// IMP=0x001000000002370c
- (_Bool)setScope:(id)arg1 hasCompletedTransportUpdate:(long long)arg2 error:(id *)arg3;	// IMP=0x00100000000236ec
- (long long)transportUpdateTaskForScope:(id)arg1;	// IMP=0x00100000000236cf
- (_Bool)setScopeNeedsToUpdateTransport:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000236af
- (_Bool)hasScopesNeedingToUpdateTransport;	// IMP=0x00100000000235d0
- (id)enumeratorForScopesNeedingToUpdateTransport;	// IMP=0x00100000000233c8
- (_Bool)doesScopeSupportToBePulledByClient:(id)arg1;	// IMP=0x00100000000232cf
- (_Bool)doesScopeNeedToBePulledByClient:(id)arg1;	// IMP=0x001000000002310b
- (_Bool)setScopeNeedsToBePulledByClient:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000230eb
- (_Bool)setScope:(id)arg1 hasCompletedClientNeedsToPullTask:(long long)arg2 error:(id *)arg3;	// IMP=0x00100000000230cb
- (long long)clientNeedsToPullTaskForScope:(id)arg1;	// IMP=0x00100000000230ae
- (id)enumeratorForScopesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)arg1;	// IMP=0x0010000000022e3a
- (_Bool)doScopesNeedMetadataSync:(id)arg1;	// IMP=0x0010000000022c61
- (id)enumeratorForScopesWithMingling;	// IMP=0x0010000000022985
- (_Bool)setPullFromTransportExpirationInterval:(double)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000228c5
- (_Bool)doesScopeNeedToPullChangesFromTransport:(id)arg1;	// IMP=0x001000000002275b
- (_Bool)setScope:(id)arg1 hasCompletedPullFromTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x001000000002273b
- (long long)pullFromTransportTaskForScope:(id)arg1;	// IMP=0x001000000002271e
- (_Bool)setAllScopesHasChangesToPullFromTransportWithError:(id *)arg1;	// IMP=0x0010000000022617
- (_Bool)setScopeHasChangesToPullFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000225f7
- (_Bool)hasScopesNeedingToPullChangesFromTransport;	// IMP=0x00100000000224ed
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;	// IMP=0x00100000000221e4
- (id)_injectionForScopesAllowingPullFromTransport;	// IMP=0x001000000002216b
- (_Bool)doesScopeNeedToPushChangesToTransport:(id)arg1;	// IMP=0x0010000000022001
- (_Bool)setScope:(id)arg1 hasCompletedPushToTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x0010000000021fe1
- (long long)pushToTransportTaskForScope:(id)arg1;	// IMP=0x0010000000021fc4
- (_Bool)setScopeHasChangesToPushToTransport:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000021fa4
- (_Bool)hasScopesNeedingToPushChangesToTransport;	// IMP=0x0010000000021eac
- (id)enumeratorForScopesNeedingToPushChangesToTransport;	// IMP=0x0010000000021b82
- (_Bool)hasScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x0010000000021a83
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x0010000000021750
- (_Bool)forcePushToTransportForActiveScopesWithError:(id *)arg1;	// IMP=0x0010000000021596
- (_Bool)forceIdentifyUknownScopesWithError:(id *)arg1;	// IMP=0x00100000000213cd
- (id)enumeratorForDeletedStagedScopes;	// IMP=0x00100000000211dd
- (id)enumeratorForScopesNeedingUpdateFromTransport;	// IMP=0x0010000000020ef7
- (id)enumeratorForScopesIncludeInactive:(_Bool)arg1;	// IMP=0x0010000000020c1b
- (_Bool)_setScope:(id)arg1 hasCompletedTaskItem:(long long)arg2 task:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000020a88
- (id)_taskItemCompletionDateForScope:(id)arg1 task:(id)arg2;	// IMP=0x00100000000209bf
- (long long)_taskItemForScope:(id)arg1 task:(id)arg2;	// IMP=0x001000000002083f
- (_Bool)_setScope:(id)arg1 hasTaskTodo:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000206a9
- (_Bool)fixStorageAfterAnyVersionChange;	// IMP=0x00100000000205ec
- (void)_updateStatusForMainScopeChange:(id)arg1;	// IMP=0x00100000000204e6
- (id)statusDictionary;	// IMP=0x00100000000204d9
- (id)recordsDesignation;	// IMP=0x00100000000204cc
- (void)_fillScopeTypeOrder:(long long [7])arg1 withOrderOfScopeTypes:(id)arg2 name:(id)arg3;	// IMP=0x00100000000203f4
- (_Bool)openWithError:(id *)arg1;	// IMP=0x00100000000202d7
- (_Bool)upgradeScopesWithNewLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x001000000001fa56
- (_Bool)upgradeStorageToVersion:(long long)arg1;	// IMP=0x001000000001dc5b
- (_Bool)_transferValueFromVariable:(id)arg1 type:(id)arg2 ofStorage:(id)arg3 toColumnVariable:(id)arg4 transformer:(CDUnknownBlockType)arg5;	// IMP=0x001000000001d6eb
- (_Bool)initializeStorage;	// IMP=0x001000000001d4da
- (_Bool)_createInitialPrimarySyncScope;	// IMP=0x001000000001d394
- (_Bool)_addScope:(id)arg1 error:(id *)arg2;	// IMP=0x001000000001d036
- (double)_minimalPullFromTranportExpirationInterval;	// IMP=0x001000000001cfdb
- (_Bool)_scopeTypeSupportsClientSync:(long long)arg1;	// IMP=0x001000000001cf67
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x001000000001c6a9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isAlive;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool shouldIncludeInStatus;
@property(readonly) Class superclass;

@end

