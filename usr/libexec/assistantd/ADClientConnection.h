//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFInstanceContext, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSMutableOrderedSet, NSString, NSUUID, NSXPCConnection;
@protocol AFBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <AFBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    NSMutableOrderedSet *_audioSessionAssertions;	// 144 = 0x90
    NSMutableOrderedSet *_speechCapturingContexts;	// 152 = 0x98
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 160 = 0xa0
    AFInstanceContext *_instanceContext;	// 168 = 0xa8
    _Bool adSpeechSessionEnded;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0020000000292f53
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x0010000000292e6a
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0010000000292d6d
- (oneway void)emitHomeMetricInvocationEvent;	// IMP=0x0010000000292d29
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x0010000000292d23
- (oneway void)_refreshAssistantValidation;	// IMP=0x0010000000292cdf
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x0010000000292c5e
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000292be8
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000292bdd
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x0010000000292b6e
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000002929e0
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x00100000002928f6
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000292480
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000291f98
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000291f83
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000291d96
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000291d20
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x0010000000291ccd
- (oneway void)reportIssueForType:(id)arg1 subtype:(id)arg2 context:(id)arg3;	// IMP=0x0010000000291b79
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 subtype:(id)arg3 context:(id)arg4;	// IMP=0x0010000000291a76
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x0010000000291998
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x0010000000291922
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x00100000002918aa
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x0010000000291810
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000029175e
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000291425
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000290f95
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000290f0b
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x0010000000290ec7
- (oneway void)recordCancellationMetrics;	// IMP=0x0010000000290e83
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x0010000000290e0d
- (oneway void)telephonyRequestCompleted;	// IMP=0x0010000000290dc9
- (oneway void)prepareForPhoneCall;	// IMP=0x0010000000290d85
- (oneway void)setAlertContextDirty;	// IMP=0x0010000000290d41
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x0010000000290cb7
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x0010000000290ca0
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x0010000000290c07
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x0010000000290b91
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x0010000000290b1b
- (oneway void)rollbackClearContext;	// IMP=0x0010000000290a4b
- (oneway void)clearContext;	// IMP=0x0010000000290968
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000002908c7
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000002907c1
- (oneway void)requestShouldSpeakStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000290769
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x0010000000290657
- (oneway void)cancelSpeech;	// IMP=0x0010000000290570
- (oneway void)rollbackRequest;	// IMP=0x0010000000290499
- (oneway void)cancelRequestForReason:(long long)arg1 withError:(id)arg2;	// IMP=0x0010000000290322
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x0010000000290213
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000029015f
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000002900ab
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x0010000000290048
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 sessionUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000028fc97
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000028fa8f
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000028f8e7
- (oneway void)willPresentUsefulUserResultAtDate:(id)arg1;	// IMP=0x001000000028f7b5
- (oneway void)endSession;	// IMP=0x001000000028f603
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x001000000028f4e8
- (oneway void)didDismissUI;	// IMP=0x001000000028f37e
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000028f146
- (oneway void)setModesConfiguration:(id)arg1;	// IMP=0x001000000028f0d0
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x001000000028f07d
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x001000000028f025
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x001000000028efe1
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000028ef16
- (oneway void)forceAudioSessionActiveWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000028ed15
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000028ec97
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x001000000028ec18
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x001000000028eb5d
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x001000000028ea80
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x001000000028e17f
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x001000000028e07a
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x001000000028df6e
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x001000000028de92
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x001000000028ddb6
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerResetNotification:(id)arg2;	// IMP=0x001000000028dc19
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerLostNotification:(id)arg2;	// IMP=0x001000000028daec
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000028d94f
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000028d822
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionRouteChangeNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000028d779
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionInterruptionNotificationWithUserInfo:(id)arg2;	// IMP=0x001000000028d530
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x001000000028d4a7
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x001000000028d44a
- (_Bool)adWaitingForAudioFile;	// IMP=0x001000000028d442
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000028d0dc
- (void)adSpeechRecordingDidDetectStartPointWithContext:(id)arg1;	// IMP=0x001000000028ce1e
- (void)adSpeechLocalRecognitionDidSucceedWithSessionUUID:(id)arg1;	// IMP=0x001000000028ce18
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x001000000028cd13
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x001000000028cc37
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 utterances:(id)arg2 nluResult:(id)arg3 sessionUUID:(id)arg4 refId:(id)arg5;	// IMP=0x001000000028cc31
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 nluResult:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000028cc2b
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x001000000028cab8
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x001000000028c945
- (void)adSpeechRecordingWillStopWithSignpostID:(unsigned long long)arg1;	// IMP=0x001000000028c6ef
- (void)adSpeechRecordingDidFail:(id)arg1 context:(id)arg2;	// IMP=0x001000000028c325
- (void)adSpeechRecordingDidCancelWithContext:(id)arg1;	// IMP=0x001000000028bfb5
- (void)adSpeechRecordingDidEndWithContext:(id)arg1;	// IMP=0x001000000028bc45
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 context:(id)arg6;	// IMP=0x001000000028b880
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionRequestUUID:(id)arg4 dictationOptions:(id)arg5 context:(id)arg6;	// IMP=0x001000000028b42a
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 context:(id)arg2;	// IMP=0x001000000028b0e6
- (void)_updateShouldSpeak;	// IMP=0x001000000028afc7
- (_Bool)_shouldSpeak;	// IMP=0x001000000028afa4
- (void)_computeShouldSpeak;	// IMP=0x001000000028add8
- (void)_unregisterForRingerStateNotification;	// IMP=0x001000000028adb4
- (void)_registerForRingerStateNotification;	// IMP=0x001000000028acfb
- (void);	// IMP=0x001000000028acb8
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x001000000028aca3
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x001000000028ac8a
- (void)adFailedToLaunchAppWithBundleIdentifier:(id)arg1;	// IMP=0x001000000028abae
- (void)adWillProcessAppLaunchWithBundleIdentifier:(id)arg1;	// IMP=0x001000000028aad2
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x001000000028aa32
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x001000000028a992
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000028a78e
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x001000000028a6ee
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x001000000028a683
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x001000000028a5a7
- (void)adInvalidateCurrentUserActivity;	// IMP=0x001000000028a51b
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x001000000028a40f
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x001000000028a36f
- (void)adMusicWasDetected;	// IMP=0x001000000028a2e3
- (void)adAcousticIDRequestWillStart;	// IMP=0x001000000028a257
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x001000000028a1b7
- (void)adRequestRequestedDismissAssistantWithReason:(long long)arg1;	// IMP=0x001000000028a117
- (void)adRequestRequestedDismissAssistant;	// IMP=0x001000000028a08b
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x0010000000289f7f
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x0010000000289ea3
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x0010000000289d77
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x0010000000289c78
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0010000000289ae0
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000289903
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000028970d
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000002894e0
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x00100000002893da
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x0010000000289029
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x0010000000288e06
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000288993
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x00100000002888bc
- (void)_removeAllAudioSessionAssertionsForReason:(id)arg1;	// IMP=0x00100000002883a3
- (void)_addAudioSessionAssertion:(id)arg1;	// IMP=0x00100000002882a0
- (void)_removeAllSpeechCapturingContextsForReason:(id)arg1;	// IMP=0x0010000000287ef3
- (void)_addSpeechCapturingContext:(id)arg1;	// IMP=0x0010000000287df0
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x0010000000287ce4
- (void)_speechRecordingDidFinish;	// IMP=0x0010000000287c52
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x00100000002879fa
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000287962
- (id)_serviceDelegate;	// IMP=0x001000000028794c
- (void)connectionDisconnected;	// IMP=0x001000000028761c
- (void)dealloc;	// IMP=0x00100000002874de
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x00100000002870a9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

