//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_source;

@interface SDAutoUnlockAKSManager : NSObject
{
    _Bool _wristDetectDisabled;	// 8 = 0x8
    _Bool _autoUnlockDisabledDueToManagement;	// 9 = 0x9
    _Bool _waitingForUnlock;	// 10 = 0xa
    _Bool _t208Machine;	// 11 = 0xb
    struct os_unfair_lock_s _cachedSessionKeysLock;	// 12 = 0xc
    NSString *_localDeviceID;	// 16 = 0x10
    NSString *_state;	// 24 = 0x18
    NSData *_localAttestedLTK;	// 32 = 0x20
    NSData *_localLTK;	// 40 = 0x28
    NSString *_altDSID;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_keybagAssertionTimer;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_waitingForUnlockTimer;	// 64 = 0x40
    NSMutableDictionary *_remoteLTKs;	// 72 = 0x48
    NSMutableDictionary *_cachedSessions;	// 80 = 0x50
    NSMutableDictionary *_cachedSessionKeys;	// 88 = 0x58
    NSMutableDictionary *_watchIDsToPairingRecords;	// 96 = 0x60
    NSMutableDictionary *_preferredRemoteLTKForDeviceID;	// 104 = 0x68
    NSMutableArray *_watchIDsMissingSessionKey;	// 112 = 0x70
    NSString *;	// 120 = 0x78
    NSString *_watchIDsToPairingRecordsStorageFilePath;	// 128 = 0x80
    NSString *_companionIDStorageFilePath;	// 136 = 0x88
    NSString *_watchIDToCompanionIDStorageFilePath;	// 144 = 0x90
}

+ (_Bool)useKeychainForLTKSyncing;	// IMP=0x00200000000c1aaf
+ (id)sharedManager;	// IMP=0x00100000000b58b6
- (void).cxx_destruct;	// IMP=0x00200000000c47ec
@property(readonly, nonatomic) struct os_unfair_lock_s cachedSessionKeysLock; // @synthesize cachedSessionKeysLock=_cachedSessionKeysLock;
@property(copy, nonatomic) NSString *watchIDToCompanionIDStorageFilePath; // @synthesize watchIDToCompanionIDStorageFilePath=_watchIDToCompanionIDStorageFilePath;
@property(copy, nonatomic) NSString *companionIDStorageFilePath; // @synthesize companionIDStorageFilePath=_companionIDStorageFilePath;
@property(copy, nonatomic) NSString *watchIDsToPairingRecordsStorageFilePath; // @synthesize watchIDsToPairingRecordsStorageFilePath=_watchIDsToPairingRecordsStorageFilePath;
@property(copy, nonatomic) NSString *remoteLTKStorageFilePath; // @synthesize remoteLTKStorageFilePath=_remoteLTKStorageFilePath;
@property(retain, nonatomic) NSMutableArray *watchIDsMissingSessionKey; // @synthesize watchIDsMissingSessionKey=_watchIDsMissingSessionKey;
@property(retain, nonatomic) NSMutableDictionary *preferredRemoteLTKForDeviceID; // @synthesize preferredRemoteLTKForDeviceID=_preferredRemoteLTKForDeviceID;
@property(retain, nonatomic) NSMutableDictionary *watchIDsToPairingRecords; // @synthesize watchIDsToPairingRecords=_watchIDsToPairingRecords;
@property(retain, nonatomic) NSMutableDictionary *cachedSessionKeys; // @synthesize cachedSessionKeys=_cachedSessionKeys;
@property(retain, nonatomic) NSMutableDictionary *cachedSessions; // @synthesize cachedSessions=_cachedSessions;
@property(retain, nonatomic) NSMutableDictionary *remoteLTKs; // @synthesize remoteLTKs=_remoteLTKs;
@property(retain) NSObject<OS_dispatch_source> *waitingForUnlockTimer; // @synthesize waitingForUnlockTimer=_waitingForUnlockTimer;
@property(retain) NSObject<OS_dispatch_source> *keybagAssertionTimer; // @synthesize keybagAssertionTimer=_keybagAssertionTimer;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSData *localLTK; // @synthesize localLTK=_localLTK;
@property(nonatomic) _Bool t208Machine; // @synthesize t208Machine=_t208Machine;
@property(nonatomic) _Bool waitingForUnlock; // @synthesize waitingForUnlock=_waitingForUnlock;
@property(nonatomic) _Bool autoUnlockDisabledDueToManagement; // @synthesize autoUnlockDisabledDueToManagement=_autoUnlockDisabledDueToManagement;
@property(copy, nonatomic) NSData *localAttestedLTK; // @synthesize localAttestedLTK=_localAttestedLTK;
@property(nonatomic) _Bool wristDetectDisabled; // @synthesize wristDetectDisabled=_wristDetectDisabled;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *localDeviceID; // @synthesize localDeviceID=_localDeviceID;
- (void)updateDynamicStoreEnabled;	// IMP=0x00100000000c45f8
- (id)baseDictionary;	// IMP=0x00100000000c4588
- (id)baseLocalKeysDictionary;	// IMP=0x00100000000c453b
- (id)baseLocalKeysDictionaryForDevice:(id)arg1 type:(id)arg2;	// IMP=0x00100000000c4489
- (id)baseModernSyncedDictionary;	// IMP=0x00100000000c4416
- (id)attestedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c4370
- (id)modernSyncedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c42cb
- (id)baseSyncedDictionary;	// IMP=0x00100000000c4255
- (id)syncedDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c41b0
- (id)baseRangingDictionary;	// IMP=0x00100000000c413d
- (id)baseRangingDictionaryForDevice:(id)arg1;	// IMP=0x00100000000c40c5
- (id)keychainDataForQuery:(id)arg1;	// IMP=0x00100000000c3f9b
- (void)deleteAllRangingKeys;	// IMP=0x00100000000c3dd3
- (void)deleteRangingKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c3c39
- (_Bool)storeRangingKey:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000000c39d1
- (id)rangingKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c3972
- (id)sessionKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c380d
- (_Bool)sessionKeyExistsForDeviceID:(id)arg1;	// IMP=0x00100000000c37da
- (id)deriveKeyFromSharedSecret:(id)arg1;	// IMP=0x00100000000c36cb
- (void)updateSessionKeys;	// IMP=0x00100000000c3363
- (void)updateRangingKeysIfNeccesary;	// IMP=0x00100000000c2fd2
- (void)deleteLocalAttestedLTK;	// IMP=0x00100000000c2ede
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2 attested:(_Bool)arg3;	// IMP=0x00100000000c2e04
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000c2def
- (id)ltkInfoForDeviceID:(id)arg1;	// IMP=0x00100000000c2ddb
- (id)longTermKeyIDForDeviceID:(id)arg1;	// IMP=0x00100000000c2d33
- (id)longTermKeyForDevice:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000c2ce3
- (id)anyLongTermKeyForDeviceID:(id)arg1;	// IMP=0x00100000000c2c69
- (void)deleteRemoteLongTermKeyForDeviceID:(id)arg1 modern:(_Bool)arg2 tombstone:(_Bool)arg3;	// IMP=0x00100000000c2b8e
- (_Bool)storeAttestedLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x00100000000c2906
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3 modern:(_Bool)arg4;	// IMP=0x00100000000c265c
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x00100000000c25b6
- (void)deleteAllEscrowSecrets;	// IMP=0x00100000000c24ed
- (void)deleteEscrowSecretForDeviceID:(id)arg1;	// IMP=0x00100000000c23d6
- (id)escrowSecretCreationDateForDeviceID:(id)arg1;	// IMP=0x00100000000c22a1
- (_Bool)escrowSecretExistsForDevice:(id)arg1;	// IMP=0x00100000000c21ec
- (_Bool)storeEscrowSecret:(id)arg1 pairingID:(id)arg2 deviceID:(id)arg3;	// IMP=0x00100000000c2078
- (id)keyPairingIDForDeviceID:(id)arg1;	// IMP=0x00100000000c1fc0
- (id)escrowSecretForDevice:(id)arg1;	// IMP=0x00100000000c1c2d
- (_Bool)storeKeychainItemWithAttributeDictionary:(id)arg1 updateDictionary:(id)arg2 addDictionary:(id)arg3;	// IMP=0x00100000000c1ab7
- (id)autoUnlockFolderPath;	// IMP=0x00100000000c19ab
- (id)loadCompanionIDs;	// IMP=0x00100000000c15ce
- (void)deleteLegacyCompanionIDs;	// IMP=0x00100000000c14b2
- (id)migrateLegacyCompanionIDs:(id)arg1;	// IMP=0x00100000000c13bb
- (id)loadLegacyWatchIDToCompanionIDMapping;	// IMP=0x00100000000c10cd
- (void)deleteLegacyWatchToCompanionIDs;	// IMP=0x00100000000c0fb1
- (void)migrateLegacyWatchIDToCompanionIDs;	// IMP=0x00100000000c0e5c
- (void)loadWatchIDsToPairingRecords;	// IMP=0x00100000000c0dce
- (void)saveWatchIDsToPairingRecords;	// IMP=0x00100000000c0c16
- (void)removePairingRecordForWatchID:(id)arg1;	// IMP=0x00100000000c0b97
- (void)removePairingIDForWatchID:(id)arg1;	// IMP=0x00100000000c0a30
- (id)pairingIDForWatchID:(id)arg1;	// IMP=0x00100000000c0985
- (void)setPairingID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x00100000000c07f6
- (void)removeCompanionIDForWatchID:(id)arg1;	// IMP=0x00100000000c068f
- (id)companionIDForWatchID:(id)arg1;	// IMP=0x00100000000c05e4
- (void)setCompanionID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x00100000000c0455
- (id)allPairedWatchDeviceIDs;	// IMP=0x00100000000c0405
- (void)reloadPairingRecordsIfNeeded;	// IMP=0x00100000000c0368
- (void)loadRemoteLTKs;	// IMP=0x00100000000bfe59
- (void)loadRemoteLTKsIfNeeded;	// IMP=0x00100000000bfe10
- (void)saveRemoteLTKs;	// IMP=0x00100000000bfc58
- (void)clearRemoteLTKs;	// IMP=0x00100000000bfb82
- (void)removeRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bfa81
- (void)addRemoteLTK:(id)arg1 ltkHash:(id)arg2 ltkModDate:(id)arg3 modernLTK:(id)arg4 modernLTKHash:(id)arg5 modernLTKModeDate:(id)arg6 deviceID:(id)arg7;	// IMP=0x00100000000bf7b5
- (_Bool)disablePairingWithKeyDevice:(id)arg1;	// IMP=0x00100000000bf6de
- (_Bool)ltkExistsForKeyDevice:(id)arg1 updateLTKs:(_Bool)arg2;	// IMP=0x00100000000bf576
- (_Bool)ltkExistsForKeyDevice:(id)arg1;	// IMP=0x00100000000bf562
- (void)removeAllRemoteLTKsOnSignOut;	// IMP=0x00100000000bf28c
- (void)disablePairingForAllKeyDevices;	// IMP=0x00100000000befa2
- (void)deleteEscrowSecretForPhones;	// IMP=0x00100000000bec24
- (void)deleteEscrowSecretForAllDevices;	// IMP=0x00100000000be843
- (void)handleRequiredStateDisabled;	// IMP=0x00100000000be83d
- (_Bool)deviceEnabledAsKey:(id)arg1;	// IMP=0x00100000000be770
- (_Bool)deviceEnabledAsKeyForAnyMac;	// IMP=0x00100000000be4c2
- (_Bool)deviceEnabledAsKeyForAnyDevice;	// IMP=0x00100000000be1b0
- (_Bool)deviceEnabledAsKeyForAnyIDSMac;	// IMP=0x00100000000bdf02
- (_Bool)deviceEnabledAsKeyForAnyIDSDevice;	// IMP=0x00100000000bdbf0
- (_Bool)localDeviceEnabledAsKeyForMac;	// IMP=0x00100000000bdb7e
- (_Bool)localDeviceEnabledAsKey;	// IMP=0x00100000000bdb0c
- (void)transport:(id)arg1 didReceivePayload:(id)arg2 type:(unsigned short)arg3 deviceID:(id)arg4;	// IMP=0x00100000000bda37
- (void)handleLTKResponse:(id)arg1;	// IMP=0x00100000000bda31
- (void)invalidateWaitingForUnlockTimer;	// IMP=0x00100000000bd95b
- (void)restartWaitingForUnlockTimer;	// IMP=0x00100000000bd765
- (void)restartKeybagAssertionTimer;	// IMP=0x00100000000bd571
- (void)releaseKeybagAssertion;	// IMP=0x00100000000bd515
- (void)takeMobileKeybagAssertion;	// IMP=0x00100000000bd4b9
- (_Bool)pendingReceiveForPeer:(id)arg1;	// IMP=0x00100000000bd4b1
- (_Bool)pendingSendForPeer:(id)arg1;	// IMP=0x00100000000bd4a9
- (_Bool)keychainNeedsSyncingForRequest:(id)arg1;	// IMP=0x00100000000bcfe0
- (id)ltksForRequest:(id)arg1;	// IMP=0x00100000000bc9f1
- (void)handleLTKRequest:(id)arg1;	// IMP=0x00100000000bc9eb
- (void)sendLTKResponseWithPayload:(id)arg1 viewState:(id)arg2 needsUnlock:(id)arg3 currentlySyncing:(id)arg4;	// IMP=0x00100000000bc9e5
- (void)fetchLTKsFromCompanionForDeviceID:(id)arg1 needsLTK:(_Bool)arg2 remoteNeedsLTK:(_Bool)arg3 checkViewState:(_Bool)arg4;	// IMP=0x00100000000bc9df
- (void)fetchLTKsFromCompanion:(_Bool)arg1;	// IMP=0x00100000000bc9c3
- (void)updatePreferredRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bc5a1
- (id)remoteLTKList;	// IMP=0x00100000000bc398
- (id)remoteLTKEntryForDeviceID:(id)arg1;	// IMP=0x00100000000bc315
- (id)remoteLTKHashForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000bc2a4
- (_Bool)hashMatchesAnyRemoteLTKForDeviceID:(id)arg1 ltkHash:(id)arg2 isPreferred:(_Bool *)arg3;	// IMP=0x00100000000bbf3e
- (id)remoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bbe61
- (id)allRemoteLTKData;	// IMP=0x00100000000bbd38
- (void)signAndStoreRemoteLTK:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x00100000000bb8f6
- (id);	// IMP=0x00100000000bb7a5
- (id)modernSignedDevices;	// IMP=0x00100000000bb654
- (id)modificationDataForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x00100000000bb4c7
- (id)keychainDevices:(_Bool)arg1;	// IMP=0x00100000000bb211
- (id)allKeychainDevices;	// IMP=0x00100000000bb1fd
- (_Bool)signLTK:(id)arg1 ltkModDate:(id)arg2 modernLTK:(id)arg3 modernLTKModDate:(id)arg4 deviceID:(id)arg5;	// IMP=0x00100000000bae1d
- (_Bool)signLTK:(id)arg1 modernLTK:(id)arg2 forDeviceID:(id)arg3;	// IMP=0x00100000000badf3
- (_Bool)signLTKsForDeviceID:(id)arg1;	// IMP=0x00100000000bad4f
- (void)resignRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bad3d
- (void)checkRemoteLTKForDeviceID:(id)arg1;	// IMP=0x00100000000bab26
- (void)checkRemoteLTKs;	// IMP=0x00100000000bab20
- (void)updateRemoteLTKs;	// IMP=0x00100000000bab0a
- (void)updateLTKsForDeviceID:(id)arg1 staleRemoteLTK:(_Bool)arg2;	// IMP=0x00100000000ba286
- (void)generateLocalAttestedLTKIfNeccessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000000ba1eb
- (int)ltkSyncStatusForDeviceID:(id)arg1 hash:(id)arg2 modern:(_Bool)arg3;	// IMP=0x00100000000ba070
- (_Bool)deviceIsLocalDevice:(id)arg1;	// IMP=0x00100000000b9ff9
- (long long)keyClassForDeviceID:(id)arg1;	// IMP=0x00100000000b9f17
- (long long)ltkKeyClass;	// IMP=0x00100000000b9f0c
- (void)updateLocalLTKForSignout;	// IMP=0x00100000000b9dbc
- (id)ltkHashForLocalLTK;	// IMP=0x00100000000b9d3c
- (void)checkLocalAttestedLTK;	// IMP=0x00100000000b9d36
- (void)checkLocalLTK;	// IMP=0x00100000000b9584
- (void)generateLocalLTKWithAttestation:(_Bool)arg1 forceDCRTRetrievalWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000b8f75
- (void)generateLocalLTKWithAttestation:(_Bool)arg1;	// IMP=0x00100000000b8f61
- (_Bool)loadLocalAttestedLTKIfNecessary;	// IMP=0x00100000000b8f59
- (_Bool)loadLocalLTK;	// IMP=0x00100000000b89c0
- (id)deviceIDsMissingSessionKey;	// IMP=0x00100000000b8897
- (void)clearAllDeviceIDsMissingSessionKeys;	// IMP=0x00100000000b8771
- (void)removeDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000b862b
- (void)addDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x00100000000b84a7
- (id)decryptMessage:(id)arg1 authTag:(id)arg2 nonce:(id)arg3 bluetoothID:(id)arg4 cachedDevices:(_Bool)arg5 errorCode:(long long *)arg6;	// IMP=0x00100000000b79f6
- (_Bool)encryptMessageData:(id)arg1 deviceID:(id)arg2 encryptedMessage:(id *)arg3 authTag:(id *)arg4 nonce:(id *)arg5;	// IMP=0x00100000000b76ce
- (_Bool)canCreateTokenSessionForDeviceID:(id)arg1;	// IMP=0x00100000000b7684
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 externalACMContext:(id)arg3;	// IMP=0x00100000000b7403
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b73ee
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 usingEscrow:(_Bool)arg3 attestation:(_Bool)arg4;	// IMP=0x00100000000b7030
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b7018
- (id)aksRegistrationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000000b6e7c
- (id)aksPairingSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 errorCode:(long long *)arg3 wantsAttestation:(_Bool)arg4;	// IMP=0x00100000000b6bf5
- (void)consoleUserChanged:(id)arg1;	// IMP=0x00100000000b6ad6
- (void)handleKeyBagLockStateChanged;	// IMP=0x00100000000b6ad0
- (void)screenLockUnlocked:(id)arg1;	// IMP=0x00100000000b6a14
- (void)appleAccountSignedOut:(id)arg1;	// IMP=0x00100000000b695f
- (void)appleAccountSignedIn:(id)arg1;	// IMP=0x00100000000b6903
- (void)deviceFirstUnlocked:(id)arg1;	// IMP=0x00100000000b68f1
- (void)handleManagementChanged:(id)arg1;	// IMP=0x00100000000b68b7
- (void)addObservers;	// IMP=0x00100000000b6784
- (void)loadLocalUniqueIDIfNeeded;	// IMP=0x00100000000b667d
@property(readonly, nonatomic) _Bool viewSyncing;
- (void)updateLocalLTK;	// IMP=0x00100000000b5d5f
- (void)updateLTKs;	// IMP=0x00100000000b5caa
- (void)start;	// IMP=0x00100000000b5add
- (id)init;	// IMP=0x00100000000b590b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

