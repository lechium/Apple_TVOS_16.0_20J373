//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, NSTimer, PBSystemOverlayController, PCPersistentTimer, PCSimpleTimer, TVSBackgroundTask, TVSUIOSUpdateViewController;

@interface PBSoftwareUpdateService : NSObject
{
    _Bool _monitoringEnabled;	// 8 = 0x8
    _Bool _precheckingOSUpdateConditions;	// 9 = 0x9
    TVSBackgroundTask *_osSoftwareUpdateInitialCheckTask;	// 16 = 0x10
    TVSBackgroundTask *_osSoftwareUpdatePeriodicCheckTask;	// 24 = 0x18
    PCSimpleTimer *_darkWakeTimer;	// 32 = 0x20
    PCSimpleTimer *_updateDelayExpirationTimer;	// 40 = 0x28
    NSTimer *_vendorBagRefetchTimeoutTimer;	// 48 = 0x30
    PCPersistentTimer *_dailyReportingTimer;	// 56 = 0x38
    CDUnknownBlockType _osSoftwareUpdateCheckResponse;	// 64 = 0x40
    PBSystemOverlayController *_overlayController;	// 72 = 0x48
    TVSUIOSUpdateViewController *_updateViewController;	// 80 = 0x50
}

+ (id)sharedInstance;	// IMP=0x002000000016d928
+ (id)dependencyDescription;	// IMP=0x001000000016d7b4
- (void).cxx_destruct;	// IMP=0x00200000001750b6
@property(readonly, nonatomic) TVSUIOSUpdateViewController *updateViewController; // @synthesize updateViewController=_updateViewController;
@property(readonly, nonatomic) PBSystemOverlayController *overlayController; // @synthesize overlayController=_overlayController;
@property(copy, nonatomic) CDUnknownBlockType osSoftwareUpdateCheckResponse; // @synthesize osSoftwareUpdateCheckResponse=_osSoftwareUpdateCheckResponse;
@property(retain, nonatomic) PCPersistentTimer *dailyReportingTimer; // @synthesize dailyReportingTimer=_dailyReportingTimer;
@property(nonatomic) __weak NSTimer *vendorBagRefetchTimeoutTimer; // @synthesize vendorBagRefetchTimeoutTimer=_vendorBagRefetchTimeoutTimer;
@property(retain, nonatomic) PCSimpleTimer *updateDelayExpirationTimer; // @synthesize updateDelayExpirationTimer=_updateDelayExpirationTimer;
@property(retain, nonatomic) PCSimpleTimer *darkWakeTimer; // @synthesize darkWakeTimer=_darkWakeTimer;
@property(retain, nonatomic) TVSBackgroundTask *osSoftwareUpdatePeriodicCheckTask; // @synthesize osSoftwareUpdatePeriodicCheckTask=_osSoftwareUpdatePeriodicCheckTask;
@property(retain, nonatomic) TVSBackgroundTask *osSoftwareUpdateInitialCheckTask; // @synthesize osSoftwareUpdateInitialCheckTask=_osSoftwareUpdateInitialCheckTask;
@property(nonatomic) _Bool precheckingOSUpdateConditions; // @synthesize precheckingOSUpdateConditions=_precheckingOSUpdateConditions;
@property(nonatomic) _Bool monitoringEnabled; // @synthesize monitoringEnabled=_monitoringEnabled;
@property(readonly, nonatomic, getter=isPresenting) _Bool presenting;
- (void)osUpdateProcessDidFinishApplyWithData:(id)arg1;	// IMP=0x0010000000174b64
- (void)osUpdateProcessDidUpdateApplyProgressWithData:(id)arg1;	// IMP=0x001000000017489e
- (void)osUpdateProcessDidStartApplyWithData:(id)arg1;	// IMP=0x00100000001745c8
- (void)osUpdateProcessDidStartRedownloadWithData:(id)arg1;	// IMP=0x001000000017441e
- (void)osUpdateProcessDidFinishDownloadWithData:(id)arg1;	// IMP=0x0010000000174088
- (void)osUpdateProcessDidUpdateDownloadProgressWithData:(id)arg1;	// IMP=0x0010000000173eef
- (void)osUpdateProcessDidStartDownloadWithData:(id)arg1;	// IMP=0x0010000000173d45
- (void)osUpdateProcessDidFinishCheckWithData:(id)arg1;	// IMP=0x0010000000173768
- (void)osUpdateProcessDidStartCheckWithData:(id)arg1;	// IMP=0x00100000001735cf
- (void)powerManager:(id)arg1 willWakeSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000017347d
- (void)powerManager:(id)arg1 willSleepSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000173437
- (_Bool)powerManagerAllowSystemToSleep:(id)arg1;	// IMP=0x0010000000173422
- (void)_dismiss;	// IMP=0x00100000001732ad
- (void)_presentWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000173117
- (void)_showOSUpdateUpToDateDialog:(_Bool)arg1;	// IMP=0x0010000000172f3f
- (void)_showOSUpdateError:(id)arg1 inDomain:(id)arg2 description:(id)arg3;	// IMP=0x00100000001728b9
- (void)_promptForApplyConfirmationWithData:(id)arg1 thenDo:(CDUnknownBlockType)arg2;	// IMP=0x0010000000172329
- (void)_showApplyConfirmationDialogIfNeededWithData:(id)arg1;	// IMP=0x0010000000171f44
- (void)_showOSUpdateDownloadAndApplyConfirmationForUpdate:(id)arg1 largeUpdate:(_Bool)arg2 assetIsDownloaded:(_Bool)arg3;	// IMP=0x0010000000171aa3
- (id)_versionForUpdate:(id)arg1;	// IMP=0x0010000000171974
- (void)_handleManagedConfigurationSettingsChangedNotification:(id)arg1;	// IMP=0x0010000000171961
- (void)_handleOSUpdatePrefsDidChange;	// IMP=0x0010000000171931
- (void)_handlePineBoardPrefsDidChange;	// IMP=0x0010000000171867
- (void)_precheckConditionsAndPerformAction:(unsigned long long)arg1;	// IMP=0x0010000000171547
- (void)_startOSUpdateCheckForAction:(unsigned long long)arg1;	// IMP=0x00100000001713d1
- (_Bool)_serverAllowsAutoApplyUpdates;	// IMP=0x0010000000170cb8
- (void)_postVendorBagReloadContinueAutoApply;	// IMP=0x00100000001708fc
- (void)_reloadVendorBag;	// IMP=0x00100000001707ea
- (void)_dailyOSUpdateReportingTimerFired:(id)arg1;	// IMP=0x0010000000170608
- (void)_scheduleDailyOSUpdateReporting;	// IMP=0x0010000000170222
- (void)_osUpdateDelayedUpdateExpirationTimerFired:(id)arg1;	// IMP=0x0010000000170176
- (void)_scheduleOSUpdateCheckForExpiredDelay;	// IMP=0x001000000016fece
- (void)_osUpdateDarkWakeTimerFired:(id)arg1;	// IMP=0x001000000016fd28
- (void)_scheduleOSUpdateDarkWakeAt:(id)arg1;	// IMP=0x001000000016fc53
- (void)_cancelOSUpdateDarkWakeTimer;	// IMP=0x001000000016fbde
- (void)_scheduleOSUpdateTimerForNextDarkWake;	// IMP=0x001000000016f97a
- (void)_scheduleOSUpdateOnSleepCheck;	// IMP=0x001000000016f6c8
- (void)_scheduleOSUpdateCheck;	// IMP=0x001000000016f264
- (_Bool)_okToCheckForOSSoftwareUpdate;	// IMP=0x001000000016f25c
- (void)purgeAssetsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000016f1e7
- (void)purgeableAssetSpaceWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000016f172
- (void)notePlaybackStateChanged;	// IMP=0x001000000016ef4e
- (void)cancelOSSoftwareUpdate;	// IMP=0x001000000016ef04
- (void)installUpdate:(id)arg1 withOptions:(id)arg2 withResult:(CDUnknownBlockType)arg3;	// IMP=0x001000000016edcd
- (void)reallyPerformOSSoftwareRestore;	// IMP=0x001000000016ed95
- (void)purgeDownload:(CDUnknownBlockType)arg1;	// IMP=0x001000000016eb3a
- (void)cancelDownload:(CDUnknownBlockType)arg1;	// IMP=0x001000000016ea51
- (void)startDownload:(CDUnknownBlockType)arg1;	// IMP=0x001000000016e812
- (void)reallyPerformMDMOSSoftwareUpdateCheck;	// IMP=0x001000000016e7dd
- (void)reallyPerformOSSoftwareUpdateCheck;	// IMP=0x001000000016e7a8
- (void)checkForOSUpdatesWithOptions:(id)arg1 response:(CDUnknownBlockType)arg2;	// IMP=0x001000000016e69a
- (void)isUpdate:(id)arg1 readyForInstallation:(CDUnknownBlockType)arg2;	// IMP=0x001000000016e333
- (void)isOSSoftwareUpdateRunning:(CDUnknownBlockType)arg1;	// IMP=0x001000000016e2b0
- (void)setAssetDownloadIsDiscretionary:(_Bool)arg1;	// IMP=0x001000000016e25c
- (void)currentDownload:(CDUnknownBlockType)arg1;	// IMP=0x001000000016dfeb
- (void)isOSSoftwareUpdateDownloading:(CDUnknownBlockType)arg1;	// IMP=0x001000000016df68
- (void)isOSSoftwareUpdateChecking:(CDUnknownBlockType)arg1;	// IMP=0x001000000016dee5
- (void)startSoftwareUpdateMonitoring;	// IMP=0x001000000016dded
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x001000000016dda3
- (id)init;	// IMP=0x001000000016d97f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

