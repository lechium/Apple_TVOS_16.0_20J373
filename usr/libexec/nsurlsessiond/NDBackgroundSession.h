//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NDApplication, NDCallbackQueue, NDCredentialStorage, NSMutableArray, NSMutableDictionary, NSString, NSURL, NSURLSession, NSUUID, NSXPCConnection;
@protocol NDBackgroundSessionDelegate, NSXPCProxyCreating><NDBackgroundSessionClient, OS_dispatch_queue;

@interface NDBackgroundSession : NSObject
{
    NSURLSession *_userInitiatedSession;	// 8 = 0x8
    NSURLSession *_discretionaryPrioritySession;	// 16 = 0x10
    NDCredentialStorage *_credentialStorage;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_archiveQueue;	// 32 = 0x20
    NDApplication *_clientApplication;	// 40 = 0x28
    NDApplication *_connectedExtension;	// 48 = 0x30
    NSMutableDictionary *_tasksToIdentifiers;	// 56 = 0x38
    NSMutableDictionary *_identifiersToTasks;	// 64 = 0x40
    NSMutableDictionary *_identifiersToMonitors;	// 72 = 0x48
    NSMutableDictionary *_identifiersToStreams;	// 80 = 0x50
    NSMutableDictionary *_identifiersToStreamQueues;	// 88 = 0x58
    NSMutableArray *_outstandingTaskIDs;	// 96 = 0x60
    double _lastArchiveTime;	// 104 = 0x68
    _Bool _archiveWasDeferred;	// 112 = 0x70
    NSURL *_sessionDirectory;	// 120 = 0x78
    NSURL *_downloadDirectory;	// 128 = 0x80
    NSURL *_uploadsDirectory;	// 136 = 0x88
    _Bool _performsEVCertCheck;	// 144 = 0x90
    _Bool _clientImplementsWillSendRequest;	// 145 = 0x91
    _Bool _clientImplementsWillBeginDelayedRequest;	// 146 = 0x92
    _Bool _clientImplementsSessionChallenge;	// 147 = 0x93
    _Bool _clientImplementsTaskChallenge;	// 148 = 0x94
    _Bool _sendsLaunchEvents;	// 149 = 0x95
    _Bool _discretionary;	// 150 = 0x96
    _Bool _obliterated;	// 151 = 0x97
    _Bool _cleanedUp;	// 152 = 0x98
    _Bool _hasBeenSignalledToDeliverPendingEvents;	// 153 = 0x99
    _Bool _infersDiscretionary;	// 154 = 0x9a
    _Bool _shouldPullInitialCredentials;	// 155 = 0x9b
    _Bool _shouldElevateDiscretionaryPriority;	// 156 = 0x9c
    CDUnknownBlockType _completeReconnectionBlock;	// 160 = 0xa0
    int _clientPID;	// 168 = 0xa8
    NSXPCConnection *_xpcConn;	// 176 = 0xb0
    NSString *_watchExtensionBundleIdentifier;	// 184 = 0xb8
    _Bool _retryDataTasks;	// 192 = 0xc0
    NSObject<OS_dispatch_queue> *_workQueue;	// 200 = 0xc8
    NDCallbackQueue *_callbackQueue;	// 208 = 0xd0
    NDApplication *_monitoredApplication;	// 216 = 0xd8
    NSMutableDictionary *_identifiersToTaskInfo;	// 224 = 0xe0
    id <NSXPCProxyCreating><NDBackgroundSessionClient> _clientProxy;	// 232 = 0xe8
    id <NDBackgroundSessionDelegate> _delegate;	// 240 = 0xf0
    NSUUID *_uuid;	// 248 = 0xf8
    NSString *_identifier;	// 256 = 0x100
    NSString *_clientBundleID;	// 264 = 0x108
    NSString *_monitoredAppBundleID;	// 272 = 0x110
    NSString *_secondaryID;	// 280 = 0x118
    CDUnknownBlockType _invalidateReply;	// 288 = 0x120
    NSString *_sharedContainerIdentifier;	// 296 = 0x128
}

- (void).cxx_destruct;	// IMP=0x0020000000028229
@property(copy) NSString *sharedContainerIdentifier; // @synthesize sharedContainerIdentifier=_sharedContainerIdentifier;
@property(copy) CDUnknownBlockType invalidateReply; // @synthesize invalidateReply=_invalidateReply;
@property(readonly) NSString *secondaryID; // @synthesize secondaryID=_secondaryID;
@property(readonly) NSString *monitoredAppBundleID; // @synthesize monitoredAppBundleID=_monitoredAppBundleID;
@property(readonly) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly) NSUUID *uuid; // @synthesize uuid=_uuid;
@property __weak id <NDBackgroundSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_URLSession:(id)arg1 task:(id)arg2 getAuthHeadersForResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000027a87
- (void)_URLSession:(id)arg1 openFileAtPath:(id)arg2 mode:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000027606
- (id)_URLSession:(id)arg1 downloadTaskNeedsDownloadDirectory:(id)arg2;	// IMP=0x0010000000027589
- (void)_URLSession:(id)arg1 downloadTask:(id)arg2 didReceiveResponse:(id)arg3;	// IMP=0x0010000000027296
- (void)URLSession:(id)arg1 task:(id)arg2 _conditionalRequirementsChanged:(_Bool)arg3;	// IMP=0x00100000000270bc
- (void)URLSession:(id)arg1 task:(id)arg2 _isWaitingForConnectionWithReason:(long long)arg3;	// IMP=0x0010000000026eaa
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000002665c
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;	// IMP=0x00100000000264b2
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;	// IMP=0x001000000002623a
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;	// IMP=0x0010000000025ea1
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;	// IMP=0x0010000000025af6
- (void)URLSession:(id)arg1 dataTask:(id)arg2 _didReceiveData:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000255b2
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000024f12
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000024f02
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x0010000000023b8f
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;	// IMP=0x00100000000237c1
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;	// IMP=0x00100000000236a5
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000229ac
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000021a8b
- (_Bool)trustPassesExtendedValidation:(struct __SecTrust *)arg1;	// IMP=0x0010000000021842
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;	// IMP=0x00100000000216f7
- (void)invalidateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000214cf
- (void)resetStorageWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000021481
- (void)setTLSSessionCachePrefix:(id)arg1;	// IMP=0x001000000002141a
- (void)setDiscretionaryOverride:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000020f93
- (void)setTLSMaximumSupportedProtocolVersion:(unsigned short)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000020e50
- (void)setTLSMinimumSupportedProtocolVersion:(unsigned short)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000020d0d
- (void)setExpectedProgressTarget:(unsigned long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000020bc1
- (void)setBytesPerSecondLimit:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000020967
- (void)setLoadingPoolPriority:(double)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x001000000002060d
- (void)setPriority:(long long)arg1 forTaskWithIdentifier:(unsigned long long)arg2;	// IMP=0x001000000001fd8b
- (void)setDescription:(id)arg1 forTask:(unsigned long long)arg2;	// IMP=0x001000000001fc22
- (void)setPropertyOnStreamWithIdentifier:(unsigned long long)arg1 propDict:(id)arg2 propKey:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001f945
- (void)resumeTaskWithIdentifier:(unsigned long long)arg1 withProperties:(id)arg2;	// IMP=0x001000000001f4bc
- (void)suspendTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x001000000001f29f
- (void)cancelTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x001000000001f062
- (void)cancelTaskWithIdentifier:(unsigned long long)arg1 byProducingResumeData:(CDUnknownBlockType)arg2;	// IMP=0x001000000001ee72
- (void)avAggregateAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 serializedMediaSelections:(id)arg2 assetTitle:(id)arg3 assetArtworkData:(id)arg4 options:(id)arg5 childDownloadSessionIdentifier:(id)arg6 identifier:(unsigned long long)arg7 uniqueIdentifier:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x001000000001ee61
- (void)avAssetDownloadTaskWithDownloadToken:(unsigned long long)arg1 URL:(id)arg2 destinationURL:(id)arg3 temporaryDestinationURL:(id)arg4 assetTitle:(id)arg5 assetArtworkData:(id)arg6 options:(id)arg7 identifier:(unsigned long long)arg8 uniqueIdentifier:(id)arg9 taskKind:(unsigned long long)arg10 enableSPIDelegateCallbacks:(_Bool)arg11 reply:(CDUnknownBlockType)arg12;	// IMP=0x001000000001ee50
- (void)dataTaskWithRequest:(id)arg1 originalRequest:(id)arg2 identifier:(unsigned long long)arg3 uniqueIdentifier:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001ea9a
- (void)uploadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 fromFile:(id)arg3 sandboxExtensionData:(id)arg4 identifier:(unsigned long long)arg5 uniqueIdentifier:(id)arg6 potentialCredentials:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x001000000001e2ff
- (void)downloadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 downloadFilePath:(id)arg3 identifier:(unsigned long long)arg4 uniqueIdentifier:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000001dcf1
- (void)downloadTaskWithResumeData:(id)arg1 identifier:(unsigned long long)arg2 uniqueIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001d87b
- (void)pingForXPCObjectValidityWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001d870
- (void)performCommonSetupForTask:(id)arg1 taskInfo:(id)arg2 identifier:(unsigned long long)arg3 discretionaryStatus:(_Bool)arg4;	// IMP=0x001000000001d446
- (void)setupDASPropertiesOnTask:(id)arg1 taskInfo:(id)arg2 discretionaryStatus:(_Bool)arg3;	// IMP=0x001000000001ccd0
- (void)wakeUpClient:(long long)arg1;	// IMP=0x001000000001c561
- (void)clientAcknowledgedTerminalCallbackForTask:(unsigned long long)arg1;	// IMP=0x001000000001c243
- (void)errorOccurredDuringAuthCallbackDelivery:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c0fc
- (MISSING_TYPE *)errorOccurredDuringFinishedCallbackDelivery: /* Error: Ran out of types for this method. */;	// IMP=0x001000000001bfb2
- (id)getClientProxy;	// IMP=0x001000000001bfa1
- (id)inputStreamWithFileHandle:(id)arg1 taskIdentifier:(unsigned long long)arg2;	// IMP=0x001000000001bde7
- (id)makeTempUploadFile:(id)arg1 withExtensionData:(id)arg2;	// IMP=0x001000000001b89e
- (void)requeueTask:(unsigned long long)arg1;	// IMP=0x001000000001b88a
- (void)requeueTask:(unsigned long long)arg1 skipResume:(_Bool)arg2;	// IMP=0x001000000001b835
- (void)removeOutstandingTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x001000000001b7cd
- (void)addOutstandingTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x001000000001b765
- (void)enqueueTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x001000000001b75f
- (void)taskShouldSuspend:(unsigned long long)arg1;	// IMP=0x001000000001b4b9
- (void)taskShouldResume:(unsigned long long)arg1;	// IMP=0x001000000001b133
- (void)handleWillBeginDelayedRequestForTaskWithIdentifier:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a90f
- (void)handleEarliestBeginDateForTaskWithIdentifier:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a38a
- (void)cancelMonitorForTask:(unsigned long long)arg1;	// IMP=0x001000000001a295
- (_Bool)currentDiscretionaryStatus:(id)arg1 withOptionalTaskInfo:(id)arg2;	// IMP=0x00100000000198cf
- (long long)priorityForDiscretionaryStatus:(_Bool)arg1;	// IMP=0x00100000000198b9
- (id)getTLSSessionCachePrefix;	// IMP=0x001000000001987e
- (id)getTasksForReconnection;	// IMP=0x0010000000019725
- (void)fillInPropertiesForTaskInfo:(id)arg1 withTaskID:(id)arg2;	// IMP=0x0010000000019660
- (void)fillInByteCountsForTaskInfo:(id)arg1 withTaskID:(id)arg2;	// IMP=0x001000000001955a
- (void)allowReconnect;	// IMP=0x001000000001950c
- (void)reconnectClient:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000019207
- (void)clientDidDisconnect;	// IMP=0x0010000000018ea3
- (void)cancelTasksRequiringClientConnectionAndResumeUnstartedTasks;	// IMP=0x0010000000018896
- (_Bool)finalizeTaskCompletionWithSuppressedWake:(_Bool)arg1;	// IMP=0x0010000000018810
- (void)handleCompletionOfTask:(id)arg1 identifier:(unsigned long long)arg2 taskInfo:(id)arg3 isRecoverable:(_Bool)arg4 suppressWake:(_Bool)arg5;	// IMP=0x00100000000187ce
- (_Bool)clientIsActive;	// IMP=0x001000000001867a
- (_Bool)sessionHasOutstandingTasks;	// IMP=0x0010000000018563
- (void)removeUploadFileForTaskInfo:(id)arg1;	// IMP=0x00100000000184fc
- (void)removeDownloadFileForTaskInfo:(id)arg1;	// IMP=0x00100000000183a2
- (_Bool)retryTask:(id)arg1 originalError:(id)arg2 transactionMetrics:(id)arg3;	// IMP=0x0010000000017924
- (id)clientErrorForError:(id)arg1;	// IMP=0x00100000000176e5
- (id)restoreTasks:(_Bool *)arg1;	// IMP=0x001000000001756e
- (id)restoreTasksFromArchivedInfo:(id)arg1;	// IMP=0x001000000001740d
- (id)restoreTask:(id)arg1 isOutstanding:(_Bool *)arg2;	// IMP=0x0010000000016e32
- (id)restoreCompletedTask:(id)arg1;	// IMP=0x001000000001665b
- (id)restoreInProgressTask:(id)arg1;	// IMP=0x0010000000015def
- (id)createNewTaskFromInfo:(id)arg1;	// IMP=0x001000000001570c
- (void)ensureSessionDownloadDirectoryExists;	// IMP=0x0010000000015521
- (void)configureTask:(id)arg1 withTaskInfo:(id)arg2;	// IMP=0x001000000001529b
- (void)configureAdditionalPropertiesOnTask:(id)arg1 taskInfo:(id)arg2;	// IMP=0x00100000000150ce
- (id)sanitizeTaskProperties:(id)arg1;	// IMP=0x0010000000014483
- (id)adjustDiscretionaryStatusForTaskInfo:(id)arg1;	// IMP=0x00100000000143fa
- (void)updateTaskInfoBasedOnCurrentDiscretionaryStatus:(id)arg1;	// IMP=0x00100000000141c1
- (id)requestWithAdjustedWindowForTaskInfo:(id)arg1;	// IMP=0x0010000000013ddd
- (id)descriptionForTCPConnectionWaitingReason:(long long)arg1;	// IMP=0x0010000000013d86
- (id)descriptionForRequest:(id)arg1;	// IMP=0x0010000000013c48
- (id)descriptionForTaskWithIdentifier:(unsigned long long)arg1;	// IMP=0x0010000000013b6d
- (void)_onqueue_archiveTaskInfo;	// IMP=0x0010000000013a4b
- (void)archiveTimerFired;	// IMP=0x0010000000013a00
- (void)archiveTaskInfo:(_Bool)arg1;	// IMP=0x001000000001399e
- (id)tasksArchivePath;	// IMP=0x001000000001392f
- (void)obliterate;	// IMP=0x0010000000013666
- (void)cleanupSessionWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000013467
- (id)setupDownloadDirectory;	// IMP=0x0010000000013154
- (void)clientApplicationWasReinstalled;	// IMP=0x0010000000012b74
- (void)backgroundUpdatesEnabledForApplication:(id)arg1;	// IMP=0x0010000000012ae6
- (void)applicationWasSuspended:(id)arg1;	// IMP=0x0010000000012a58
- (_Bool)hasConnectedClient;	// IMP=0x00100000000128f5
- (void)setXPCConnection:(id)arg1;	// IMP=0x001000000001252a
- (id)sessionForDiscretionaryStatus:(_Bool)arg1;	// IMP=0x0010000000012519
- (id)initWithConfiguration:(id)arg1 bundleID:(id)arg2 isSpringBoardApp:(_Bool)arg3 downloadDirectory:(id)arg4 options:(id)arg5 clientProxy:(id)arg6 delegate:(id)arg7 workQueue:(id)arg8 archiveQueue:(id)arg9;	// IMP=0x0010000000011355
- (id)configurationWithClientConfiguration:(id)arg1 discretionary:(_Bool)arg2;	// IMP=0x0010000000010520
- (double)defaultWindowDurationForResourceTimeout:(double)arg1;	// IMP=0x0010000000010505

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

