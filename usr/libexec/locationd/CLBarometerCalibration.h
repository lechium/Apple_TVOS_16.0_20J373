//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <LocationSupport/CLIntersiloService.h>

@class CLBarometerCalibrationAbsoluteAltitude, CLBarometerCalibrationBiasEstimator, CLBarometerCalibrationSourceAggregator, CLTimer, MISSING_TYPE, NSMutableSet, NSString;
@protocol CLRoutineMonitorServiceProtocol;

@interface CLBarometerCalibration : CLIntersiloService
{
    array_c343414b fDataBuffers;	// 8 = 0x8
    struct array<CLBarometerCalibrationContextManager *, 9UL> _contextManagers;	// 440 = 0x1b8
    CLBarometerCalibrationSourceAggregator *_sourceAggregator;	// 512 = 0x200
    NSMutableSet *_clientSets[5];	// 520 = 0x208
    CLBarometerCalibrationBiasEstimator *_biasEstimator;	// 560 = 0x230
    CLTimer *_releaseAltimeterContextTimer;	// 568 = 0x238
    CLBarometerCalibrationAbsoluteAltitude *_latestAbsoluteAltitude;	// 576 = 0x240
    double _lastEstimatedBias;	// 584 = 0x248
    double _lastEstimatedBiasTimestamp;	// 592 = 0x250
    struct unique_ptr<CLOdometerNotifier_Type::Client, std::default_delete<CLOdometerNotifier_Type::Client>> fOdometerClient;	// 600 = 0x258
    _Bool _isSensorWet;	// 608 = 0x260
    MISSING_TYPE *fMotionStateObserverClient;	// 616 = 0x268
    unsigned long long _wetState;	// 624 = 0x270
    _Bool _isCompanionConnected;	// 632 = 0x278
    unsigned int _prevElevationAscended;	// 636 = 0x27c
    unsigned int _prevElevationDescended;	// 640 = 0x280
    int _sameElevationCounter;	// 644 = 0x284
    id <CLRoutineMonitorServiceProtocol> _routineMonitorProxy;	// 648 = 0x288
    _Bool _inVisit;	// 656 = 0x290
    _Bool _logLois;	// 657 = 0x291
    double _lastAltimeterClientRegisterTime;	// 664 = 0x298
    CLTimer *_fetchRoutineVisitsTimer;	// 672 = 0x2a0
    struct unique_ptr<CLDaemonStatus_Type::Client, std::default_delete<CLDaemonStatus_Type::Client>> fStatusClient;	// 680 = 0x2a8
    _Bool _charging;	// 688 = 0x2b0
    _Bool _inOutdoorWorkout;	// 689 = 0x2b1
    double _lastAltitude;	// 696 = 0x2b8
    double _lastAltitudeAccuracy;	// 704 = 0x2c0
    double _lastAltitudeTime;	// 712 = 0x2c8
}

+ (_Bool)isNotificationSupported:(unsigned long long)arg1;	// IMP=0x002000000046a2b0
+ (_Bool)isSupported;	// IMP=0x001000000046a236
+ (id)getSilo;	// IMP=0x001000000046a19d
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x001000000046a184
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x001000000046a127
- (id).cxx_construct;	// IMP=0x001000000046e7a7
- (void).cxx_destruct;	// IMP=0x001000000046e71f
@property(nonatomic, getter=getLastAltitudeTime) double lastAltitudeTime; // @synthesize lastAltitudeTime=_lastAltitudeTime;
@property(nonatomic, getter=getLastAltitudeAccuracy) double lastAltitudeAccuracy; // @synthesize lastAltitudeAccuracy=_lastAltitudeAccuracy;
@property(nonatomic, getter=getLastAltitude) double lastAltitude; // @synthesize lastAltitude=_lastAltitude;
@property(nonatomic, getter=isInOutdoorWorkout) _Bool inOutdoorWorkout; // @synthesize inOutdoorWorkout=_inOutdoorWorkout;
- (void)fetchLoiFromId:(id)arg1 atTimestamp:(double)arg2;	// IMP=0x001000000046db33
- (_Bool)isIHAAuthorized;	// IMP=0x001000000046dae7
- (void)fetchVisitStatusAtStart;	// IMP=0x001000000046d638
- (void)sendClientRegisterAnalyticsWithCurrentUncertainty:(double)arg1 andTime:(double)arg2;	// IMP=0x001000000046d266
- (_Bool)isInVisit;	// IMP=0x001000000046d256
- (void)announceMostRecentForcedGPS:(double)arg1;	// IMP=0x001000000046d239
- (void)onVisit:(id)arg1;	// IMP=0x001000000046ccd5
- (id)latestAbsoluteAltitude;	// IMP=0x001000000046ccc4
- (void)setAltimeterReleaseTimer;	// IMP=0x001000000046cc9f
- (void)setupAltimeterReleaseTimer;	// IMP=0x001000000046cb65
- (_Bool)inOutdoorWorkout;	// IMP=0x001000000046cb53
- (void)updateWetState;	// IMP=0x001000000046c9d7
- (void)updateCompanionConnected:(_Bool)arg1;	// IMP=0x001000000046c8c9
- (void)onDaemonStatusNotification:(int)arg1 data:(union NotificationData)arg2;	// IMP=0x001000000046c739
- (void)onMotionStateObserverNotification:(int)arg1 data:(NotificationData_913f635f)arg2;	// IMP=0x001000000046c4de
- (void)onOdometerNotification:(int)arg1 data:(union NotificationData)arg2;	// IMP=0x000000000046c17b
- (void)updateEstimatedWeatherWithCumulativeAscendingDelta:(unsigned int)arg1 andDescendingDelta:(unsigned int)arg2 andIosTimestamp:(double)arg3;	// IMP=0x001000000046c15e
- (void)updateBiasUncertaintyWithPressure:(double)arg1 andTime:(double)arg2 andLat:(double)arg3 andLon:(double)arg4;	// IMP=0x001000000046c141
- (id)copyCurrentBias;	// IMP=0x001000000046c124
- (void)logBuffers;	// IMP=0x001000000046ba8d
- (void)submersionMeasurementUpdate:(id)arg1;	// IMP=0x001000000046b970
- (void)submersionStateUpdate:(id)arg1;	// IMP=0x001000000046b853
- (void)absoluteAltitudeUpdate:(id)arg1;	// IMP=0x001000000046b6c2
- (void)stopTrack:(id)arg1;	// IMP=0x001000000046b283
- (void)startTrack:(id)arg1;	// IMP=0x001000000046b182
- (void)didUpdateDataBuffer:(unsigned long long)arg1;	// IMP=0x001000000046b131
- (void)acknowledgeNotification:(unsigned long long)arg1;	// IMP=0x001000000046b0e0
- (void)unregisterClient:(byref id)arg1 forNotification:(unsigned long long)arg2;	// IMP=0x001000000046af8a
- (void)registerClient:(byref id)arg1 forNotification:(unsigned long long)arg2;	// IMP=0x001000000046ac96
- (void)initAllDayContextManagers;	// IMP=0x001000000046ab52
- (void)releaseAllContextManagers;	// IMP=0x001000000046ab01
- (void)releaseContextManagersForNotification:(unsigned long long)arg1;	// IMP=0x001000000046aac9
- (void)initContextManagersForNotification:(unsigned long long)arg1;	// IMP=0x001000000046a9f1
- (void)releaseAndClearManager:(id *)arg1;	// IMP=0x001000000046a9bc
- (void)endService;	// IMP=0x001000000046a8c2
- (void)beginService;	// IMP=0x001000000046a418
- (id)init;	// IMP=0x001000000046a1f9
- (void)updateElevationBiasBetweenStartTime:(double)arg1 andEndTime:(double)arg2;	// IMP=0x00100000001d73ba

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

