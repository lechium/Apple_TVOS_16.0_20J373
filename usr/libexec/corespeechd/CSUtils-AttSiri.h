//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreSpeechFoundation/CSUtils.h>

@interface CSUtils (AttSiri)
+ (id)timeStampString;	// IMP=0x0010000000017446
+ (void)logMitigationFeatures:(id)arg1 forTask:(id)arg2 withModelOutput:(id)arg3 forMHRequestId:(id)arg4;	// IMP=0x0010000000016ae8
+ (_Bool)isRemoteDarwinWithDeviceId:(id)arg1;	// IMP=0x0010000000063d6a
+ (_Bool)hasRemoteBuiltInMic;	// IMP=0x0010000000063d62
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000063d7a
+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;	// IMP=0x0010000000063d72
+ (id)recordContextString:(id)arg1;	// IMP=0x0010000000070209
+ (_Bool)isValidRecordContext:(id)arg1;	// IMP=0x0010000000070201
+ (_Bool)isRecordContextJarvisButtonPress:(id)arg1;	// IMP=0x00100000000701a1
+ (_Bool)isRecordContextJarvisVoiceTrigger:(id)arg1;	// IMP=0x0010000000070141
+ (_Bool)isRecordContextRaiseToSpeak:(id)arg1;	// IMP=0x00100000000700e1
+ (_Bool)isRecordContextHearstDoubleTap:(id)arg1;	// IMP=0x0010000000070081
+ (_Bool)isRecordContextHearstVoiceTrigger:(id)arg1;	// IMP=0x0010000000070021
+ (_Bool)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;	// IMP=0x001000000006ffc1
+ (_Bool)isRecordContextAutoPrompt:(id)arg1;	// IMP=0x001000000006ff61
+ (_Bool)isRecordContextHomeButtonPress:(id)arg1;	// IMP=0x001000000006ff01
+ (_Bool)isRecordContextRemoraVoiceTrigger:(id)arg1;	// IMP=0x001000000006fea1
+ (_Bool)isRecordContextDarwinVoiceTrigger:(id)arg1;	// IMP=0x001000000006fe41
+ (_Bool)isRecordContextBuiltInVoiceTrigger:(id)arg1;	// IMP=0x001000000006fde1
+ (_Bool)isRecordContextVoiceTrigger:(id)arg1;	// IMP=0x001000000006fd23
+ (_Bool)extractArchiveFromDirectory:(id)arg1 toDir:(id)arg2;	// IMP=0x001000000007d170
+ (id)getSiriLanguageWithEndpointId:(id)arg1 fallbackLanguage:(id)arg2;	// IMP=0x001000000007e2b1
+ (id)getSiriLanguageWithFallback:(id)arg1;	// IMP=0x001000000007e1db
+ (_Bool)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000a9435
+ (id)audioPortSubtypeAsString:(unsigned int)arg1;	// IMP=0x00100000000bd134
+ (_Bool)isBluetoothAudioDeviceConnected;	// IMP=0x00100000000bcf7c
+ (_Bool)isHeadphoneDeviceWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x00100000000bcc2f
+ (_Bool)isHFPWithRecordRoute:(id)arg1;	// IMP=0x00100000000bcc10
+ (id)distributionDictionary:(id)arg1;	// IMP=0x00100000000d1992
+ (_Bool)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d5073
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000dd49f
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;	// IMP=0x00100000000dd3e5
+ (_Bool)machXPCConnection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x00100000000ddcf8
@end

