//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUTDeferredTaskQueue, IDSGameCenterData, IDSRegistration, IDSRegistrationPushHandler, IDSServiceProperties, MISSING_TYPE, NSArray, NSDate, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface IDSDAccount : NSObject
{
    NSMutableDictionary *_accountInfo;	// 8 = 0x8
    IDSRegistration *_registrationInfo;	// 16 = 0x10
    IDSServiceProperties *_service;	// 24 = 0x18
    NSString *_uniqueID;	// 32 = 0x20
    NSMutableArray *_setupHandlers;	// 40 = 0x28
    NSHashTable *_registrationListeners;	// 48 = 0x30
    IDSRegistrationPushHandler *_pushHandler;	// 56 = 0x38
    NSDate *_dateOfLastHandlesCheck;	// 64 = 0x40
    NSMutableSet *_localServices;	// 72 = 0x48
    unsigned int _disabledAutomatically:1;	// 80 = 0x50
    unsigned int _duringInit:1;	// 80 = 0x50
    unsigned int _shouldRequeryHandles:1;	// 80 = 0x50
    unsigned int _issuingDependentCheck:1;	// 80 = 0x50
    unsigned int _issuingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingDependentCheck:1;	// 80 = 0x50
    unsigned int _pendingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingReIdentify:1;	// 80 = 0x50
    unsigned int _pendingReRegister:1;	// 81 = 0x51
    unsigned int _isRegistrationActive:1;	// 81 = 0x51
    unsigned int _pendingAccountInfoBroadcast:1;	// 81 = 0x51
    unsigned int _isBeingRemoved:1;	// 81 = 0x51
    _Bool _isIssuingDependentCheck;	// 82 = 0x52
    CUTDeferredTaskQueue *_broadcastAccountInfoChangedTask;	// 88 = 0x58
}

+ (_Bool)dependentRegistration:(id)arg1 hasDependentRegistrationWithURI:(id)arg2 token:(id)arg3;	// IMP=0x002000000026b3b0
+ (void)dependentRegistration:(id)arg1 findDeviceUniqueID:(id *)arg2 btID:(id *)arg3 forURI:(id)arg4 token:(id)arg5 supportsLiveDelivery:(_Bool *)arg6;	// IMP=0x001000000026a4a0
+ (void)sendMessageWithSendParameters:(id)arg1 service:(id)arg2 threadContext:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000004f73b0
+ (void)_sendLocallyWithSendParameters:(id)arg1 service:(id)arg2 uriToLocalDestination:(id)arg3 data:(id)arg4 protobuf:(id)arg5 threadContext:(id)arg6 progressBlock:(CDUnknownBlockType)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000004f1da0
+ (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 threadContext:(id)arg4 sendParameters:(id)arg5;	// IMP=0x00100000004ed560
- (void).cxx_destruct;	// IMP=0x0010000000279980
@property(readonly, nonatomic) CUTDeferredTaskQueue *broadcastAccountInfoChangedTask; // @synthesize broadcastAccountInfoChangedTask=_broadcastAccountInfoChangedTask;
@property(nonatomic) _Bool isBeingRemoved; // @synthesize isBeingRemoved=_isBeingRemoved;
@property(readonly, nonatomic) _Bool isIssuingDependentCheck; // @synthesize isIssuingDependentCheck=_isIssuingDependentCheck;
@property(nonatomic) _Bool pendingDependentCheck; // @synthesize pendingDependentCheck=_pendingDependentCheck;
@property(nonatomic) _Bool wasDisabledAutomatically; // @synthesize wasDisabledAutomatically=_disabledAutomatically;
@property(readonly, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(readonly, nonatomic) IDSRegistration *registration; // @synthesize registration=_registrationInfo;
- (void)didUpdateProtocolForPairedDevice:(id)arg1;	// IMP=0x00100000002793b0
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x0010000000278e70
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x0010000000278920
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x0010000000278870
- (void)_notifyDelegatesAddedLocalDevice:(id)arg1;	// IMP=0x00100000002782a0
- (void)_notifyClientDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000278130
@property(readonly, retain, nonatomic) NSDictionary *accountSetupInfo;
- (id)smallDescription;	// IMP=0x0010000000277db0
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *linkedAccounts;
- (id)adHocAccounts;	// IMP=0x0010000000276b30
- (_Bool)forEachAdhocAccount:(CDUnknownBlockType)arg1;	// IMP=0x0010000000275d40
- (id)accountAndAdHocAccounts;	// IMP=0x0010000000275c80
- (void)_updateAccountWithAccountInfo:(id)arg1;	// IMP=0x0010000000274ed0
- (void);	// IMP=0x0010000000274e70
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2 interestedSubservices:(id)arg3;	// IMP=0x0010000000273c20
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2;	// IMP=0x0010000000273bb0
- (void)_broadcastAccountInfoChanged;	// IMP=0x0010000000273920
- (void)_notifyListenersWithChanges:(id)arg1;	// IMP=0x0010000000272010
- (void)_broadcastAccountMessageBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000271dc0
- (_Bool)isAdHocAccount;	// IMP=0x0010000000271d30
- (id)primaryServiceName;	// IMP=0x0010000000271c50
@property(readonly, nonatomic) IDSRegistration *primaryRegistration;
- (id)primaryAccountUniqueID;	// IMP=0x0010000000271ab0
- (id)primaryAccount;	// IMP=0x00100000002719f0
@property(readonly, nonatomic) long long lastRegistrationFailureError;
@property(readonly, nonatomic) NSDate *lastRegistrationFailureDate;
@property(readonly, nonatomic) NSDate *lastRegistrationSuccessDate;
@property(readonly, nonatomic) NSDate *lastGDRDate;
- (id)dependentRegistrationMatchingUUID:(id)arg1;	// IMP=0x0010000000271810
- (id)dependentRegistrationMatchingUUID:(id)arg1 includingTinker:(_Bool)arg2;	// IMP=0x00100000002713f0
@property(readonly, nonatomic) NSArray *registeredDevices;
@property(readonly, nonatomic) NSArray *dependentRegistrationsIncludingCurrentDevice;
- (id)dependentRegistrationsIncludingTinker:(_Bool)arg1;	// IMP=0x0010000000271090
@property(readonly, nonatomic) NSArray *dependentRegistrations;
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingCurrentDevice:(_Bool)arg2 includingTinker:(_Bool)arg3;	// IMP=0x001000000026ec20
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingTinker:(_Bool)arg2;	// IMP=0x001000000026eba0
@property(readonly, nonatomic) IDSDAccount *superAccount;
@property(readonly, nonatomic) NSDictionary *defaultPairedDependentRegistration;
- (id)defaultPairedDependentRegistrationIncludingTinker:(_Bool)arg1;	// IMP=0x001000000026dfd0
- (id)_fromIDFromDevice:(id)arg1 withCBUUID:(id)arg2 uniqueID:(id)arg3;	// IMP=0x001000000026d810
- (id)fromIDForCBUUID:(id)arg1 deviceID:(id)arg2;	// IMP=0x001000000026c090
- (_Bool)hasDependentRegistrationWithURI:(id)arg1 token:(id)arg2;	// IMP=0x001000000026be40
- (void)findDeviceUniqueID:(id *)arg1 btID:(id *)arg2 forURI:(id)arg3 token:(id)arg4 supportsLiveDelivery:(_Bool *)arg5;	// IMP=0x001000000026ae00
@property(readonly, nonatomic) _Bool isUsableForSending;
@property(readonly, nonatomic) _Bool hasEverRegistered;
- (id)_certForFromURI:(id)arg1;	// IMP=0x001000000026a0f0
- (_Bool)hasVettedAliasURI:(id)arg1;	// IMP=0x001000000026a030
- (_Bool)hasAliasURI:(id)arg1;	// IMP=0x0010000000269f30
@property(readonly, nonatomic) NSArray *uris;
@property(readonly, nonatomic) NSArray *aliasStrings;
- (void)setupAccountWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000269480
@property(readonly, nonatomic) _Bool isEnabled;
@property(readonly, nonatomic) _Bool shouldRegisterUsingDSHandle;
@property(readonly, nonatomic) _Bool shouldAutoRegisterAllHandles;
@property(readonly, nonatomic) _Bool isRegistered;
- (void)authenticationChanged;	// IMP=0x00100000002692a0
@property(retain, nonatomic) NSDate *expirationDate;
@property(nonatomic) _Bool isTemporary;
@property(readonly, nonatomic) int manateeRetryCount;
@property(readonly, nonatomic) _Bool shouldRegisterOnManateeAvailability;
@property(readonly, nonatomic) long long registrationError;
@property(readonly, nonatomic) int registrationErrorReason;
@property(readonly, nonatomic) int registrationStatus;
@property(retain, nonatomic) NSString *loginID;
@property(readonly, nonatomic) NSString *dsID;
@property(readonly, nonatomic) NSString *dsHandle;
@property(readonly, nonatomic) int accountType;
@property(nonatomic) _Bool isUserDisabled;
- (void)clearDisplayName;	// IMP=0x0010000000267fd0
@property(retain, nonatomic) NSString *displayName;
@property(retain, nonatomic) IDSGameCenterData *gameCenterData;
@property(retain, nonatomic) NSString *userUniqueIdentifier;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) IDSServiceProperties *service;
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000002674c0
- (void)dealloc;	// IMP=0x0010000000267040
- (void)cleanupAccount;	// IMP=0x0010000000267010
- (id)initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5;	// IMP=0x0010000000266ed0
- (id)initAdHocAccountWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6;	// IMP=0x0010000000266d70
- (id)_initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6 isAdHocAccount:(_Bool)arg7;	// IMP=0x0010000000266170
- (id)initWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3;	// IMP=0x0010000000265640
- (void)_setupAccount;	// IMP=0x00100000002640d0
- (void)_resetVariables;	// IMP=0x0010000000264050
- (void)_cleanupAccount;	// IMP=0x00100000002617f0
- (void)_notifyRegistrationListenersAccountDidUpdateRegisteredDevices;	// IMP=0x0010000000357b90
- (void)removeRegistrationListener:(id)arg1;	// IMP=0x0010000000357ae0
- (void)addRegistrationListener:(id)arg1;	// IMP=0x0010000000357a20
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x00100000003574d0
- (id)pushHandler;	// IMP=0x00100000003574a0
- (id)serviceType;	// IMP=0x0010000000357440
- (void)reportSpamMessage:(id)arg1 toURI:(id)arg2;	// IMP=0x0010000000357350
- (void)reportAction:(long long)arg1 ofTempURI:(id)arg2 fromURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000357260
- (void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 isBlackholed:(_Bool)arg3 messageServerTimestamp:(id)arg4 toURI:(id)arg5;	// IMP=0x0010000000357120
- (void)reportSpamWithMessages:(id)arg1 toURI:(id)arg2;	// IMP=0x0010000000357060
- (long long)validationStatusForAlias:(id)arg1;	// IMP=0x0010000000357000
- (id)aliases;	// IMP=0x0010000000356fd0
- (double)_maxSelectedButVettedGracePeriod;	// IMP=0x0010000000356c70
- (id)_allUserIntentWithDefaultReason:(_Bool)arg1;	// IMP=0x0010000000356110
- (void)_stopTrackingUserIntentOfAlias:(id)arg1;	// IMP=0x0010000000355db0
- (void)_setUserIntentState:(unsigned char)arg1 forAlias:(id)arg2 withReason:(unsigned char)arg3;	// IMP=0x0010000000355690
- (id)_userIntentDictForAlias:(id)arg1;	// IMP=0x00100000003551e0
- (unsigned char)unselectReasonForAlias:(id)arg1;	// IMP=0x00100000003550a0
- (void)loadAliasUserIntentMetadataIfNeeded;	// IMP=0x0010000000355060
- (unsigned char)currentAliasState:(id)arg1;	// IMP=0x0010000000354fa0
- (_Bool)wasRecentlySelectedAlias:(id)arg1;	// IMP=0x0010000000354f30
- (void)markAsWasSelectedAlias:(id)arg1;	// IMP=0x0010000000354ed0
- (void)markAsVettedAlias:(id)arg1;	// IMP=0x0010000000354e20
- (void)markAsUnvettedAlias:(id)arg1;	// IMP=0x0010000000354d70
- (void)markAsUnselectedAlias:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0010000000354d00
- (void)markAsSelectedAlias:(id)arg1;	// IMP=0x0010000000354ca0
- (id)invisibleAliases;	// IMP=0x0010000000354c20
- (id)vettedAliases;	// IMP=0x0010000000354ba0
- (void)reIdentify;	// IMP=0x0010000000354b70
- (void)reregister;	// IMP=0x0010000000354b40
- (void)_refreshRegistration;	// IMP=0x0010000000354750
- (void)validateProfile;	// IMP=0x0010000000353e00
- (void)_handleKTOptInStatusUpdateError:(long long)arg1;	// IMP=0x0010000000353d60
- (_Bool)updateKTOptInStatus:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000353a10
@property(readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property(readonly, nonatomic) NSArray *pseudonyms;
- (id)pseudonymForPseudonymURIString:(id)arg1;	// IMP=0x00100000003526d0
- (void)_removePseudonyms:(id)arg1;	// IMP=0x0010000000351e00
- (void)_removePseudonym:(id)arg1;	// IMP=0x0010000000351d30
- (void)_addPseudonym:(id)arg1;	// IMP=0x0010000000351440
- (void)_removeAllPseudonyms;	// IMP=0x0010000000351360
- (_Bool)revokePseudonym:(id)arg1 requestProperties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000350c80
- (_Bool)renewPseudonym:(id)arg1 forUpdatedExpiryEpoch:(double)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000003505f0
- (_Bool)provisionPseudonymForURI:(id)arg1 properties:(id)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000034fc30
- (void)_handlePseudonymProvisionError:(long long)arg1;	// IMP=0x001000000034fb10
- (void)refreshVettedAliases;	// IMP=0x001000000034f940
- (void)validateCredentialsWithDeliveryCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000034f890
- (void)deactivateAndPurgeIdentify;	// IMP=0x001000000034f1d0
- (void)unvalidateAliases:(id)arg1;	// IMP=0x001000000034ebf0
- (void)_unvalidateAliases:(id)arg1;	// IMP=0x001000000034ded0
- (void)validateAliases:(id)arg1;	// IMP=0x001000000034d8f0
- (void)_validateAliases:(id)arg1;	// IMP=0x001000000034d2e0
- (void)_validateAliases:(id)arg1 validateAlreadyValid:(_Bool)arg2;	// IMP=0x001000000034bd40
- (void)addAliases:(id)arg1;	// IMP=0x001000000034bbc0
- (void)_addAliases:(id)arg1;	// IMP=0x001000000034adf0
- (void)removeAliases:(id)arg1;	// IMP=0x001000000034acc0
- (void)_removeAliases:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x0010000000349cd0
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6;	// IMP=0x0010000000349bf0
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6 aliasProperties:(id)arg7;	// IMP=0x0010000000349490
- (long long)_validationStatusForAlias:(id)arg1;	// IMP=0x0010000000349060
- (id)_aliases;	// IMP=0x0010000000348f00
- (id)_aliasStrings;	// IMP=0x0010000000348bf0
- (void)_ignoreIncomingPushes;	// IMP=0x0010000000348bb0
- (void)_acceptIncomingPushes;	// IMP=0x0010000000348b70
- (void)center:(id)arg1 failedRegionValidation:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x0010000000348220
- (void)center:(id)arg1 succeededRegionValidation:(id)arg2 regionID:(id)arg3 phoneNumber:(id)arg4 extraContext:(id)arg5 verified:(_Bool)arg6;	// IMP=0x0010000000347690
- (void)center:(id)arg1 succeededCurrentEmailsRequest:(id)arg2 emailInfo:(id)arg3;	// IMP=0x0010000000346f50
- (void)center:(id)arg1 failedAuthentication:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x0010000000346580
- (void)center:(id)arg1 succeededAuthentication:(id)arg2;	// IMP=0x0010000000345cf0
- (void)center:(id)arg1 startedAuthenticating:(id)arg2;	// IMP=0x0010000000345710
- (void)registrationControllerNeedsNewRegistration:(id)arg1;	// IMP=0x00100000003453b0
- (void)registrationController:(id)arg1 deregistrationSucceeded:(id)arg2;	// IMP=0x0010000000344d30
- (void)registrationController:(id)arg1 deregistrationWillStart:(id)arg2;	// IMP=0x0010000000344830
- (void)registrationController:(id)arg1 registrationFailed:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x0010000000341f90
- (void)registrationController:(id)arg1 registrationSucceeded:(id)arg2;	// IMP=0x001000000033ff70
- (void)registrationController:(id)arg1 registrationUpdated:(id)arg2;	// IMP=0x001000000033f990
- (void)registrationController:(id)arg1 registrationWillStart:(id)arg2;	// IMP=0x001000000033f370
- (void)centerNeedsNewIdentification:(id)arg1;	// IMP=0x001000000033f330
- (void)center:(id)arg1 failedIdentification:(id)arg2 error:(long long)arg3;	// IMP=0x001000000033f2b0
- (void)center:(id)arg1 succeededIdentification:(id)arg2 phoneNumber:(id)arg3 token:(id)arg4;	// IMP=0x001000000033eeb0
- (unsigned long long)_unregistered130RetryInterval;	// IMP=0x001000000033ee80
- (void)_updateSessionsWithRegisteredURIs:(id)arg1 retryIfNotRegistered:(_Bool)arg2;	// IMP=0x001000000033e260
- (void)_updateSessionsWithRegisteredURIs:(id)arg1;	// IMP=0x001000000033e200
- (void)_updateSessionsForAllRegisteredURIs;	// IMP=0x001000000033e180
- (void)_flushTokensForRegisteredURIs:(id)arg1;	// IMP=0x001000000033d9a0
- (void)_processReceivedDependentRegistration:(id)arg1 oldDependentRegistrations:(id)arg2;	// IMP=0x001000000033c4d0
- (void)_issueDependentCheck;	// IMP=0x001000000033abc0
- (void)_issueCriticalDependentCheck;	// IMP=0x001000000033ab80
- (_Bool)_issueForcedDependentCheckIfPossible;	// IMP=0x001000000033aaf0
- (void)_saveAndNotifyGDRUpdate;	// IMP=0x001000000033a2a0
- (void)_notifyListenersAndSetDependentRegistrations:(id)arg1 onRegistrationInfo:(id)arg2;	// IMP=0x0010000000339f00
- (void)gdrReAuthenticateIfNecessary;	// IMP=0x0010000000339650
- (void)_clearGDRState;	// IMP=0x0010000000339500
- (MISSING_TYPE *)handler:flushCacheForURIs: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000338f50
- (void)handler:(id)arg1 profileHandlesUpdated:(id)arg2 status:(id)arg3 allowGDR:(id)arg4;	// IMP=0x0010000000337be0
- (void)handler:(id)arg1 profile:(id)arg2 deviceUpdated:(id)arg3 service:(id)arg4;	// IMP=0x00100000003365b0
- (void)_updateHandles:(_Bool)arg1;	// IMP=0x0010000000335520
- (void)_parseHandlesInfo:(id)arg1 currentAliases:(id)arg2 currentVettedAliases:(id)arg3;	// IMP=0x0010000000332240
- (void)handler:(id)arg1 reloadBag:(id)arg2;	// IMP=0x00100000003315a0
- (void)handler:(id)arg1 pushTokenChanged:(id)arg2;	// IMP=0x0010000000330ba0
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;	// IMP=0x0010000000330280
- (void)passwordUpdated;	// IMP=0x001000000032fae0
- (void)unregisterAccount;	// IMP=0x001000000032f550
- (void)_unregisterAccount;	// IMP=0x001000000032ebd0
- (void)registerAccount;	// IMP=0x001000000032e760
- (void)_registerAccount;	// IMP=0x001000000032d0a0
- (_Bool)_migrateRegistrationIfNeeded;	// IMP=0x001000000032c350
- (void)_retryRegister;	// IMP=0x001000000032c0d0
- (void)authenticateAccount;	// IMP=0x001000000032bb40
- (_Bool)_isPasswordPromptPermissibleDuringAuthentication;	// IMP=0x001000000032ba00
- (void)_authenticateAccount;	// IMP=0x001000000032afe0
- (void)deactivateRegistration;	// IMP=0x001000000032a1c0
- (void)activateRegistration;	// IMP=0x00100000003286f0
- (void)systemRestoreStateDidChange;	// IMP=0x0010000000328490
- (void)systemDidStartBackup;	// IMP=0x00100000003283a0
- (void)systemDidFinishMigration;	// IMP=0x00100000003282c0
- (void)_reregister;	// IMP=0x0010000000328290
- (void)_reregisterAndReidentify:(_Bool)arg1;	// IMP=0x00100000003278a0
- (void)_removeAuthenticationCredentialsIncludingAuthToken:(_Bool)arg1;	// IMP=0x0010000000327140
- (void)_removeAuthenticationCredentials;	// IMP=0x0010000000327110
- (void)_reregisterAndReProvision;	// IMP=0x0010000000326b60
- (void)_reAuthenticate;	// IMP=0x0010000000326ad0
- (_Bool)_stopRegistrationAgent;	// IMP=0x0010000000326810
- (void)_updateRegistrationStatusWithError:(long long)arg1 info:(id)arg2;	// IMP=0x0010000000324610
- (void)setRegistrationStatus:(int)arg1 error:(long long)arg2 alertInfo:(id)arg3;	// IMP=0x0010000000323f20
- (void)_checkRegistration;	// IMP=0x00100000003225a0
- (void)_updateVettedAliases:(id)arg1 emailInfo:(id)arg2 addToCurrentHandlesIfNeeded:(_Bool)arg3;	// IMP=0x0010000000321780
- (void)_updatePseudonymsFromEmailInfo:(id)arg1;	// IMP=0x0010000000320ad0
- (void)_keychainMigrationComplete:(id)arg1;	// IMP=0x0010000000320360
- (void)_needsEncryptionIdentityRoll:(id)arg1;	// IMP=0x0010000000320240
- (void)_identityGenerated:(id)arg1;	// IMP=0x0010000000320120
- (void)_identityRebuilt:(id)arg1;	// IMP=0x0010000000320000
- (void)_deregisterDeviceCenterNotifications;	// IMP=0x001000000031fe60
- (void)_registerForDeviceCenterNotifications;	// IMP=0x001000000031fc80
- (void)_registrationAbilityChanged:(id)arg1;	// IMP=0x001000000031f9c0
- (_Bool)isRegistrationActive;	// IMP=0x001000000031f990
- (_Bool)isDeviceAuthenticated;	// IMP=0x001000000031f930
- (_Bool)isDeviceRegistered;	// IMP=0x001000000031f830
- (void)refreshAdHocServiceNames;	// IMP=0x001000000031f000
- (_Bool)_rebuildRegistrationInfo:(_Bool)arg1;	// IMP=0x001000000031a220
- (int)_neededRegistrationType;	// IMP=0x001000000031a190
- (void)_updateCallerIDToTemporaryPhone;	// IMP=0x0010000000319d80
- (void)_updatePhoneNumberCallerID;	// IMP=0x0010000000319560
- (_Bool)_hasBudgetForForcedGDR;	// IMP=0x0010000000319390
- (void)_updatePerformedForcedGDRDate;	// IMP=0x00100000003191f0
- (id)_performedForcedGDRDatePeriod;	// IMP=0x0010000000319060
- (void)_clearForcedGDRDate;	// IMP=0x0010000000319000
- (void)_clearForcedGDRCount;	// IMP=0x0010000000318fa0
- (void)_incrementForcedGDRCount;	// IMP=0x0010000000318ef0
- (int)_currentForcedGDRCount;	// IMP=0x0010000000318e60
- (_Bool)_isBuddyShowing;	// IMP=0x0010000000318e30
- (id)userDefaults;	// IMP=0x0010000000318e00
- (id)systemMonitor;	// IMP=0x0010000000318dd0
- (id)peerIDManager;	// IMP=0x0010000000318da0
- (id)serviceController;	// IMP=0x0010000000318d70
- (id)accountController;	// IMP=0x0010000000318d40
- (id)appleIDNotificationCenter;	// IMP=0x0010000000318d10
- (id)registrationCenter;	// IMP=0x0010000000318ce0
- (_Bool)shouldIncludeDefaultDeviceAsDestinationForMessageForFromID:(id)arg1;	// IMP=0x001000000051d8c0
- (id)pairingManager;	// IMP=0x001000000051d890
- (void)decryptMessageData:(id)arg1 myURI:(id)arg2 fromURI:(id)arg3 token:(id)arg4 groupID:(id)arg5 encryptionType:(long long)arg6 isLiveRetry:(_Bool)arg7 replayKey:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x001000000051caf0
- (void)sendMessage:(id)arg1 params:(id)arg2 bulkedPayload:(id)arg3 fromID:(id)arg4 toDestinations:(id)arg5 useDictAsTopLevel:(_Bool)arg6 dataToEncrypt:(id)arg7 encryptPayload:(_Bool)arg8 wantsResponse:(_Bool)arg9 expirationDate:(id)arg10 command:(id)arg11 wantsDeliveryStatus:(_Bool)arg12 wantsCertifiedDelivery:(_Bool)arg13 deliveryStatusContext:(id)arg14 messageUUID:(id)arg15 priority:(long long)arg16 localDelivery:(_Bool)arg17 disallowRefresh:(_Bool)arg18 willSendBlock:(CDUnknownBlockType)arg19 completionBlock:(CDUnknownBlockType)arg20;	// IMP=0x001000000051c220
- (void)sendMessageWithSendParameters:(id)arg1 willSendBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000516470
- (void)_rapportSendWithSendParameters:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000515f20
- (void)_sendRemotelyWithSendParameters:(id)arg1 data:(id)arg2 protobuf:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x001000000050cf00
- (void)_sendLocallyWithSendParameters:(id)arg1 uriToLocalDestination:(id)arg2 data:(id)arg3 protobuf:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000005080f0
- (id)utunDeliveryController;	// IMP=0x00100000005080c0
- (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 rapportDestinations:(id *)arg4 sendParameters:(id)arg5;	// IMP=0x00100000005031d0
- (void)sendServerMessage:(id)arg1 command:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000005027e0
- (void)_sendMessageWithSendParametersOnMainThread:(id)arg1 filteredDestinations:(id)arg2 data:(id)arg3 compressedData:(id)arg4 protobufToSend:(id)arg5 willSendBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00100000005000c0
- (id)newSendMessageContext;	// IMP=0x00100000004ff840
- (long long)maxRemoteMessagingPayloadSize;	// IMP=0x00100000004ff7a0

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

